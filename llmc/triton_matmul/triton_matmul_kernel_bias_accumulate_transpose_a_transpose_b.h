/*
 * WARNING: This is an autogenerated file. DO NOT EDIT.
 * This file was generated by generate_kernels.sh which intern launches compile_matmul_kernel.py */
#pragma once

#include <string>

const std::string TRITON_MATMUL_KERNEL_15_SOURCE_PTX = R"(
//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	matmul_kernel_bias_accumulate_transpose_a_transpose_b
.extern .shared .align 16 .b8 global_smem[];

.visible .entry matmul_kernel_bias_accumulate_transpose_a_transpose_b(
	.param .u64 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_0,
	.param .u64 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_1,
	.param .u64 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_2,
	.param .u64 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_3,
	.param .u32 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_4,
	.param .u32 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_5,
	.param .u32 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_6,
	.param .u32 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_7,
	.param .u32 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_8,
	.param .u32 matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_9
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<166>;
	.reg .b16 	%rs<789>;
	.reg .b32 	%r<1839>;
	.reg .b64 	%rd<136>;
	.loc	1 41 0
$L__func_begin0:
	.loc	1 41 0

	ld.param.u32 	%r203, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_6];
	ld.param.u32 	%r202, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_5];
	ld.param.u64 	%rd35, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_3];
	ld.param.u64 	%rd135, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_1];
	ld.param.u64 	%rd64, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_0];
$L__tmp0:
	.loc	1 57 24
	// begin inline asm
	mov.u32 %r204, %ctaid.x;
	// end inline asm
	ld.param.u32 	%r397, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_4];
$L__tmp1:
	.loc	2 40 22
	add.s32 	%r398, %r397, 127;
	ld.param.u64 	%rd65, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_2];
	.loc	2 40 28
	shr.s32 	%r399, %r398, 31;
	shr.u32 	%r400, %r399, 25;
	add.s32 	%r401, %r398, %r400;
	shr.s32 	%r402, %r401, 7;
$L__tmp2:
	.loc	2 40 22
	add.s32 	%r403, %r202, 255;
	.loc	2 40 28
	shr.s32 	%r404, %r403, 31;
	shr.u32 	%r405, %r404, 24;
	add.s32 	%r406, %r403, %r405;
	shr.s32 	%r407, %r406, 8;
$L__tmp3:
	.loc	1 60 38
	shl.b32 	%r409, %r407, 3;
	ld.param.u32 	%r410, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_7];
	ld.param.u32 	%r411, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_8];
	.loc	1 61 22
	div.s32 	%r412, %r204, %r409;
	ld.param.u32 	%r413, [matmul_kernel_bias_accumulate_transpose_a_transpose_b_param_9];
	.loc	1 62 29
	shl.b32 	%r414, %r412, 3;
	.loc	1 63 35
	sub.s32 	%r415, %r402, %r414;
	.loc	1 63 48
	min.s32 	%r416, %r415, 8;
	.loc	1 64 33
	rem.s32 	%r417, %r204, %r416;
	.loc	1 64 27
	add.s32 	%r418, %r414, %r417;
	mul.lo.s32 	%r419, %r412, %r409;
	sub.s32 	%r420, %r204, %r419;
	.loc	1 65 40
	div.s32 	%r421, %r420, %r416;
	.loc	1 74 23
	shl.b32 	%r422, %r418, 7;
	.loc	1 74 51
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 31;
	shl.b32 	%r423, %r1, 3;
	and.b32  	%r3, %r423, 24;
	and.b32  	%r424, %r423, 120;
	bfe.u32 	%r4, %r1, 5, 3;
	.loc	1 74 38
	or.b32  	%r425, %r422, %r424;
	or.b32  	%r426, %r422, %r4;
	or.b32  	%r427, %r426, 8;
	or.b32  	%r428, %r426, 16;
	or.b32  	%r429, %r426, 24;
	or.b32  	%r430, %r426, 32;
	or.b32  	%r431, %r426, 40;
	or.b32  	%r432, %r426, 48;
	or.b32  	%r433, %r426, 56;
	or.b32  	%r434, %r426, 64;
	or.b32  	%r435, %r426, 72;
	or.b32  	%r436, %r426, 80;
	or.b32  	%r437, %r426, 88;
	or.b32  	%r438, %r426, 96;
	or.b32  	%r439, %r426, 104;
	or.b32  	%r440, %r426, 112;
	or.b32  	%r441, %r426, 120;
	.loc	1 74 68
	rem.s32 	%r442, %r425, %r397;
	.loc	1 75 23
	shl.b32 	%r5, %r421, 8;
	.loc	1 75 51
	and.b32  	%r443, %r423, 248;
	shr.u32 	%r444, %r1, 2;
	bfe.u32 	%r445, %r1, 2, 6;
	or.b32  	%r446, %r445, 64;
	or.b32  	%r447, %r445, 128;
	or.b32  	%r448, %r445, 192;
	.loc	1 75 38
	or.b32  	%r449, %r5, %r443;
	or.b32  	%r450, %r5, %r445;
	or.b32  	%r451, %r5, %r446;
	or.b32  	%r452, %r5, %r447;
	or.b32  	%r453, %r5, %r448;
	.loc	1 75 68
	rem.s32 	%r454, %r450, %r202;
	rem.s32 	%r455, %r451, %r202;
	rem.s32 	%r456, %r452, %r202;
	rem.s32 	%r457, %r453, %r202;
	.loc	1 77 60
	bfe.u32 	%r6, %r1, 4, 4;
	or.b32  	%r458, %r6, 16;
	.loc	1 77 71
	shl.b32 	%r459, %r410, 4;
	.loc	1 77 53
	mad.lo.s32 	%r460, %r6, %r410, %r442;
	add.s32 	%r461, %r460, %r459;
	.loc	1 77 22
	mul.wide.s32 	%rd66, %r460, 2;
	add.s64 	%rd52, %rd64, %rd66;
	mul.wide.s32 	%rd67, %r461, 2;
	add.s64 	%rd53, %rd64, %rd67;
	.loc	1 78 52
	mad.lo.s32 	%r462, %r454, %r411, %r3;
	mad.lo.s32 	%r463, %r455, %r411, %r3;
	mad.lo.s32 	%r464, %r456, %r411, %r3;
	mad.lo.s32 	%r465, %r457, %r411, %r3;
	.loc	1 78 22
	mul.wide.s32 	%rd68, %r462, 2;
	add.s64 	%rd54, %rd135, %rd68;
	mul.wide.s32 	%rd69, %r463, 2;
	add.s64 	%rd55, %rd135, %rd69;
	mul.wide.s32 	%rd70, %r464, 2;
	add.s64 	%rd56, %rd135, %rd70;
	mul.wide.s32 	%rd71, %r465, 2;
	add.s64 	%rd57, %rd135, %rd71;
	.loc	1 82 33
	mul.lo.s32 	%r466, %r426, %r413;
	shl.b32 	%r467, %r413, 3;
	add.s32 	%r468, %r466, %r467;
	add.s32 	%r469, %r468, %r467;
	add.s32 	%r470, %r469, %r467;
	add.s32 	%r471, %r470, %r467;
	add.s32 	%r472, %r471, %r467;
	add.s32 	%r473, %r472, %r467;
	add.s32 	%r474, %r473, %r467;
	add.s32 	%r475, %r474, %r467;
	add.s32 	%r476, %r475, %r467;
	add.s32 	%r477, %r476, %r467;
	add.s32 	%r478, %r477, %r467;
	add.s32 	%r479, %r478, %r467;
	add.s32 	%r480, %r479, %r467;
	add.s32 	%r481, %r480, %r467;
	add.s32 	%r482, %r481, %r467;
	.loc	1 82 21
	mul.wide.s32 	%rd72, %r466, 2;
	add.s64 	%rd73, %rd65, %rd72;
	mul.wide.s32 	%rd74, %r468, 2;
	add.s64 	%rd75, %rd65, %rd74;
	mul.wide.s32 	%rd76, %r469, 2;
	add.s64 	%rd77, %rd65, %rd76;
	mul.wide.s32 	%rd78, %r470, 2;
	add.s64 	%rd79, %rd65, %rd78;
	mul.wide.s32 	%rd80, %r471, 2;
	add.s64 	%rd81, %rd65, %rd80;
	mul.wide.s32 	%rd82, %r472, 2;
	add.s64 	%rd83, %rd65, %rd82;
	mul.wide.s32 	%rd84, %r473, 2;
	add.s64 	%rd85, %rd65, %rd84;
	mul.wide.s32 	%rd86, %r474, 2;
	add.s64 	%rd87, %rd65, %rd86;
	mul.wide.s32 	%rd88, %r475, 2;
	add.s64 	%rd89, %rd65, %rd88;
	mul.wide.s32 	%rd90, %r476, 2;
	add.s64 	%rd91, %rd65, %rd90;
	mul.wide.s32 	%rd92, %r477, 2;
	add.s64 	%rd93, %rd65, %rd92;
	mul.wide.s32 	%rd94, %r478, 2;
	add.s64 	%rd95, %rd65, %rd94;
	mul.wide.s32 	%rd96, %r479, 2;
	add.s64 	%rd97, %rd65, %rd96;
	mul.wide.s32 	%rd98, %r480, 2;
	add.s64 	%rd99, %rd65, %rd98;
	mul.wide.s32 	%rd100, %r481, 2;
	add.s64 	%rd101, %rd65, %rd100;
	mul.wide.s32 	%rd102, %r482, 2;
	add.s64 	%rd103, %rd65, %rd102;
	.loc	1 82 52
	mul.wide.s32 	%rd104, %r449, 2;
	add.s64 	%rd117, %rd73, %rd104;
	add.s64 	%rd118, %rd75, %rd104;
	add.s64 	%rd119, %rd77, %rd104;
	add.s64 	%rd120, %rd79, %rd104;
	add.s64 	%rd121, %rd81, %rd104;
	add.s64 	%rd122, %rd83, %rd104;
	add.s64 	%rd123, %rd85, %rd104;
	add.s64 	%rd124, %rd87, %rd104;
	add.s64 	%rd125, %rd89, %rd104;
	add.s64 	%rd126, %rd91, %rd104;
	add.s64 	%rd127, %rd93, %rd104;
	add.s64 	%rd128, %rd95, %rd104;
	add.s64 	%rd129, %rd97, %rd104;
	add.s64 	%rd130, %rd99, %rd104;
	add.s64 	%rd131, %rd101, %rd104;
	add.s64 	%rd132, %rd103, %rd104;
	.loc	1 83 33
	setp.lt.s32 	%p109, %r426, %r397;
	setp.lt.s32 	%p110, %r427, %r397;
	setp.lt.s32 	%p111, %r428, %r397;
	setp.lt.s32 	%p112, %r429, %r397;
	setp.lt.s32 	%p113, %r430, %r397;
	setp.lt.s32 	%p114, %r431, %r397;
	setp.lt.s32 	%p115, %r432, %r397;
	setp.lt.s32 	%p116, %r433, %r397;
	setp.lt.s32 	%p117, %r434, %r397;
	setp.lt.s32 	%p118, %r435, %r397;
	setp.lt.s32 	%p119, %r436, %r397;
	setp.lt.s32 	%p120, %r437, %r397;
	setp.lt.s32 	%p121, %r438, %r397;
	setp.lt.s32 	%p122, %r439, %r397;
	setp.lt.s32 	%p123, %r440, %r397;
	setp.lt.s32 	%p124, %r441, %r397;
	.loc	1 83 58
	setp.lt.s32 	%p125, %r449, %r202;
	.loc	1 83 39
	and.pred  	%p150, %p109, %p125;
	and.pred  	%p151, %p110, %p125;
	and.pred  	%p152, %p111, %p125;
	and.pred  	%p153, %p112, %p125;
	and.pred  	%p154, %p113, %p125;
	and.pred  	%p155, %p114, %p125;
	and.pred  	%p156, %p115, %p125;
	and.pred  	%p157, %p116, %p125;
	and.pred  	%p158, %p117, %p125;
	and.pred  	%p159, %p118, %p125;
	and.pred  	%p160, %p119, %p125;
	and.pred  	%p161, %p120, %p125;
	and.pred  	%p162, %p121, %p125;
	and.pred  	%p163, %p122, %p125;
	and.pred  	%p164, %p123, %p125;
	and.pred  	%p165, %p124, %p125;
	mov.b32 	%r1836, 0;
	.loc	1 89 30
	// begin inline asm
	mov.u32 %r205, 0x0;
	mov.u32 %r206, 0x0;
	mov.u32 %r207, 0x0;
	mov.u32 %r208, 0x0;
	@%p150 ld.global.v4.b32 { %r205, %r206, %r207, %r208 }, [ %rd117 + 0 ];
	@!%p150 mov.u32 %r205, %r1836;
	@!%p150 mov.u32 %r206, %r1836;
	@!%p150 mov.u32 %r207, %r1836;
	@!%p150 mov.u32 %r208, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r213, 0x0;
	mov.u32 %r214, 0x0;
	mov.u32 %r215, 0x0;
	mov.u32 %r216, 0x0;
	@%p151 ld.global.v4.b32 { %r213, %r214, %r215, %r216 }, [ %rd118 + 0 ];
	@!%p151 mov.u32 %r213, %r1836;
	@!%p151 mov.u32 %r214, %r1836;
	@!%p151 mov.u32 %r215, %r1836;
	@!%p151 mov.u32 %r216, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r221, 0x0;
	mov.u32 %r222, 0x0;
	mov.u32 %r223, 0x0;
	mov.u32 %r224, 0x0;
	@%p152 ld.global.v4.b32 { %r221, %r222, %r223, %r224 }, [ %rd119 + 0 ];
	@!%p152 mov.u32 %r221, %r1836;
	@!%p152 mov.u32 %r222, %r1836;
	@!%p152 mov.u32 %r223, %r1836;
	@!%p152 mov.u32 %r224, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r229, 0x0;
	mov.u32 %r230, 0x0;
	mov.u32 %r231, 0x0;
	mov.u32 %r232, 0x0;
	@%p153 ld.global.v4.b32 { %r229, %r230, %r231, %r232 }, [ %rd120 + 0 ];
	@!%p153 mov.u32 %r229, %r1836;
	@!%p153 mov.u32 %r230, %r1836;
	@!%p153 mov.u32 %r231, %r1836;
	@!%p153 mov.u32 %r232, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r237, 0x0;
	mov.u32 %r238, 0x0;
	mov.u32 %r239, 0x0;
	mov.u32 %r240, 0x0;
	@%p154 ld.global.v4.b32 { %r237, %r238, %r239, %r240 }, [ %rd121 + 0 ];
	@!%p154 mov.u32 %r237, %r1836;
	@!%p154 mov.u32 %r238, %r1836;
	@!%p154 mov.u32 %r239, %r1836;
	@!%p154 mov.u32 %r240, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r245, 0x0;
	mov.u32 %r246, 0x0;
	mov.u32 %r247, 0x0;
	mov.u32 %r248, 0x0;
	@%p155 ld.global.v4.b32 { %r245, %r246, %r247, %r248 }, [ %rd122 + 0 ];
	@!%p155 mov.u32 %r245, %r1836;
	@!%p155 mov.u32 %r246, %r1836;
	@!%p155 mov.u32 %r247, %r1836;
	@!%p155 mov.u32 %r248, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r253, 0x0;
	mov.u32 %r254, 0x0;
	mov.u32 %r255, 0x0;
	mov.u32 %r256, 0x0;
	@%p156 ld.global.v4.b32 { %r253, %r254, %r255, %r256 }, [ %rd123 + 0 ];
	@!%p156 mov.u32 %r253, %r1836;
	@!%p156 mov.u32 %r254, %r1836;
	@!%p156 mov.u32 %r255, %r1836;
	@!%p156 mov.u32 %r256, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r261, 0x0;
	mov.u32 %r262, 0x0;
	mov.u32 %r263, 0x0;
	mov.u32 %r264, 0x0;
	@%p157 ld.global.v4.b32 { %r261, %r262, %r263, %r264 }, [ %rd124 + 0 ];
	@!%p157 mov.u32 %r261, %r1836;
	@!%p157 mov.u32 %r262, %r1836;
	@!%p157 mov.u32 %r263, %r1836;
	@!%p157 mov.u32 %r264, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r269, 0x0;
	mov.u32 %r270, 0x0;
	mov.u32 %r271, 0x0;
	mov.u32 %r272, 0x0;
	@%p158 ld.global.v4.b32 { %r269, %r270, %r271, %r272 }, [ %rd125 + 0 ];
	@!%p158 mov.u32 %r269, %r1836;
	@!%p158 mov.u32 %r270, %r1836;
	@!%p158 mov.u32 %r271, %r1836;
	@!%p158 mov.u32 %r272, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r277, 0x0;
	mov.u32 %r278, 0x0;
	mov.u32 %r279, 0x0;
	mov.u32 %r280, 0x0;
	@%p159 ld.global.v4.b32 { %r277, %r278, %r279, %r280 }, [ %rd126 + 0 ];
	@!%p159 mov.u32 %r277, %r1836;
	@!%p159 mov.u32 %r278, %r1836;
	@!%p159 mov.u32 %r279, %r1836;
	@!%p159 mov.u32 %r280, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r285, 0x0;
	mov.u32 %r286, 0x0;
	mov.u32 %r287, 0x0;
	mov.u32 %r288, 0x0;
	@%p160 ld.global.v4.b32 { %r285, %r286, %r287, %r288 }, [ %rd127 + 0 ];
	@!%p160 mov.u32 %r285, %r1836;
	@!%p160 mov.u32 %r286, %r1836;
	@!%p160 mov.u32 %r287, %r1836;
	@!%p160 mov.u32 %r288, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r293, 0x0;
	mov.u32 %r294, 0x0;
	mov.u32 %r295, 0x0;
	mov.u32 %r296, 0x0;
	@%p161 ld.global.v4.b32 { %r293, %r294, %r295, %r296 }, [ %rd128 + 0 ];
	@!%p161 mov.u32 %r293, %r1836;
	@!%p161 mov.u32 %r294, %r1836;
	@!%p161 mov.u32 %r295, %r1836;
	@!%p161 mov.u32 %r296, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r301, 0x0;
	mov.u32 %r302, 0x0;
	mov.u32 %r303, 0x0;
	mov.u32 %r304, 0x0;
	@%p162 ld.global.v4.b32 { %r301, %r302, %r303, %r304 }, [ %rd129 + 0 ];
	@!%p162 mov.u32 %r301, %r1836;
	@!%p162 mov.u32 %r302, %r1836;
	@!%p162 mov.u32 %r303, %r1836;
	@!%p162 mov.u32 %r304, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r309, 0x0;
	mov.u32 %r310, 0x0;
	mov.u32 %r311, 0x0;
	mov.u32 %r312, 0x0;
	@%p163 ld.global.v4.b32 { %r309, %r310, %r311, %r312 }, [ %rd130 + 0 ];
	@!%p163 mov.u32 %r309, %r1836;
	@!%p163 mov.u32 %r310, %r1836;
	@!%p163 mov.u32 %r311, %r1836;
	@!%p163 mov.u32 %r312, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r317, 0x0;
	mov.u32 %r318, 0x0;
	mov.u32 %r319, 0x0;
	mov.u32 %r320, 0x0;
	@%p164 ld.global.v4.b32 { %r317, %r318, %r319, %r320 }, [ %rd131 + 0 ];
	@!%p164 mov.u32 %r317, %r1836;
	@!%p164 mov.u32 %r318, %r1836;
	@!%p164 mov.u32 %r319, %r1836;
	@!%p164 mov.u32 %r320, %r1836;
	// end inline asm
	// begin inline asm
	mov.u32 %r325, 0x0;
	mov.u32 %r326, 0x0;
	mov.u32 %r327, 0x0;
	mov.u32 %r328, 0x0;
	@%p165 ld.global.v4.b32 { %r325, %r326, %r327, %r328 }, [ %rd132 + 0 ];
	@!%p165 mov.u32 %r325, %r1836;
	@!%p165 mov.u32 %r326, %r1836;
	@!%p165 mov.u32 %r327, %r1836;
	@!%p165 mov.u32 %r328, %r1836;
	// end inline asm
$L__tmp4:
	.loc	2 40 22
	add.s32 	%r483, %r203, 31;
$L__tmp5:
	.loc	1 102 33
	shl.b32 	%r487, %r410, 5;
	.loc	1 93 22
	setp.lt.s32 	%p126, %r483, 32;
	setp.gt.s32 	%p127, %r483, 31;
	.loc	1 96 72
	setp.lt.s32 	%p128, %r6, %r203;
	setp.lt.s32 	%p129, %r458, %r203;
	.loc	1 96 20
	shr.u32 	%r488, %r1, 1;
	and.b32  	%r489, %r488, 56;
	xor.b32  	%r490, %r489, %r424;
	shl.b32 	%r491, %r6, 7;
	or.b32  	%r72, %r490, %r491;
	shl.b32 	%r492, %r72, 1;
	mov.u32 	%r493, global_smem;
	add.s32 	%r333, %r493, %r492;
	shl.b32 	%r494, %r458, 7;
	or.b32  	%r73, %r494, %r490;
	shl.b32 	%r495, %r73, 1;
	add.s32 	%r335, %r493, %r495;
	selp.b32 	%r496, 16, 0, %p127;
	selp.b32 	%r334, %r496, 0, %p128;
	mov.pred 	%p97, -1;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r333 + 0 ], [ %rd52 + 0 ], 0x10, %r334;
	// end inline asm
	selp.b32 	%r336, %r496, 0, %p129;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r335 + 0 ], [ %rd53 + 0 ], 0x10, %r336;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 72
	setp.lt.s32 	%p130, %r3, %r203;
	.loc	1 97 20
	xor.b32  	%r497, %r423, %r1;
	and.b32  	%r498, %r497, 24;
	shl.b32 	%r499, %r445, 5;
	or.b32  	%r74, %r499, %r498;
	shl.b32 	%r500, %r74, 1;
	add.s32 	%r501, %r493, 16384;
	add.s32 	%r337, %r501, %r500;
	shl.b32 	%r502, %r446, 5;
	or.b32  	%r75, %r502, %r498;
	shl.b32 	%r503, %r75, 1;
	add.s32 	%r339, %r501, %r503;
	shl.b32 	%r504, %r447, 5;
	or.b32  	%r76, %r504, %r498;
	shl.b32 	%r505, %r76, 1;
	add.s32 	%r341, %r501, %r505;
	shl.b32 	%r506, %r448, 5;
	or.b32  	%r77, %r506, %r498;
	shl.b32 	%r507, %r77, 1;
	add.s32 	%r343, %r501, %r507;
	selp.b32 	%r340, %r496, 0, %p130;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r337 + 0 ], [ %rd54 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r339 + 0 ], [ %rd55 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r341 + 0 ], [ %rd56 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r343 + 0 ], [ %rd57 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	setp.gt.s32 	%p131, %r483, 63;
	.loc	1 102 18
	mul.wide.s32 	%rd105, %r487, 2;
	add.s64 	%rd58, %rd52, %rd105;
	add.s64 	%rd59, %rd53, %rd105;
	.loc	1 103 18
	add.s64 	%rd60, %rd54, 64;
	add.s64 	%rd61, %rd55, 64;
	add.s64 	%rd62, %rd56, 64;
	add.s64 	%rd63, %rd57, 64;
	.loc	1 96 53
	or.b32  	%r508, %r6, 32;
	or.b32  	%r509, %r6, 48;
	.loc	1 96 72
	setp.lt.s32 	%p132, %r508, %r203;
	setp.lt.s32 	%p133, %r509, %r203;
	.loc	1 96 20
	bar.sync 	0;
	add.s32 	%r510, %r493, 8192;
	add.s32 	%r345, %r510, %r492;
	add.s32 	%r347, %r510, %r495;
	selp.b32 	%r511, 16, 0, %p131;
	selp.b32 	%r346, %r511, 0, %p132;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r345 + 0 ], [ %rd58 + 0 ], 0x10, %r346;
	// end inline asm
	selp.b32 	%r348, %r511, 0, %p133;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r347 + 0 ], [ %rd59 + 0 ], 0x10, %r348;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 53
	or.b32  	%r512, %r3, 32;
	.loc	1 97 72
	setp.lt.s32 	%p134, %r512, %r203;
	.loc	1 97 20
	add.s32 	%r513, %r493, 32768;
	add.s32 	%r349, %r513, %r500;
	add.s32 	%r351, %r513, %r503;
	add.s32 	%r353, %r513, %r505;
	add.s32 	%r355, %r513, %r507;
	selp.b32 	%r352, %r511, 0, %p134;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r349 + 0 ], [ %rd60 + 0 ], 0x10, %r352;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r351 + 0 ], [ %rd61 + 0 ], 0x10, %r352;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r353 + 0 ], [ %rd62 + 0 ], 0x10, %r352;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r355 + 0 ], [ %rd63 + 0 ], 0x10, %r352;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 96 20
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r78, %r1, 7, 1;
	and.b32  	%r514, %r1, 7;
	bfe.u32 	%r79, %r1, 3, 1;
	bfe.u32 	%r515, %r1, 4, 1;
	shl.b32 	%r516, %r78, 1;
	or.b32  	%r517, %r516, %r79;
	xor.b32  	%r518, %r517, %r514;
	shl.b32 	%r519, %r518, 3;
	shl.b32 	%r520, %r514, 7;
	shl.b32 	%r521, %r515, 10;
	or.b32  	%r522, %r521, %r520;
	or.b32  	%r80, %r519, %r522;
	shl.b32 	%r523, %r80, 1;
	add.s32 	%r361, %r493, %r523;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1830, %r1831, %r1832, %r1833 }, [ %r361 + 0 ];
	// end inline asm
	or.b32  	%r524, %r517, 4;
	xor.b32  	%r525, %r524, %r514;
	shl.b32 	%r526, %r525, 3;
	or.b32  	%r85, %r526, %r522;
	shl.b32 	%r527, %r85, 1;
	add.s32 	%r366, %r493, %r527;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1826, %r1827, %r1828, %r1829 }, [ %r366 + 0 ];
	// end inline asm
	or.b32  	%r528, %r517, 8;
	xor.b32  	%r529, %r528, %r514;
	shl.b32 	%r530, %r529, 3;
	or.b32  	%r90, %r530, %r522;
	shl.b32 	%r531, %r90, 1;
	add.s32 	%r371, %r493, %r531;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1822, %r1823, %r1824, %r1825 }, [ %r371 + 0 ];
	// end inline asm
	or.b32  	%r532, %r517, 12;
	xor.b32  	%r533, %r532, %r514;
	shl.b32 	%r534, %r533, 3;
	or.b32  	%r95, %r534, %r522;
	shl.b32 	%r535, %r95, 1;
	add.s32 	%r376, %r493, %r535;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1818, %r1819, %r1820, %r1821 }, [ %r376 + 0 ];
	// end inline asm
	.loc	1 97 20
	bfe.u32 	%r100, %r1, 1, 2;
	shl.b32 	%r536, %r515, 5;
	and.b32  	%r101, %r444, 24;
	or.b32  	%r537, %r536, %r101;
	or.b32  	%r538, %r537, %r514;
	xor.b32  	%r539, %r79, %r100;
	shl.b32 	%r540, %r539, 3;
	shl.b32 	%r102, %r538, 5;
	or.b32  	%r103, %r102, %r540;
	shl.b32 	%r541, %r103, 1;
	add.s32 	%r381, %r501, %r541;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1814, %r1815, %r1816, %r1817 }, [ %r381 + 0 ];
	// end inline asm
	add.s32 	%r386, %r381, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1810, %r1811, %r1812, %r1813 }, [ %r386 + 0 ];
	// end inline asm
	add.s32 	%r391, %r381, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1806, %r1807, %r1808, %r1809 }, [ %r391 + 0 ];
	// end inline asm
	add.s32 	%r396, %r381, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1802, %r1803, %r1804, %r1805 }, [ %r396 + 0 ];
	// end inline asm
	mov.b16 	%rs661, 0x0000;
	mov.u16 	%rs662, %rs661;
	mov.u16 	%rs663, %rs661;
	mov.u16 	%rs664, %rs661;
	mov.u16 	%rs665, %rs661;
	mov.u16 	%rs666, %rs661;
	mov.u16 	%rs667, %rs661;
	mov.u16 	%rs668, %rs661;
	mov.u16 	%rs669, %rs661;
	mov.u16 	%rs670, %rs661;
	mov.u16 	%rs671, %rs661;
	mov.u16 	%rs672, %rs661;
	mov.u16 	%rs673, %rs661;
	mov.u16 	%rs674, %rs661;
	mov.u16 	%rs675, %rs661;
	mov.u16 	%rs676, %rs661;
	mov.u16 	%rs677, %rs661;
	mov.u16 	%rs678, %rs661;
	mov.u16 	%rs679, %rs661;
	mov.u16 	%rs680, %rs661;
	mov.u16 	%rs681, %rs661;
	mov.u16 	%rs682, %rs661;
	mov.u16 	%rs683, %rs661;
	mov.u16 	%rs684, %rs661;
	mov.u16 	%rs685, %rs661;
	mov.u16 	%rs686, %rs661;
	mov.u16 	%rs687, %rs661;
	mov.u16 	%rs688, %rs661;
	mov.u16 	%rs689, %rs661;
	mov.u16 	%rs690, %rs661;
	mov.u16 	%rs691, %rs661;
	mov.u16 	%rs692, %rs661;
	mov.u16 	%rs693, %rs661;
	mov.u16 	%rs694, %rs661;
	mov.u16 	%rs695, %rs661;
	mov.u16 	%rs696, %rs661;
	mov.u16 	%rs697, %rs661;
	mov.u16 	%rs698, %rs661;
	mov.u16 	%rs699, %rs661;
	mov.u16 	%rs700, %rs661;
	mov.u16 	%rs701, %rs661;
	mov.u16 	%rs702, %rs661;
	mov.u16 	%rs703, %rs661;
	mov.u16 	%rs704, %rs661;
	mov.u16 	%rs705, %rs661;
	mov.u16 	%rs706, %rs661;
	mov.u16 	%rs707, %rs661;
	mov.u16 	%rs708, %rs661;
	mov.u16 	%rs709, %rs661;
	mov.u16 	%rs710, %rs661;
	mov.u16 	%rs711, %rs661;
	mov.u16 	%rs712, %rs661;
	mov.u16 	%rs713, %rs661;
	mov.u16 	%rs714, %rs661;
	mov.u16 	%rs715, %rs661;
	mov.u16 	%rs716, %rs661;
	mov.u16 	%rs717, %rs661;
	mov.u16 	%rs718, %rs661;
	mov.u16 	%rs719, %rs661;
	mov.u16 	%rs720, %rs661;
	mov.u16 	%rs721, %rs661;
	mov.u16 	%rs722, %rs661;
	mov.u16 	%rs723, %rs661;
	mov.u16 	%rs724, %rs661;
	mov.u16 	%rs725, %rs661;
	mov.u16 	%rs726, %rs661;
	mov.u16 	%rs727, %rs661;
	mov.u16 	%rs728, %rs661;
	mov.u16 	%rs729, %rs661;
	mov.u16 	%rs730, %rs661;
	mov.u16 	%rs731, %rs661;
	mov.u16 	%rs732, %rs661;
	mov.u16 	%rs733, %rs661;
	mov.u16 	%rs734, %rs661;
	mov.u16 	%rs735, %rs661;
	mov.u16 	%rs736, %rs661;
	mov.u16 	%rs737, %rs661;
	mov.u16 	%rs738, %rs661;
	mov.u16 	%rs739, %rs661;
	mov.u16 	%rs740, %rs661;
	mov.u16 	%rs741, %rs661;
	mov.u16 	%rs742, %rs661;
	mov.u16 	%rs743, %rs661;
	mov.u16 	%rs744, %rs661;
	mov.u16 	%rs745, %rs661;
	mov.u16 	%rs746, %rs661;
	mov.u16 	%rs747, %rs661;
	mov.u16 	%rs748, %rs661;
	mov.u16 	%rs749, %rs661;
	mov.u16 	%rs750, %rs661;
	mov.u16 	%rs751, %rs661;
	mov.u16 	%rs752, %rs661;
	mov.u16 	%rs753, %rs661;
	mov.u16 	%rs754, %rs661;
	mov.u16 	%rs755, %rs661;
	mov.u16 	%rs756, %rs661;
	mov.u16 	%rs757, %rs661;
	mov.u16 	%rs758, %rs661;
	mov.u16 	%rs759, %rs661;
	mov.u16 	%rs760, %rs661;
	mov.u16 	%rs761, %rs661;
	mov.u16 	%rs762, %rs661;
	mov.u16 	%rs763, %rs661;
	mov.u16 	%rs764, %rs661;
	mov.u16 	%rs765, %rs661;
	mov.u16 	%rs766, %rs661;
	mov.u16 	%rs767, %rs661;
	mov.u16 	%rs768, %rs661;
	mov.u16 	%rs769, %rs661;
	mov.u16 	%rs770, %rs661;
	mov.u16 	%rs771, %rs661;
	mov.u16 	%rs772, %rs661;
	mov.u16 	%rs773, %rs661;
	mov.u16 	%rs774, %rs661;
	mov.u16 	%rs775, %rs661;
	mov.u16 	%rs776, %rs661;
	mov.u16 	%rs777, %rs661;
	mov.u16 	%rs778, %rs661;
	mov.u16 	%rs779, %rs661;
	mov.u16 	%rs780, %rs661;
	mov.u16 	%rs781, %rs661;
	mov.u16 	%rs782, %rs661;
	mov.u16 	%rs783, %rs661;
	mov.u16 	%rs784, %rs661;
	mov.u16 	%rs785, %rs661;
	mov.u16 	%rs786, %rs661;
	mov.u16 	%rs787, %rs661;
	mov.u16 	%rs788, %rs661;
	.loc	1 93 22
	@%p126 bra 	$L__BB0_3;
	.loc	1 0 22
	cvt.s64.s32 	%rd3, %r462;
	cvt.s64.s32 	%rd4, %r463;
	cvt.s64.s32 	%rd5, %r464;
	cvt.s64.s32 	%rd6, %r465;
	shr.s32 	%r484, %r483, 31;
	shr.u32 	%r485, %r484, 27;
	add.s32 	%r486, %r483, %r485;
	shr.s32 	%r71, %r486, 5;
	cvt.s64.s32 	%rd23, %r487;
	add.s32 	%r120, %r71, -2;
	or.b32  	%r546, %r79, 2;
	xor.b32  	%r547, %r546, %r100;
	shl.b32 	%r548, %r547, 3;
	or.b32  	%r121, %r102, %r548;
	.loc	1 93 22
	shl.b64 	%rd106, %rd6, 1;
	add.s64 	%rd24, %rd106, 128;
	shl.b64 	%rd107, %rd5, 1;
	add.s64 	%rd25, %rd107, 128;
	shl.b64 	%rd108, %rd4, 1;
	add.s64 	%rd26, %rd108, 128;
	shl.b64 	%rd109, %rd3, 1;
	add.s64 	%rd27, %rd109, 128;
	shl.b64 	%rd134, %rd23, 2;
	shl.b64 	%rd29, %rd23, 1;
	or.b32  	%r1801, %r3, 64;
	or.b32  	%r1800, %r6, 80;
	mov.b16 	%rs661, 0x0000;
	mov.b32 	%r1837, 1;
	shl.b32 	%r1289, %r121, 1;
	mov.u32 	%r1834, %r501;
	mov.u32 	%r1835, %r493;
	mov.u16 	%rs662, %rs661;
	mov.u16 	%rs663, %rs661;
	mov.u16 	%rs664, %rs661;
	mov.u16 	%rs665, %rs661;
	mov.u16 	%rs666, %rs661;
	mov.u16 	%rs667, %rs661;
	mov.u16 	%rs668, %rs661;
	mov.u16 	%rs669, %rs661;
	mov.u16 	%rs670, %rs661;
	mov.u16 	%rs671, %rs661;
	mov.u16 	%rs672, %rs661;
	mov.u16 	%rs673, %rs661;
	mov.u16 	%rs674, %rs661;
	mov.u16 	%rs675, %rs661;
	mov.u16 	%rs676, %rs661;
	mov.u16 	%rs677, %rs661;
	mov.u16 	%rs678, %rs661;
	mov.u16 	%rs679, %rs661;
	mov.u16 	%rs680, %rs661;
	mov.u16 	%rs681, %rs661;
	mov.u16 	%rs682, %rs661;
	mov.u16 	%rs683, %rs661;
	mov.u16 	%rs684, %rs661;
	mov.u16 	%rs685, %rs661;
	mov.u16 	%rs686, %rs661;
	mov.u16 	%rs687, %rs661;
	mov.u16 	%rs688, %rs661;
	mov.u16 	%rs689, %rs661;
	mov.u16 	%rs690, %rs661;
	mov.u16 	%rs691, %rs661;
	mov.u16 	%rs692, %rs661;
	mov.u16 	%rs693, %rs661;
	mov.u16 	%rs694, %rs661;
	mov.u16 	%rs695, %rs661;
	mov.u16 	%rs696, %rs661;
	mov.u16 	%rs697, %rs661;
	mov.u16 	%rs698, %rs661;
	mov.u16 	%rs699, %rs661;
	mov.u16 	%rs700, %rs661;
	mov.u16 	%rs701, %rs661;
	mov.u16 	%rs702, %rs661;
	mov.u16 	%rs703, %rs661;
	mov.u16 	%rs704, %rs661;
	mov.u16 	%rs705, %rs661;
	mov.u16 	%rs706, %rs661;
	mov.u16 	%rs707, %rs661;
	mov.u16 	%rs708, %rs661;
	mov.u16 	%rs709, %rs661;
	mov.u16 	%rs710, %rs661;
	mov.u16 	%rs711, %rs661;
	mov.u16 	%rs712, %rs661;
	mov.u16 	%rs713, %rs661;
	mov.u16 	%rs714, %rs661;
	mov.u16 	%rs715, %rs661;
	mov.u16 	%rs716, %rs661;
	mov.u16 	%rs717, %rs661;
	mov.u16 	%rs718, %rs661;
	mov.u16 	%rs719, %rs661;
	mov.u16 	%rs720, %rs661;
	mov.u16 	%rs721, %rs661;
	mov.u16 	%rs722, %rs661;
	mov.u16 	%rs723, %rs661;
	mov.u16 	%rs724, %rs661;
	mov.u16 	%rs725, %rs661;
	mov.u16 	%rs726, %rs661;
	mov.u16 	%rs727, %rs661;
	mov.u16 	%rs728, %rs661;
	mov.u16 	%rs729, %rs661;
	mov.u16 	%rs730, %rs661;
	mov.u16 	%rs731, %rs661;
	mov.u16 	%rs732, %rs661;
	mov.u16 	%rs733, %rs661;
	mov.u16 	%rs734, %rs661;
	mov.u16 	%rs735, %rs661;
	mov.u16 	%rs736, %rs661;
	mov.u16 	%rs737, %rs661;
	mov.u16 	%rs738, %rs661;
	mov.u16 	%rs739, %rs661;
	mov.u16 	%rs740, %rs661;
	mov.u16 	%rs741, %rs661;
	mov.u16 	%rs742, %rs661;
	mov.u16 	%rs743, %rs661;
	mov.u16 	%rs744, %rs661;
	mov.u16 	%rs745, %rs661;
	mov.u16 	%rs746, %rs661;
	mov.u16 	%rs747, %rs661;
	mov.u16 	%rs748, %rs661;
	mov.u16 	%rs749, %rs661;
	mov.u16 	%rs750, %rs661;
	mov.u16 	%rs751, %rs661;
	mov.u16 	%rs752, %rs661;
	mov.u16 	%rs753, %rs661;
	mov.u16 	%rs754, %rs661;
	mov.u16 	%rs755, %rs661;
	mov.u16 	%rs756, %rs661;
	mov.u16 	%rs757, %rs661;
	mov.u16 	%rs758, %rs661;
	mov.u16 	%rs759, %rs661;
	mov.u16 	%rs760, %rs661;
	mov.u16 	%rs761, %rs661;
	mov.u16 	%rs762, %rs661;
	mov.u16 	%rs763, %rs661;
	mov.u16 	%rs764, %rs661;
	mov.u16 	%rs765, %rs661;
	mov.u16 	%rs766, %rs661;
	mov.u16 	%rs767, %rs661;
	mov.u16 	%rs768, %rs661;
	mov.u16 	%rs769, %rs661;
	mov.u16 	%rs770, %rs661;
	mov.u16 	%rs771, %rs661;
	mov.u16 	%rs772, %rs661;
	mov.u16 	%rs773, %rs661;
	mov.u16 	%rs774, %rs661;
	mov.u16 	%rs775, %rs661;
	mov.u16 	%rs776, %rs661;
	mov.u16 	%rs777, %rs661;
	mov.u16 	%rs778, %rs661;
	mov.u16 	%rs779, %rs661;
	mov.u16 	%rs780, %rs661;
	mov.u16 	%rs781, %rs661;
	mov.u16 	%rs782, %rs661;
	mov.u16 	%rs783, %rs661;
	mov.u16 	%rs784, %rs661;
	mov.u16 	%rs785, %rs661;
	mov.u16 	%rs786, %rs661;
	mov.u16 	%rs787, %rs661;
	mov.u16 	%rs788, %rs661;
	mov.u32 	%r1838, %r1836;
$L__BB0_2:
	setp.lt.s32 	%p141, %r1838, %r120;
	.loc	1 96 20
	add.s32 	%r1282, %r1835, %r523;
	add.s32 	%r553, %r1282, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r965, %r966, %r967, %r968 }, [ %r553 + 0 ];
	// end inline asm
	add.s32 	%r1284, %r1835, %r527;
	add.s32 	%r558, %r1284, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1045, %r1046, %r1047, %r1048 }, [ %r558 + 0 ];
	// end inline asm
	add.s32 	%r1286, %r1835, %r531;
	add.s32 	%r563, %r1286, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1125, %r1126, %r1127, %r1128 }, [ %r563 + 0 ];
	// end inline asm
	add.s32 	%r1288, %r1835, %r535;
	add.s32 	%r568, %r1288, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1205, %r1206, %r1207, %r1208 }, [ %r568 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r573, %r1834, %r1289;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r969, %r970, %r979, %r980 }, [ %r573 + 0 ];
	// end inline asm
	add.s32 	%r578, %r573, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r989, %r990, %r999, %r1000 }, [ %r578 + 0 ];
	// end inline asm
	add.s32 	%r583, %r573, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1009, %r1010, %r1019, %r1020 }, [ %r583 + 0 ];
	// end inline asm
	add.s32 	%r588, %r573, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1029, %r1030, %r1039, %r1040 }, [ %r588 + 0 ];
	// end inline asm
	.loc	1 100 35
	mov.b32 	%r961, {%rs661, %rs662};
	mov.b32 	%r962, {%rs663, %rs664};
	mov.b32 	%r971, {%rs665, %rs666};
	mov.b32 	%r972, {%rs667, %rs668};
	mov.b32 	%r981, {%rs669, %rs670};
	mov.b32 	%r982, {%rs671, %rs672};
	mov.b32 	%r991, {%rs673, %rs674};
	mov.b32 	%r992, {%rs675, %rs676};
	mov.b32 	%r1001, {%rs677, %rs678};
	mov.b32 	%r1002, {%rs679, %rs680};
	mov.b32 	%r1011, {%rs681, %rs682};
	mov.b32 	%r1012, {%rs683, %rs684};
	mov.b32 	%r1021, {%rs685, %rs686};
	mov.b32 	%r1022, {%rs687, %rs688};
	mov.b32 	%r1031, {%rs689, %rs690};
	mov.b32 	%r1032, {%rs691, %rs692};
	mov.b32 	%r1041, {%rs693, %rs694};
	mov.b32 	%r1042, {%rs695, %rs696};
	mov.b32 	%r1051, {%rs697, %rs698};
	mov.b32 	%r1052, {%rs699, %rs700};
	mov.b32 	%r1061, {%rs701, %rs702};
	mov.b32 	%r1062, {%rs703, %rs704};
	mov.b32 	%r1071, {%rs705, %rs706};
	mov.b32 	%r1072, {%rs707, %rs708};
	mov.b32 	%r1081, {%rs709, %rs710};
	mov.b32 	%r1082, {%rs711, %rs712};
	mov.b32 	%r1091, {%rs713, %rs714};
	mov.b32 	%r1092, {%rs715, %rs716};
	mov.b32 	%r1101, {%rs717, %rs718};
	mov.b32 	%r1102, {%rs719, %rs720};
	mov.b32 	%r1111, {%rs721, %rs722};
	mov.b32 	%r1112, {%rs723, %rs724};
	mov.b32 	%r1121, {%rs725, %rs726};
	mov.b32 	%r1122, {%rs727, %rs728};
	mov.b32 	%r1131, {%rs729, %rs730};
	mov.b32 	%r1132, {%rs731, %rs732};
	mov.b32 	%r1141, {%rs733, %rs734};
	mov.b32 	%r1142, {%rs735, %rs736};
	mov.b32 	%r1151, {%rs737, %rs738};
	mov.b32 	%r1152, {%rs739, %rs740};
	mov.b32 	%r1161, {%rs741, %rs742};
	mov.b32 	%r1162, {%rs743, %rs744};
	mov.b32 	%r1171, {%rs745, %rs746};
	mov.b32 	%r1172, {%rs747, %rs748};
	mov.b32 	%r1181, {%rs749, %rs750};
	mov.b32 	%r1182, {%rs751, %rs752};
	mov.b32 	%r1191, {%rs753, %rs754};
	mov.b32 	%r1192, {%rs755, %rs756};
	mov.b32 	%r1201, {%rs757, %rs758};
	mov.b32 	%r1202, {%rs759, %rs760};
	mov.b32 	%r1211, {%rs761, %rs762};
	mov.b32 	%r1212, {%rs763, %rs764};
	mov.b32 	%r1221, {%rs765, %rs766};
	mov.b32 	%r1222, {%rs767, %rs768};
	mov.b32 	%r1231, {%rs769, %rs770};
	mov.b32 	%r1232, {%rs771, %rs772};
	mov.b32 	%r1241, {%rs773, %rs774};
	mov.b32 	%r1242, {%rs775, %rs776};
	mov.b32 	%r1251, {%rs777, %rs778};
	mov.b32 	%r1252, {%rs779, %rs780};
	mov.b32 	%r1261, {%rs781, %rs782};
	mov.b32 	%r1262, {%rs783, %rs784};
	mov.b32 	%r1271, {%rs785, %rs786};
	mov.b32 	%r1272, {%rs787, %rs788};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r961, %r962 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1814, %r1815 }, { %r961, %r962 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r971, %r972 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1816, %r1817 }, { %r971, %r972 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r981, %r982 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1810, %r1811 }, { %r981, %r982 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r991, %r992 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1812, %r1813 }, { %r991, %r992 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1001, %r1002 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1806, %r1807 }, { %r1001, %r1002 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1011, %r1012 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1808, %r1809 }, { %r1011, %r1012 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1021, %r1022 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1802, %r1803 }, { %r1021, %r1022 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1031, %r1032 }, { %r1830, %r1831, %r1832, %r1833 }, { %r1804, %r1805 }, { %r1031, %r1032 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1041, %r1042 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1814, %r1815 }, { %r1041, %r1042 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1051, %r1052 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1816, %r1817 }, { %r1051, %r1052 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1061, %r1062 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1810, %r1811 }, { %r1061, %r1062 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1071, %r1072 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1812, %r1813 }, { %r1071, %r1072 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1081, %r1082 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1806, %r1807 }, { %r1081, %r1082 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1091, %r1092 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1808, %r1809 }, { %r1091, %r1092 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1101, %r1102 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1802, %r1803 }, { %r1101, %r1102 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1111, %r1112 }, { %r1826, %r1827, %r1828, %r1829 }, { %r1804, %r1805 }, { %r1111, %r1112 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1121, %r1122 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1814, %r1815 }, { %r1121, %r1122 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1131, %r1132 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1816, %r1817 }, { %r1131, %r1132 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1141, %r1142 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1810, %r1811 }, { %r1141, %r1142 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1151, %r1152 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1812, %r1813 }, { %r1151, %r1152 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1161, %r1162 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1806, %r1807 }, { %r1161, %r1162 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1171, %r1172 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1808, %r1809 }, { %r1171, %r1172 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1181, %r1182 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1802, %r1803 }, { %r1181, %r1182 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1191, %r1192 }, { %r1822, %r1823, %r1824, %r1825 }, { %r1804, %r1805 }, { %r1191, %r1192 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1201, %r1202 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1814, %r1815 }, { %r1201, %r1202 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1211, %r1212 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1816, %r1817 }, { %r1211, %r1212 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1221, %r1222 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1810, %r1811 }, { %r1221, %r1222 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1231, %r1232 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1812, %r1813 }, { %r1231, %r1232 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1241, %r1242 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1806, %r1807 }, { %r1241, %r1242 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1251, %r1252 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1808, %r1809 }, { %r1251, %r1252 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1261, %r1262 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1802, %r1803 }, { %r1261, %r1262 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1271, %r1272 }, { %r1818, %r1819, %r1820, %r1821 }, { %r1804, %r1805 }, { %r1271, %r1272 };
	// end inline asm
	.loc	1 102 18
	add.s64 	%rd110, %rd52, %rd134;
	.loc	1 103 18
	add.s64 	%rd111, %rd53, %rd134;
	add.s64 	%rd112, %rd135, %rd27;
	add.s64 	%rd113, %rd135, %rd26;
	add.s64 	%rd114, %rd135, %rd25;
	.loc	1 93 22
	add.s64 	%rd115, %rd135, %rd24;
	add.s32 	%r1354, %r1837, 1;
	setp.lt.s32 	%p142, %r1354, 2;
	selp.b32 	%r1837, %r1354, 0, %p142;
	.loc	1 96 53
	add.s32 	%r1355, %r1800, -16;
	.loc	1 96 72
	setp.lt.s32 	%p143, %r1355, %r203;
	setp.lt.s32 	%p144, %r1800, %r203;
	.loc	1 96 20
	shl.b32 	%r1356, %r1837, 13;
	add.s32 	%r1358, %r493, %r1356;
	bar.sync 	0;
	add.s32 	%r909, %r1358, %r492;
	add.s32 	%r911, %r1358, %r495;
	selp.b32 	%r1361, 16, 0, %p143;
	selp.b32 	%r910, %r1361, 0, %p141;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r909 + 0 ], [ %rd110 + 0 ], 0x10, %r910;
	// end inline asm
	selp.b32 	%r1362, 16, 0, %p144;
	selp.b32 	%r912, %r1362, 0, %p141;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r911 + 0 ], [ %rd111 + 0 ], 0x10, %r912;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 72
	setp.lt.s32 	%p145, %r1801, %r203;
	.loc	1 97 20
	shl.b32 	%r1363, %r1837, 14;
	add.s32 	%r1365, %r501, %r1363;
	add.s32 	%r913, %r1365, %r500;
	add.s32 	%r915, %r1365, %r503;
	add.s32 	%r917, %r1365, %r505;
	add.s32 	%r919, %r1365, %r507;
	selp.b32 	%r1370, 16, 0, %p145;
	selp.b32 	%r916, %r1370, 0, %p141;
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r913 + 0 ], [ %rd112 + 0 ], 0x10, %r916;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r915 + 0 ], [ %rd113 + 0 ], 0x10, %r916;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r917 + 0 ], [ %rd114 + 0 ], 0x10, %r916;
	// end inline asm
	// begin inline asm
	@%p97 cp.async.cg.shared.global [ %r919 + 0 ], [ %rd115 + 0 ], 0x10, %r916;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	add.s32 	%r1371, %r1836, 1;
	setp.lt.s32 	%p146, %r1371, 2;
	selp.b32 	%r1836, %r1371, 0, %p146;
	.loc	1 96 20
	shl.b32 	%r1372, %r1836, 13;
	add.s32 	%r1835, %r493, %r1372;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 97 20
	shl.b32 	%r1373, %r1836, 14;
	add.s32 	%r1834, %r501, %r1373;
	.loc	1 96 20
	add.s32 	%r925, %r1835, %r523;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1830, %r1831, %r1832, %r1833 }, [ %r925 + 0 ];
	// end inline asm
	add.s32 	%r930, %r1835, %r527;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1826, %r1827, %r1828, %r1829 }, [ %r930 + 0 ];
	// end inline asm
	add.s32 	%r935, %r1835, %r531;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1822, %r1823, %r1824, %r1825 }, [ %r935 + 0 ];
	// end inline asm
	add.s32 	%r940, %r1835, %r535;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1818, %r1819, %r1820, %r1821 }, [ %r940 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r945, %r1834, %r541;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1814, %r1815, %r1816, %r1817 }, [ %r945 + 0 ];
	// end inline asm
	add.s32 	%r950, %r945, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1810, %r1811, %r1812, %r1813 }, [ %r950 + 0 ];
	// end inline asm
	add.s32 	%r955, %r945, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1806, %r1807, %r1808, %r1809 }, [ %r955 + 0 ];
	// end inline asm
	add.s32 	%r960, %r945, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1802, %r1803, %r1804, %r1805 }, [ %r960 + 0 ];
	// end inline asm
	.loc	1 100 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r961, %r962 }, { %r965, %r966, %r967, %r968 }, { %r969, %r970 }, { %r961, %r962 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r971, %r972 }, { %r965, %r966, %r967, %r968 }, { %r979, %r980 }, { %r971, %r972 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r981, %r982 }, { %r965, %r966, %r967, %r968 }, { %r989, %r990 }, { %r981, %r982 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r991, %r992 }, { %r965, %r966, %r967, %r968 }, { %r999, %r1000 }, { %r991, %r992 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1001, %r1002 }, { %r965, %r966, %r967, %r968 }, { %r1009, %r1010 }, { %r1001, %r1002 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1011, %r1012 }, { %r965, %r966, %r967, %r968 }, { %r1019, %r1020 }, { %r1011, %r1012 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1021, %r1022 }, { %r965, %r966, %r967, %r968 }, { %r1029, %r1030 }, { %r1021, %r1022 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1031, %r1032 }, { %r965, %r966, %r967, %r968 }, { %r1039, %r1040 }, { %r1031, %r1032 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1041, %r1042 }, { %r1045, %r1046, %r1047, %r1048 }, { %r969, %r970 }, { %r1041, %r1042 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1051, %r1052 }, { %r1045, %r1046, %r1047, %r1048 }, { %r979, %r980 }, { %r1051, %r1052 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1061, %r1062 }, { %r1045, %r1046, %r1047, %r1048 }, { %r989, %r990 }, { %r1061, %r1062 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1071, %r1072 }, { %r1045, %r1046, %r1047, %r1048 }, { %r999, %r1000 }, { %r1071, %r1072 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1081, %r1082 }, { %r1045, %r1046, %r1047, %r1048 }, { %r1009, %r1010 }, { %r1081, %r1082 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1091, %r1092 }, { %r1045, %r1046, %r1047, %r1048 }, { %r1019, %r1020 }, { %r1091, %r1092 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1101, %r1102 }, { %r1045, %r1046, %r1047, %r1048 }, { %r1029, %r1030 }, { %r1101, %r1102 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1111, %r1112 }, { %r1045, %r1046, %r1047, %r1048 }, { %r1039, %r1040 }, { %r1111, %r1112 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1121, %r1122 }, { %r1125, %r1126, %r1127, %r1128 }, { %r969, %r970 }, { %r1121, %r1122 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1131, %r1132 }, { %r1125, %r1126, %r1127, %r1128 }, { %r979, %r980 }, { %r1131, %r1132 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1141, %r1142 }, { %r1125, %r1126, %r1127, %r1128 }, { %r989, %r990 }, { %r1141, %r1142 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1151, %r1152 }, { %r1125, %r1126, %r1127, %r1128 }, { %r999, %r1000 }, { %r1151, %r1152 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1161, %r1162 }, { %r1125, %r1126, %r1127, %r1128 }, { %r1009, %r1010 }, { %r1161, %r1162 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1171, %r1172 }, { %r1125, %r1126, %r1127, %r1128 }, { %r1019, %r1020 }, { %r1171, %r1172 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1181, %r1182 }, { %r1125, %r1126, %r1127, %r1128 }, { %r1029, %r1030 }, { %r1181, %r1182 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1191, %r1192 }, { %r1125, %r1126, %r1127, %r1128 }, { %r1039, %r1040 }, { %r1191, %r1192 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1201, %r1202 }, { %r1205, %r1206, %r1207, %r1208 }, { %r969, %r970 }, { %r1201, %r1202 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1211, %r1212 }, { %r1205, %r1206, %r1207, %r1208 }, { %r979, %r980 }, { %r1211, %r1212 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1221, %r1222 }, { %r1205, %r1206, %r1207, %r1208 }, { %r989, %r990 }, { %r1221, %r1222 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1231, %r1232 }, { %r1205, %r1206, %r1207, %r1208 }, { %r999, %r1000 }, { %r1231, %r1232 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1241, %r1242 }, { %r1205, %r1206, %r1207, %r1208 }, { %r1009, %r1010 }, { %r1241, %r1242 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1251, %r1252 }, { %r1205, %r1206, %r1207, %r1208 }, { %r1019, %r1020 }, { %r1251, %r1252 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1261, %r1262 }, { %r1205, %r1206, %r1207, %r1208 }, { %r1029, %r1030 }, { %r1261, %r1262 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1271, %r1272 }, { %r1205, %r1206, %r1207, %r1208 }, { %r1039, %r1040 }, { %r1271, %r1272 };
	// end inline asm
	mov.b32 	{%rs661, %rs662}, %r961;
	mov.b32 	{%rs663, %rs664}, %r962;
	mov.b32 	{%rs665, %rs666}, %r971;
	mov.b32 	{%rs667, %rs668}, %r972;
	mov.b32 	{%rs669, %rs670}, %r981;
	mov.b32 	{%rs671, %rs672}, %r982;
	mov.b32 	{%rs673, %rs674}, %r991;
	mov.b32 	{%rs675, %rs676}, %r992;
	mov.b32 	{%rs677, %rs678}, %r1001;
	mov.b32 	{%rs679, %rs680}, %r1002;
	mov.b32 	{%rs681, %rs682}, %r1011;
	mov.b32 	{%rs683, %rs684}, %r1012;
	mov.b32 	{%rs685, %rs686}, %r1021;
	mov.b32 	{%rs687, %rs688}, %r1022;
	mov.b32 	{%rs689, %rs690}, %r1031;
	mov.b32 	{%rs691, %rs692}, %r1032;
	mov.b32 	{%rs693, %rs694}, %r1041;
	mov.b32 	{%rs695, %rs696}, %r1042;
	mov.b32 	{%rs697, %rs698}, %r1051;
	mov.b32 	{%rs699, %rs700}, %r1052;
	mov.b32 	{%rs701, %rs702}, %r1061;
	mov.b32 	{%rs703, %rs704}, %r1062;
	mov.b32 	{%rs705, %rs706}, %r1071;
	mov.b32 	{%rs707, %rs708}, %r1072;
	mov.b32 	{%rs709, %rs710}, %r1081;
	mov.b32 	{%rs711, %rs712}, %r1082;
	mov.b32 	{%rs713, %rs714}, %r1091;
	mov.b32 	{%rs715, %rs716}, %r1092;
	mov.b32 	{%rs717, %rs718}, %r1101;
	mov.b32 	{%rs719, %rs720}, %r1102;
	mov.b32 	{%rs721, %rs722}, %r1111;
	mov.b32 	{%rs723, %rs724}, %r1112;
	mov.b32 	{%rs725, %rs726}, %r1121;
	mov.b32 	{%rs727, %rs728}, %r1122;
	mov.b32 	{%rs729, %rs730}, %r1131;
	mov.b32 	{%rs731, %rs732}, %r1132;
	mov.b32 	{%rs733, %rs734}, %r1141;
	mov.b32 	{%rs735, %rs736}, %r1142;
	mov.b32 	{%rs737, %rs738}, %r1151;
	mov.b32 	{%rs739, %rs740}, %r1152;
	mov.b32 	{%rs741, %rs742}, %r1161;
	mov.b32 	{%rs743, %rs744}, %r1162;
	mov.b32 	{%rs745, %rs746}, %r1171;
	mov.b32 	{%rs747, %rs748}, %r1172;
	mov.b32 	{%rs749, %rs750}, %r1181;
	mov.b32 	{%rs751, %rs752}, %r1182;
	mov.b32 	{%rs753, %rs754}, %r1191;
	mov.b32 	{%rs755, %rs756}, %r1192;
	mov.b32 	{%rs757, %rs758}, %r1201;
	mov.b32 	{%rs759, %rs760}, %r1202;
	mov.b32 	{%rs761, %rs762}, %r1211;
	mov.b32 	{%rs763, %rs764}, %r1212;
	mov.b32 	{%rs765, %rs766}, %r1221;
	mov.b32 	{%rs767, %rs768}, %r1222;
	mov.b32 	{%rs769, %rs770}, %r1231;
	mov.b32 	{%rs771, %rs772}, %r1232;
	mov.b32 	{%rs773, %rs774}, %r1241;
	mov.b32 	{%rs775, %rs776}, %r1242;
	mov.b32 	{%rs777, %rs778}, %r1251;
	mov.b32 	{%rs779, %rs780}, %r1252;
	mov.b32 	{%rs781, %rs782}, %r1261;
	mov.b32 	{%rs783, %rs784}, %r1262;
	mov.b32 	{%rs785, %rs786}, %r1271;
	mov.b32 	{%rs787, %rs788}, %r1272;
	.loc	1 93 22
	add.s32 	%r1838, %r1838, 1;
	add.s64 	%rd135, %rd135, 64;
	add.s64 	%rd134, %rd134, %rd29;
	add.s32 	%r1801, %r1801, 32;
	add.s32 	%r1800, %r1800, 32;
	setp.lt.s32 	%p147, %r1838, %r71;
	@%p147 bra 	$L__BB0_2;
$L__BB0_3:
	.loc	1 75 51
	and.b32  	%r1567, %r1, 255;
	.loc	1 75 38
	or.b32  	%r1568, %r5, %r1567;
	.loc	1 93 22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 107 31
	mul.wide.s32 	%rd133, %r1568, 2;
	add.s64 	%rd116, %rd35, %rd133;
	.loc	1 108 32
	setp.lt.s32 	%p148, %r1568, %r202;
	mov.u16 	%rs388, 0;
	.loc	1 109 23
	// begin inline asm
	mov.u16 %rs387, 0x0;
	@%p148 ld.global.b16 { %rs387 }, [ %rd116 + 0 ];
	@!%p148 mov.u16 %rs387, %rs388;
	// end inline asm
	.loc	1 110 30
	shl.b32 	%r1569, %r1567, 1;
	add.s32 	%r1571, %r493, %r1569;
	st.shared.u16 	[%r1571], %rs387;
	bar.sync 	0;
	shl.b32 	%r1572, %r1, 1;
	and.b32  	%r1573, %r1572, 6;
	or.b32  	%r1574, %r101, %r1573;
	shl.b32 	%r1575, %r1574, 1;
	add.s32 	%r1576, %r493, %r1575;
	ld.shared.b32 	%r1577, [%r1576];
	mov.b32 	{%rs389, %rs390}, %r1577;
	add.s32 	%r1578, %r1576, 64;
	ld.shared.b32 	%r1579, [%r1576+64];
	mov.b32 	{%rs391, %rs392}, %r1579;
	add.s32 	%r1580, %r1576, 128;
	ld.shared.b32 	%r1581, [%r1576+128];
	mov.b32 	{%rs393, %rs394}, %r1581;
	add.s32 	%r1582, %r1576, 192;
	ld.shared.b32 	%r1583, [%r1576+192];
	mov.b32 	{%rs395, %rs396}, %r1583;
	add.s32 	%r1584, %r1576, 256;
	ld.shared.b32 	%r1585, [%r1576+256];
	mov.b32 	{%rs397, %rs398}, %r1585;
	add.s32 	%r1586, %r1576, 320;
	ld.shared.b32 	%r1587, [%r1576+320];
	mov.b32 	{%rs399, %rs400}, %r1587;
	add.s32 	%r1588, %r1576, 384;
	ld.shared.b32 	%r1589, [%r1576+384];
	mov.b32 	{%rs401, %rs402}, %r1589;
	add.s32 	%r1590, %r1576, 448;
	ld.shared.b32 	%r1591, [%r1576+448];
	mov.b32 	{%rs403, %rs404}, %r1591;
	.loc	1 111 23
	add.f16 	%rs405, %rs661, %rs389;
	add.f16 	%rs406, %rs662, %rs390;
	add.f16 	%rs407, %rs663, %rs389;
	add.f16 	%rs408, %rs664, %rs390;
	add.f16 	%rs409, %rs665, %rs391;
	add.f16 	%rs410, %rs666, %rs392;
	add.f16 	%rs411, %rs667, %rs391;
	add.f16 	%rs412, %rs668, %rs392;
	add.f16 	%rs413, %rs669, %rs393;
	add.f16 	%rs414, %rs670, %rs394;
	add.f16 	%rs415, %rs671, %rs393;
	add.f16 	%rs416, %rs672, %rs394;
	add.f16 	%rs417, %rs673, %rs395;
	add.f16 	%rs418, %rs674, %rs396;
	add.f16 	%rs419, %rs675, %rs395;
	add.f16 	%rs420, %rs676, %rs396;
	add.f16 	%rs421, %rs677, %rs397;
	add.f16 	%rs422, %rs678, %rs398;
	add.f16 	%rs423, %rs679, %rs397;
	add.f16 	%rs424, %rs680, %rs398;
	add.f16 	%rs425, %rs681, %rs399;
	add.f16 	%rs426, %rs682, %rs400;
	add.f16 	%rs427, %rs683, %rs399;
	add.f16 	%rs428, %rs684, %rs400;
	add.f16 	%rs429, %rs685, %rs401;
	add.f16 	%rs430, %rs686, %rs402;
	add.f16 	%rs431, %rs687, %rs401;
	add.f16 	%rs432, %rs688, %rs402;
	add.f16 	%rs433, %rs689, %rs403;
	add.f16 	%rs434, %rs690, %rs404;
	add.f16 	%rs435, %rs691, %rs403;
	add.f16 	%rs436, %rs692, %rs404;
	add.f16 	%rs437, %rs693, %rs389;
	add.f16 	%rs438, %rs694, %rs390;
	add.f16 	%rs439, %rs695, %rs389;
	add.f16 	%rs440, %rs696, %rs390;
	add.f16 	%rs441, %rs697, %rs391;
	add.f16 	%rs442, %rs698, %rs392;
	add.f16 	%rs443, %rs699, %rs391;
	add.f16 	%rs444, %rs700, %rs392;
	add.f16 	%rs445, %rs701, %rs393;
	add.f16 	%rs446, %rs702, %rs394;
	add.f16 	%rs447, %rs703, %rs393;
	add.f16 	%rs448, %rs704, %rs394;
	add.f16 	%rs449, %rs705, %rs395;
	add.f16 	%rs450, %rs706, %rs396;
	add.f16 	%rs451, %rs707, %rs395;
	add.f16 	%rs452, %rs708, %rs396;
	add.f16 	%rs453, %rs709, %rs397;
	add.f16 	%rs454, %rs710, %rs398;
	add.f16 	%rs455, %rs711, %rs397;
	add.f16 	%rs456, %rs712, %rs398;
	add.f16 	%rs457, %rs713, %rs399;
	add.f16 	%rs458, %rs714, %rs400;
	add.f16 	%rs459, %rs715, %rs399;
	add.f16 	%rs460, %rs716, %rs400;
	add.f16 	%rs461, %rs717, %rs401;
	add.f16 	%rs462, %rs718, %rs402;
	add.f16 	%rs463, %rs719, %rs401;
	add.f16 	%rs464, %rs720, %rs402;
	add.f16 	%rs465, %rs721, %rs403;
	add.f16 	%rs466, %rs722, %rs404;
	add.f16 	%rs467, %rs723, %rs403;
	add.f16 	%rs468, %rs724, %rs404;
	add.f16 	%rs469, %rs725, %rs389;
	add.f16 	%rs470, %rs726, %rs390;
	add.f16 	%rs471, %rs727, %rs389;
	add.f16 	%rs472, %rs728, %rs390;
	add.f16 	%rs473, %rs729, %rs391;
	add.f16 	%rs474, %rs730, %rs392;
	add.f16 	%rs475, %rs731, %rs391;
	add.f16 	%rs476, %rs732, %rs392;
	add.f16 	%rs477, %rs733, %rs393;
	add.f16 	%rs478, %rs734, %rs394;
	add.f16 	%rs479, %rs735, %rs393;
	add.f16 	%rs480, %rs736, %rs394;
	add.f16 	%rs481, %rs737, %rs395;
	add.f16 	%rs482, %rs738, %rs396;
	add.f16 	%rs483, %rs739, %rs395;
	add.f16 	%rs484, %rs740, %rs396;
	add.f16 	%rs485, %rs741, %rs397;
	add.f16 	%rs486, %rs742, %rs398;
	add.f16 	%rs487, %rs743, %rs397;
	add.f16 	%rs488, %rs744, %rs398;
	add.f16 	%rs489, %rs745, %rs399;
	add.f16 	%rs490, %rs746, %rs400;
	add.f16 	%rs491, %rs747, %rs399;
	add.f16 	%rs492, %rs748, %rs400;
	add.f16 	%rs493, %rs749, %rs401;
	add.f16 	%rs494, %rs750, %rs402;
	add.f16 	%rs495, %rs751, %rs401;
	add.f16 	%rs496, %rs752, %rs402;
	add.f16 	%rs497, %rs753, %rs403;
	add.f16 	%rs498, %rs754, %rs404;
	add.f16 	%rs499, %rs755, %rs403;
	add.f16 	%rs500, %rs756, %rs404;
	add.f16 	%rs501, %rs757, %rs389;
	add.f16 	%rs502, %rs758, %rs390;
	add.f16 	%rs503, %rs759, %rs389;
	add.f16 	%rs504, %rs760, %rs390;
	add.f16 	%rs505, %rs761, %rs391;
	add.f16 	%rs506, %rs762, %rs392;
	add.f16 	%rs507, %rs763, %rs391;
	add.f16 	%rs508, %rs764, %rs392;
	add.f16 	%rs509, %rs765, %rs393;
	add.f16 	%rs510, %rs766, %rs394;
	add.f16 	%rs511, %rs767, %rs393;
	add.f16 	%rs512, %rs768, %rs394;
	add.f16 	%rs513, %rs769, %rs395;
	add.f16 	%rs514, %rs770, %rs396;
	add.f16 	%rs515, %rs771, %rs395;
	add.f16 	%rs516, %rs772, %rs396;
	add.f16 	%rs517, %rs773, %rs397;
	add.f16 	%rs518, %rs774, %rs398;
	add.f16 	%rs519, %rs775, %rs397;
	add.f16 	%rs520, %rs776, %rs398;
	add.f16 	%rs521, %rs777, %rs399;
	add.f16 	%rs522, %rs778, %rs400;
	add.f16 	%rs523, %rs779, %rs399;
	add.f16 	%rs524, %rs780, %rs400;
	add.f16 	%rs525, %rs781, %rs401;
	add.f16 	%rs526, %rs782, %rs402;
	add.f16 	%rs527, %rs783, %rs401;
	add.f16 	%rs528, %rs784, %rs402;
	add.f16 	%rs529, %rs785, %rs403;
	add.f16 	%rs530, %rs786, %rs404;
	add.f16 	%rs531, %rs787, %rs403;
	add.f16 	%rs532, %rs788, %rs404;
	bar.sync 	0;
	shr.u32 	%r1592, %r2, 2;
	shl.b32 	%r1593, %r78, 4;
	or.b32  	%r1594, %r1593, %r1592;
	mul.lo.s32 	%r1595, %r1594, 528;
	add.s32 	%r1596, %r1576, %r1595;
	mov.b32 	%r1597, {%rs405, %rs406};
	st.shared.b32 	[%r1596], %r1597;
	mov.b32 	%r1598, {%rs407, %rs408};
	st.shared.b32 	[%r1596+4224], %r1598;
	mov.b32 	%r1599, {%rs409, %rs410};
	st.shared.b32 	[%r1596+64], %r1599;
	add.s32 	%r1600, %r1578, %r1595;
	mov.b32 	%r1601, {%rs411, %rs412};
	st.shared.b32 	[%r1600+4224], %r1601;
	mov.b32 	%r1602, {%rs413, %rs414};
	st.shared.b32 	[%r1596+128], %r1602;
	add.s32 	%r1603, %r1580, %r1595;
	mov.b32 	%r1604, {%rs415, %rs416};
	st.shared.b32 	[%r1603+4224], %r1604;
	mov.b32 	%r1605, {%rs417, %rs418};
	st.shared.b32 	[%r1596+192], %r1605;
	add.s32 	%r1606, %r1582, %r1595;
	mov.b32 	%r1607, {%rs419, %rs420};
	st.shared.b32 	[%r1606+4224], %r1607;
	mov.b32 	%r1608, {%rs421, %rs422};
	st.shared.b32 	[%r1596+256], %r1608;
	add.s32 	%r1609, %r1584, %r1595;
	mov.b32 	%r1610, {%rs423, %rs424};
	st.shared.b32 	[%r1609+4224], %r1610;
	mov.b32 	%r1611, {%rs425, %rs426};
	st.shared.b32 	[%r1596+320], %r1611;
	add.s32 	%r1612, %r1586, %r1595;
	mov.b32 	%r1613, {%rs427, %rs428};
	st.shared.b32 	[%r1612+4224], %r1613;
	mov.b32 	%r1614, {%rs429, %rs430};
	st.shared.b32 	[%r1596+384], %r1614;
	add.s32 	%r1615, %r1588, %r1595;
	mov.b32 	%r1616, {%rs431, %rs432};
	st.shared.b32 	[%r1615+4224], %r1616;
	mov.b32 	%r1617, {%rs433, %rs434};
	st.shared.b32 	[%r1596+448], %r1617;
	add.s32 	%r1618, %r1590, %r1595;
	mov.b32 	%r1619, {%rs435, %rs436};
	st.shared.b32 	[%r1618+4224], %r1619;
	bar.sync 	0;
	shl.b32 	%r1620, %r2, 3;
	mad.lo.s32 	%r1621, %r4, 264, %r1620;
	shl.b32 	%r1622, %r1621, 1;
	add.s32 	%r1623, %r493, %r1622;
	mov.b32 	%r1624, {%rs437, %rs438};
	mov.b32 	%r1625, {%rs439, %rs440};
	mov.b32 	%r1626, {%rs441, %rs442};
	mov.b32 	%r1627, {%rs443, %rs444};
	mov.b32 	%r1628, {%rs445, %rs446};
	mov.b32 	%r1629, {%rs447, %rs448};
	mov.b32 	%r1630, {%rs449, %rs450};
	mov.b32 	%r1631, {%rs451, %rs452};
	mov.b32 	%r1632, {%rs453, %rs454};
	mov.b32 	%r1633, {%rs455, %rs456};
	mov.b32 	%r1634, {%rs457, %rs458};
	mov.b32 	%r1635, {%rs459, %rs460};
	mov.b32 	%r1636, {%rs461, %rs462};
	mov.b32 	%r1637, {%rs463, %rs464};
	mov.b32 	%r1638, {%rs465, %rs466};
	mov.b32 	%r1639, {%rs467, %rs468};
	mov.b32 	%r1640, {%rs469, %rs470};
	mov.b32 	%r1641, {%rs471, %rs472};
	mov.b32 	%r1642, {%rs473, %rs474};
	mov.b32 	%r1643, {%rs475, %rs476};
	mov.b32 	%r1644, {%rs477, %rs478};
	mov.b32 	%r1645, {%rs479, %rs480};
	mov.b32 	%r1646, {%rs481, %rs482};
	mov.b32 	%r1647, {%rs483, %rs484};
	mov.b32 	%r1648, {%rs485, %rs486};
	mov.b32 	%r1649, {%rs487, %rs488};
	mov.b32 	%r1650, {%rs489, %rs490};
	mov.b32 	%r1651, {%rs491, %rs492};
	mov.b32 	%r1652, {%rs493, %rs494};
	mov.b32 	%r1653, {%rs495, %rs496};
	mov.b32 	%r1654, {%rs497, %rs498};
	mov.b32 	%r1655, {%rs499, %rs500};
	mov.b32 	%r1656, {%rs501, %rs502};
	mov.b32 	%r1657, {%rs503, %rs504};
	mov.b32 	%r1658, {%rs505, %rs506};
	mov.b32 	%r1659, {%rs507, %rs508};
	mov.b32 	%r1660, {%rs509, %rs510};
	mov.b32 	%r1661, {%rs511, %rs512};
	mov.b32 	%r1662, {%rs513, %rs514};
	mov.b32 	%r1663, {%rs515, %rs516};
	mov.b32 	%r1664, {%rs517, %rs518};
	mov.b32 	%r1665, {%rs519, %rs520};
	mov.b32 	%r1666, {%rs521, %rs522};
	mov.b32 	%r1667, {%rs523, %rs524};
	mov.b32 	%r1668, {%rs525, %rs526};
	mov.b32 	%r1669, {%rs527, %rs528};
	mov.b32 	%r1670, {%rs529, %rs530};
	mov.b32 	%r1671, {%rs531, %rs532};
	ld.shared.v4.b32 	{%r1672, %r1673, %r1674, %r1675}, [%r1623];
	.loc	1 127 23
	add.f16x2 	%r1676, %r1672, %r205;
	add.f16x2 	%r1677, %r1673, %r206;
	add.f16x2 	%r1678, %r1674, %r207;
	add.f16x2 	%r1679, %r1675, %r208;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1680, %r1681, %r1682, %r1683}, [%r1623+4224];
	.loc	1 127 23
	add.f16x2 	%r1684, %r1680, %r213;
	add.f16x2 	%r1685, %r1681, %r214;
	add.f16x2 	%r1686, %r1682, %r215;
	add.f16x2 	%r1687, %r1683, %r216;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1688, %r1689, %r1690, %r1691}, [%r1623+8448];
	.loc	1 127 23
	add.f16x2 	%r1692, %r1688, %r221;
	add.f16x2 	%r1693, %r1689, %r222;
	add.f16x2 	%r1694, %r1690, %r223;
	add.f16x2 	%r1695, %r1691, %r224;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1696, %r1697, %r1698, %r1699}, [%r1623+12672];
	.loc	1 127 23
	add.f16x2 	%r1700, %r1696, %r229;
	add.f16x2 	%r1701, %r1697, %r230;
	add.f16x2 	%r1702, %r1698, %r231;
	.loc	1 111 23
	bar.sync 	0;
	st.shared.b32 	[%r1596], %r1624;
	st.shared.b32 	[%r1596+4224], %r1625;
	st.shared.b32 	[%r1596+64], %r1626;
	st.shared.b32 	[%r1600+4224], %r1627;
	st.shared.b32 	[%r1596+128], %r1628;
	st.shared.b32 	[%r1603+4224], %r1629;
	st.shared.b32 	[%r1596+192], %r1630;
	st.shared.b32 	[%r1606+4224], %r1631;
	st.shared.b32 	[%r1596+256], %r1632;
	st.shared.b32 	[%r1609+4224], %r1633;
	st.shared.b32 	[%r1596+320], %r1634;
	st.shared.b32 	[%r1612+4224], %r1635;
	st.shared.b32 	[%r1596+384], %r1636;
	st.shared.b32 	[%r1615+4224], %r1637;
	st.shared.b32 	[%r1596+448], %r1638;
	st.shared.b32 	[%r1618+4224], %r1639;
	bar.sync 	0;
	.loc	1 127 23
	add.f16x2 	%r1703, %r1699, %r232;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1704, %r1705, %r1706, %r1707}, [%r1623];
	.loc	1 127 23
	add.f16x2 	%r1708, %r1704, %r237;
	add.f16x2 	%r1709, %r1705, %r238;
	add.f16x2 	%r1710, %r1706, %r239;
	add.f16x2 	%r1711, %r1707, %r240;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1712, %r1713, %r1714, %r1715}, [%r1623+4224];
	.loc	1 127 23
	add.f16x2 	%r1716, %r1712, %r245;
	add.f16x2 	%r1717, %r1713, %r246;
	add.f16x2 	%r1718, %r1714, %r247;
	add.f16x2 	%r1719, %r1715, %r248;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1720, %r1721, %r1722, %r1723}, [%r1623+8448];
	.loc	1 127 23
	add.f16x2 	%r1724, %r1720, %r253;
	add.f16x2 	%r1725, %r1721, %r254;
	add.f16x2 	%r1726, %r1722, %r255;
	add.f16x2 	%r1727, %r1723, %r256;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1728, %r1729, %r1730, %r1731}, [%r1623+12672];
	.loc	1 127 23
	add.f16x2 	%r1732, %r1728, %r261;
	add.f16x2 	%r1733, %r1729, %r262;
	add.f16x2 	%r1734, %r1730, %r263;
	.loc	1 111 23
	bar.sync 	0;
	st.shared.b32 	[%r1596], %r1640;
	st.shared.b32 	[%r1596+4224], %r1641;
	st.shared.b32 	[%r1596+64], %r1642;
	st.shared.b32 	[%r1600+4224], %r1643;
	st.shared.b32 	[%r1596+128], %r1644;
	st.shared.b32 	[%r1603+4224], %r1645;
	st.shared.b32 	[%r1596+192], %r1646;
	st.shared.b32 	[%r1606+4224], %r1647;
	st.shared.b32 	[%r1596+256], %r1648;
	st.shared.b32 	[%r1609+4224], %r1649;
	st.shared.b32 	[%r1596+320], %r1650;
	st.shared.b32 	[%r1612+4224], %r1651;
	st.shared.b32 	[%r1596+384], %r1652;
	st.shared.b32 	[%r1615+4224], %r1653;
	st.shared.b32 	[%r1596+448], %r1654;
	st.shared.b32 	[%r1618+4224], %r1655;
	bar.sync 	0;
	.loc	1 127 23
	add.f16x2 	%r1735, %r1731, %r264;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1736, %r1737, %r1738, %r1739}, [%r1623];
	.loc	1 127 23
	add.f16x2 	%r1740, %r1736, %r269;
	add.f16x2 	%r1741, %r1737, %r270;
	add.f16x2 	%r1742, %r1738, %r271;
	add.f16x2 	%r1743, %r1739, %r272;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1744, %r1745, %r1746, %r1747}, [%r1623+4224];
	.loc	1 127 23
	add.f16x2 	%r1748, %r1744, %r277;
	add.f16x2 	%r1749, %r1745, %r278;
	add.f16x2 	%r1750, %r1746, %r279;
	add.f16x2 	%r1751, %r1747, %r280;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1752, %r1753, %r1754, %r1755}, [%r1623+8448];
	.loc	1 127 23
	add.f16x2 	%r1756, %r1752, %r285;
	add.f16x2 	%r1757, %r1753, %r286;
	add.f16x2 	%r1758, %r1754, %r287;
	add.f16x2 	%r1759, %r1755, %r288;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1760, %r1761, %r1762, %r1763}, [%r1623+12672];
	.loc	1 127 23
	add.f16x2 	%r1764, %r1760, %r293;
	add.f16x2 	%r1765, %r1761, %r294;
	add.f16x2 	%r1766, %r1762, %r295;
	.loc	1 111 23
	bar.sync 	0;
	st.shared.b32 	[%r1596], %r1656;
	st.shared.b32 	[%r1596+4224], %r1657;
	st.shared.b32 	[%r1596+64], %r1658;
	st.shared.b32 	[%r1600+4224], %r1659;
	st.shared.b32 	[%r1596+128], %r1660;
	st.shared.b32 	[%r1603+4224], %r1661;
	st.shared.b32 	[%r1596+192], %r1662;
	st.shared.b32 	[%r1606+4224], %r1663;
	st.shared.b32 	[%r1596+256], %r1664;
	st.shared.b32 	[%r1609+4224], %r1665;
	st.shared.b32 	[%r1596+320], %r1666;
	st.shared.b32 	[%r1612+4224], %r1667;
	st.shared.b32 	[%r1596+384], %r1668;
	st.shared.b32 	[%r1615+4224], %r1669;
	st.shared.b32 	[%r1596+448], %r1670;
	st.shared.b32 	[%r1618+4224], %r1671;
	bar.sync 	0;
	.loc	1 127 23
	add.f16x2 	%r1767, %r1763, %r296;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1768, %r1769, %r1770, %r1771}, [%r1623];
	.loc	1 127 23
	add.f16x2 	%r1772, %r1768, %r301;
	add.f16x2 	%r1773, %r1769, %r302;
	add.f16x2 	%r1774, %r1770, %r303;
	add.f16x2 	%r1775, %r1771, %r304;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1776, %r1777, %r1778, %r1779}, [%r1623+4224];
	.loc	1 127 23
	add.f16x2 	%r1780, %r1776, %r309;
	add.f16x2 	%r1781, %r1777, %r310;
	add.f16x2 	%r1782, %r1778, %r311;
	add.f16x2 	%r1783, %r1779, %r312;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1784, %r1785, %r1786, %r1787}, [%r1623+8448];
	.loc	1 127 23
	add.f16x2 	%r1788, %r1784, %r317;
	add.f16x2 	%r1789, %r1785, %r318;
	add.f16x2 	%r1790, %r1786, %r319;
	add.f16x2 	%r1791, %r1787, %r320;
	.loc	1 111 23
	ld.shared.v4.b32 	{%r1792, %r1793, %r1794, %r1795}, [%r1623+12672];
	.loc	1 127 23
	add.f16x2 	%r1796, %r1792, %r325;
	add.f16x2 	%r1797, %r1793, %r326;
	add.f16x2 	%r1798, %r1794, %r327;
	add.f16x2 	%r1799, %r1795, %r328;
	.loc	1 129 21
	// begin inline asm
	@%p150 st.global.v4.b32 [ %rd117 + 0 ], { %r1676, %r1677, %r1678, %r1679 };
	// end inline asm
	// begin inline asm
	@%p151 st.global.v4.b32 [ %rd118 + 0 ], { %r1684, %r1685, %r1686, %r1687 };
	// end inline asm
	// begin inline asm
	@%p152 st.global.v4.b32 [ %rd119 + 0 ], { %r1692, %r1693, %r1694, %r1695 };
	// end inline asm
	// begin inline asm
	@%p153 st.global.v4.b32 [ %rd120 + 0 ], { %r1700, %r1701, %r1702, %r1703 };
	// end inline asm
	// begin inline asm
	@%p154 st.global.v4.b32 [ %rd121 + 0 ], { %r1708, %r1709, %r1710, %r1711 };
	// end inline asm
	// begin inline asm
	@%p155 st.global.v4.b32 [ %rd122 + 0 ], { %r1716, %r1717, %r1718, %r1719 };
	// end inline asm
	// begin inline asm
	@%p156 st.global.v4.b32 [ %rd123 + 0 ], { %r1724, %r1725, %r1726, %r1727 };
	// end inline asm
	// begin inline asm
	@%p157 st.global.v4.b32 [ %rd124 + 0 ], { %r1732, %r1733, %r1734, %r1735 };
	// end inline asm
	// begin inline asm
	@%p158 st.global.v4.b32 [ %rd125 + 0 ], { %r1740, %r1741, %r1742, %r1743 };
	// end inline asm
	// begin inline asm
	@%p159 st.global.v4.b32 [ %rd126 + 0 ], { %r1748, %r1749, %r1750, %r1751 };
	// end inline asm
	// begin inline asm
	@%p160 st.global.v4.b32 [ %rd127 + 0 ], { %r1756, %r1757, %r1758, %r1759 };
	// end inline asm
	// begin inline asm
	@%p161 st.global.v4.b32 [ %rd128 + 0 ], { %r1764, %r1765, %r1766, %r1767 };
	// end inline asm
	// begin inline asm
	@%p162 st.global.v4.b32 [ %rd129 + 0 ], { %r1772, %r1773, %r1774, %r1775 };
	// end inline asm
	// begin inline asm
	@%p163 st.global.v4.b32 [ %rd130 + 0 ], { %r1780, %r1781, %r1782, %r1783 };
	// end inline asm
	// begin inline asm
	@%p164 st.global.v4.b32 [ %rd131 + 0 ], { %r1788, %r1789, %r1790, %r1791 };
	// end inline asm
	// begin inline asm
	@%p165 st.global.v4.b32 [ %rd132 + 0 ], { %r1796, %r1797, %r1798, %r1799 };
	// end inline asm
	.loc	1 129 4
	ret;
$L__tmp6:
$L__func_end0:

}
	.file	1 "/home/mike/PycharmProjects/tritontest/compile_matmul_kernel_bias_accumulate_transpose_a_transpose_b.py"
	.file	2 "/home/mike/PycharmProjects/tritontest/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 211
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 111
.b8 109
.b8 112
.b8 105
.b8 108
.b8 101
.b8 95
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 105
.b8 107
.b8 101
.b8 47
.b8 80
.b8 121
.b8 99
.b8 104
.b8 97
.b8 114
.b8 109
.b8 80
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 116
.b8 101
.b8 115
.b8 116
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 104
.b8 4
.b32 104
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 58
.b8 27
.b8 4
.b32 104
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 59
.b8 27
.b8 4
.b32 104
.b64 $L__tmp4
.b64 $L__tmp5
.b8 1
.b8 93
.b8 33
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
)";

#define TRITON_MATMUL_KERNEL_15_SHARED_MEMORY_SIZE 49152
#define TRITON_MATMUL_KERNEL_15_BLOCK_SIZE_M 128
#define TRITON_MATMUL_KERNEL_15_BLOCK_SIZE_N 256
#define TRITON_MATMUL_KERNEL_15_NUM_WARPS 8
#define TRITON_MATMUL_KERNEL_15_FUNCTION_NAME "matmul_kernel_bias_accumulate_transpose_a_transpose_b"
