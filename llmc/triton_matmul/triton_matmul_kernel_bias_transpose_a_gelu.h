/*
 * WARNING: This is an autogenerated file. DO NOT EDIT.
 * This file was generated by generate_kernels.sh which intern launches compile_matmul_kernel.py */
#pragma once

#include <string>

const std::string TRITON_MATMUL_KERNEL_26_SOURCE_PTX = R"(
//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	matmul_kernel_bias_transpose_a_gelu
.extern .shared .align 16 .b8 global_smem[];

.visible .entry matmul_kernel_bias_transpose_a_gelu(
	.param .u64 matmul_kernel_bias_transpose_a_gelu_param_0,
	.param .u64 matmul_kernel_bias_transpose_a_gelu_param_1,
	.param .u64 matmul_kernel_bias_transpose_a_gelu_param_2,
	.param .u64 matmul_kernel_bias_transpose_a_gelu_param_3,
	.param .u64 matmul_kernel_bias_transpose_a_gelu_param_4,
	.param .u32 matmul_kernel_bias_transpose_a_gelu_param_5,
	.param .u32 matmul_kernel_bias_transpose_a_gelu_param_6,
	.param .u32 matmul_kernel_bias_transpose_a_gelu_param_7,
	.param .u32 matmul_kernel_bias_transpose_a_gelu_param_8,
	.param .u32 matmul_kernel_bias_transpose_a_gelu_param_9,
	.param .u32 matmul_kernel_bias_transpose_a_gelu_param_10
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<95>;
	.reg .b16 	%rs<773>;
	.reg .b32 	%r<2565>;
	.reg .f32 	%f<1281>;
	.reg .b64 	%rd<138>;
	.loc	1 41 0
$L__func_begin0:
	.loc	1 41 0

	ld.param.u32 	%r336, [matmul_kernel_bias_transpose_a_gelu_param_10];
	ld.param.u32 	%r335, [matmul_kernel_bias_transpose_a_gelu_param_7];
	ld.param.u32 	%r334, [matmul_kernel_bias_transpose_a_gelu_param_6];
	ld.param.u32 	%r333, [matmul_kernel_bias_transpose_a_gelu_param_5];
	ld.param.u64 	%rd24, [matmul_kernel_bias_transpose_a_gelu_param_4];
	ld.param.u64 	%rd23, [matmul_kernel_bias_transpose_a_gelu_param_3];
	ld.param.u64 	%rd22, [matmul_kernel_bias_transpose_a_gelu_param_2];
	ld.param.u64 	%rd21, [matmul_kernel_bias_transpose_a_gelu_param_1];
	ld.param.u64 	%rd37, [matmul_kernel_bias_transpose_a_gelu_param_0];
$L__tmp0:
	.loc	1 57 24
	// begin inline asm
	mov.u32 %r337, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 40 22
	add.s32 	%r403, %r333, 127;
	.loc	2 40 28
	shr.s32 	%r404, %r403, 31;
	shr.u32 	%r405, %r404, 25;
	add.s32 	%r406, %r403, %r405;
	shr.s32 	%r407, %r406, 7;
$L__tmp2:
	.loc	2 40 22
	add.s32 	%r408, %r334, 255;
	.loc	2 40 28
	shr.s32 	%r409, %r408, 31;
	shr.u32 	%r410, %r409, 24;
	add.s32 	%r411, %r408, %r410;
	shr.s32 	%r412, %r411, 8;
$L__tmp3:
	.loc	1 60 38
	shl.b32 	%r414, %r412, 3;
	ld.param.u32 	%r415, [matmul_kernel_bias_transpose_a_gelu_param_8];
	.loc	1 61 22
	div.s32 	%r416, %r337, %r414;
	ld.param.u32 	%r417, [matmul_kernel_bias_transpose_a_gelu_param_9];
	.loc	1 62 29
	shl.b32 	%r418, %r416, 3;
	.loc	1 63 35
	sub.s32 	%r419, %r407, %r418;
	.loc	1 63 48
	min.s32 	%r420, %r419, 8;
	.loc	1 64 33
	rem.s32 	%r421, %r337, %r420;
	.loc	1 64 27
	add.s32 	%r422, %r418, %r421;
	mul.lo.s32 	%r423, %r416, %r414;
	sub.s32 	%r424, %r337, %r423;
	.loc	1 65 40
	div.s32 	%r425, %r424, %r420;
	.loc	1 74 23
	shl.b32 	%r1, %r422, 7;
	.loc	1 74 51
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 31;
	shl.b32 	%r426, %r2, 3;
	and.b32  	%r427, %r426, 120;
	bfe.u32 	%r4, %r2, 5, 3;
	or.b32  	%r5, %r4, 8;
	or.b32  	%r6, %r4, 16;
	or.b32  	%r7, %r4, 24;
	.loc	1 74 38
	or.b32  	%r428, %r1, %r427;
	.loc	1 74 68
	rem.s32 	%r429, %r428, %r333;
	.loc	1 75 23
	shl.b32 	%r8, %r425, 8;
	.loc	1 75 51
	and.b32  	%r430, %r426, 248;
	.loc	1 75 38
	or.b32  	%r9, %r8, %r430;
	.loc	1 75 68
	rem.s32 	%r431, %r9, %r334;
	.loc	1 77 60
	bfe.u32 	%r10, %r2, 4, 4;
	or.b32  	%r432, %r10, 16;
	.loc	1 77 71
	shl.b32 	%r433, %r415, 4;
	.loc	1 77 53
	mad.lo.s32 	%r434, %r10, %r415, %r429;
	add.s32 	%r435, %r434, %r433;
	.loc	1 77 22
	mul.wide.s32 	%rd38, %r434, 2;
	add.s64 	%rd25, %rd37, %rd38;
	mul.wide.s32 	%rd39, %r435, 2;
	add.s64 	%rd26, %rd37, %rd39;
	.loc	1 78 40
	shl.b32 	%r436, %r417, 3;
	.loc	1 78 52
	mad.lo.s32 	%r437, %r4, %r417, %r431;
	add.s32 	%r438, %r437, %r436;
	add.s32 	%r439, %r438, %r436;
	add.s32 	%r440, %r439, %r436;
	.loc	1 78 22
	mul.wide.s32 	%rd40, %r437, 2;
	add.s64 	%rd27, %rd21, %rd40;
	mul.wide.s32 	%rd41, %r438, 2;
	add.s64 	%rd28, %rd21, %rd41;
	mul.wide.s32 	%rd42, %r439, 2;
	add.s64 	%rd29, %rd21, %rd42;
	mul.wide.s32 	%rd43, %r440, 2;
	add.s64 	%rd30, %rd21, %rd43;
$L__tmp4:
	.loc	2 40 22
	add.s32 	%r441, %r335, 31;
$L__tmp5:
	.loc	1 102 33
	shl.b32 	%r445, %r415, 5;
	.loc	1 103 33
	shl.b32 	%r446, %r417, 5;
	.loc	1 93 22
	setp.lt.s32 	%p13, %r441, 32;
	setp.gt.s32 	%p14, %r441, 31;
	.loc	1 96 72
	setp.lt.s32 	%p15, %r10, %r335;
	setp.lt.s32 	%p16, %r432, %r335;
	.loc	1 96 20
	shr.u32 	%r447, %r2, 1;
	and.b32  	%r448, %r447, 56;
	xor.b32  	%r449, %r448, %r427;
	shl.b32 	%r450, %r10, 7;
	or.b32  	%r12, %r450, %r449;
	shl.b32 	%r451, %r12, 1;
	mov.u32 	%r452, global_smem;
	add.s32 	%r338, %r452, %r451;
	shl.b32 	%r453, %r432, 7;
	or.b32  	%r13, %r453, %r449;
	shl.b32 	%r454, %r13, 1;
	add.s32 	%r340, %r452, %r454;
	selp.b32 	%r455, 16, 0, %p14;
	selp.b32 	%r339, %r455, 0, %p15;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r338 + 0 ], [ %rd25 + 0 ], 0x10, %r339;
	// end inline asm
	selp.b32 	%r341, %r455, 0, %p16;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r340 + 0 ], [ %rd26 + 0 ], 0x10, %r341;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 72
	setp.lt.s32 	%p17, %r4, %r335;
	setp.lt.s32 	%p18, %r5, %r335;
	setp.lt.s32 	%p19, %r6, %r335;
	setp.lt.s32 	%p20, %r7, %r335;
	.loc	1 97 20
	shr.u32 	%r456, %r2, 2;
	and.b32  	%r457, %r456, 56;
	xor.b32  	%r458, %r457, %r430;
	shl.b32 	%r459, %r4, 8;
	or.b32  	%r14, %r458, %r459;
	shl.b32 	%r460, %r14, 1;
	add.s32 	%r461, %r452, 16384;
	add.s32 	%r342, %r461, %r460;
	shl.b32 	%r462, %r5, 8;
	or.b32  	%r15, %r462, %r458;
	shl.b32 	%r463, %r15, 1;
	add.s32 	%r344, %r461, %r463;
	shl.b32 	%r464, %r6, 8;
	or.b32  	%r16, %r464, %r458;
	shl.b32 	%r465, %r16, 1;
	add.s32 	%r346, %r461, %r465;
	shl.b32 	%r466, %r7, 8;
	or.b32  	%r17, %r466, %r458;
	shl.b32 	%r467, %r17, 1;
	add.s32 	%r348, %r461, %r467;
	selp.b32 	%r343, %r455, 0, %p17;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r342 + 0 ], [ %rd27 + 0 ], 0x10, %r343;
	// end inline asm
	selp.b32 	%r345, %r455, 0, %p18;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r344 + 0 ], [ %rd28 + 0 ], 0x10, %r345;
	// end inline asm
	selp.b32 	%r347, %r455, 0, %p19;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r346 + 0 ], [ %rd29 + 0 ], 0x10, %r347;
	// end inline asm
	selp.b32 	%r349, %r455, 0, %p20;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r348 + 0 ], [ %rd30 + 0 ], 0x10, %r349;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	setp.gt.s32 	%p21, %r441, 63;
	.loc	1 102 18
	mul.wide.s32 	%rd44, %r445, 2;
	add.s64 	%rd31, %rd25, %rd44;
	add.s64 	%rd32, %rd26, %rd44;
	.loc	1 103 18
	mul.wide.s32 	%rd45, %r446, 2;
	add.s64 	%rd33, %rd27, %rd45;
	add.s64 	%rd34, %rd28, %rd45;
	add.s64 	%rd35, %rd29, %rd45;
	add.s64 	%rd36, %rd30, %rd45;
	.loc	1 96 53
	or.b32  	%r468, %r10, 32;
	or.b32  	%r469, %r10, 48;
	.loc	1 96 72
	setp.lt.s32 	%p22, %r468, %r335;
	setp.lt.s32 	%p23, %r469, %r335;
	.loc	1 96 20
	bar.sync 	0;
	add.s32 	%r470, %r452, 8192;
	add.s32 	%r350, %r470, %r451;
	add.s32 	%r352, %r470, %r454;
	selp.b32 	%r471, 16, 0, %p21;
	selp.b32 	%r351, %r471, 0, %p22;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r350 + 0 ], [ %rd31 + 0 ], 0x10, %r351;
	// end inline asm
	selp.b32 	%r353, %r471, 0, %p23;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r352 + 0 ], [ %rd32 + 0 ], 0x10, %r353;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 53
	or.b32  	%r18, %r4, 32;
	or.b32  	%r19, %r4, 40;
	or.b32  	%r20, %r4, 48;
	or.b32  	%r21, %r4, 56;
	.loc	1 97 72
	setp.lt.s32 	%p24, %r18, %r335;
	setp.lt.s32 	%p25, %r19, %r335;
	setp.lt.s32 	%p26, %r20, %r335;
	setp.lt.s32 	%p27, %r21, %r335;
	.loc	1 97 20
	add.s32 	%r472, %r452, 32768;
	add.s32 	%r354, %r472, %r460;
	add.s32 	%r356, %r472, %r463;
	add.s32 	%r358, %r472, %r465;
	add.s32 	%r360, %r472, %r467;
	selp.b32 	%r355, %r471, 0, %p24;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r354 + 0 ], [ %rd33 + 0 ], 0x10, %r355;
	// end inline asm
	selp.b32 	%r357, %r471, 0, %p25;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r356 + 0 ], [ %rd34 + 0 ], 0x10, %r357;
	// end inline asm
	selp.b32 	%r359, %r471, 0, %p26;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r358 + 0 ], [ %rd35 + 0 ], 0x10, %r359;
	// end inline asm
	selp.b32 	%r361, %r471, 0, %p27;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r360 + 0 ], [ %rd36 + 0 ], 0x10, %r361;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 96 20
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r22, %r2, 7, 1;
	and.b32  	%r473, %r2, 7;
	bfe.u32 	%r474, %r2, 3, 1;
	bfe.u32 	%r475, %r2, 4, 1;
	shl.b32 	%r476, %r22, 1;
	or.b32  	%r477, %r476, %r474;
	xor.b32  	%r478, %r477, %r473;
	shl.b32 	%r479, %r478, 3;
	shl.b32 	%r480, %r473, 7;
	shl.b32 	%r481, %r475, 10;
	or.b32  	%r482, %r481, %r480;
	or.b32  	%r23, %r479, %r482;
	shl.b32 	%r483, %r23, 1;
	add.s32 	%r366, %r452, %r483;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2428, %r2429, %r2430, %r2431 }, [ %r366 + 0 ];
	// end inline asm
	or.b32  	%r484, %r477, 4;
	xor.b32  	%r485, %r484, %r473;
	shl.b32 	%r486, %r485, 3;
	or.b32  	%r28, %r486, %r482;
	shl.b32 	%r487, %r28, 1;
	add.s32 	%r371, %r452, %r487;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2424, %r2425, %r2426, %r2427 }, [ %r371 + 0 ];
	// end inline asm
	or.b32  	%r488, %r477, 8;
	xor.b32  	%r489, %r488, %r473;
	shl.b32 	%r490, %r489, 3;
	or.b32  	%r33, %r490, %r482;
	shl.b32 	%r491, %r33, 1;
	add.s32 	%r376, %r452, %r491;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2420, %r2421, %r2422, %r2423 }, [ %r376 + 0 ];
	// end inline asm
	or.b32  	%r492, %r477, 12;
	xor.b32  	%r493, %r492, %r473;
	shl.b32 	%r494, %r493, 3;
	or.b32  	%r38, %r494, %r482;
	shl.b32 	%r495, %r38, 1;
	add.s32 	%r381, %r452, %r495;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2416, %r2417, %r2418, %r2419 }, [ %r381 + 0 ];
	// end inline asm
	.loc	1 97 20
	bfe.u32 	%r43, %r2, 5, 2;
	shl.b32 	%r496, %r475, 2;
	or.b32  	%r497, %r496, %r43;
	and.b32  	%r498, %r2, 15;
	xor.b32  	%r499, %r497, %r473;
	shl.b32 	%r500, %r499, 3;
	shl.b32 	%r501, %r498, 8;
	or.b32  	%r44, %r500, %r501;
	shl.b32 	%r502, %r44, 1;
	add.s32 	%r386, %r461, %r502;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2412, %r2413, %r2414, %r2415 }, [ %r386 + 0 ];
	// end inline asm
	or.b32  	%r503, %r497, 8;
	xor.b32  	%r504, %r503, %r473;
	shl.b32 	%r505, %r504, 3;
	add.s32 	%r49, %r505, %r501;
	shl.b32 	%r506, %r49, 1;
	add.s32 	%r391, %r461, %r506;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2408, %r2409, %r2410, %r2411 }, [ %r391 + 0 ];
	// end inline asm
	or.b32  	%r507, %r497, 16;
	xor.b32  	%r508, %r507, %r473;
	shl.b32 	%r509, %r508, 3;
	add.s32 	%r54, %r509, %r501;
	shl.b32 	%r510, %r54, 1;
	add.s32 	%r396, %r461, %r510;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2404, %r2405, %r2406, %r2407 }, [ %r396 + 0 ];
	// end inline asm
	or.b32  	%r511, %r497, 24;
	xor.b32  	%r512, %r511, %r473;
	shl.b32 	%r513, %r512, 3;
	add.s32 	%r59, %r513, %r501;
	shl.b32 	%r514, %r59, 1;
	add.s32 	%r401, %r461, %r514;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2400, %r2401, %r2402, %r2403 }, [ %r401 + 0 ];
	// end inline asm
	mov.b32 	%r2500, 0;
	mov.u32 	%r2499, %r2500;
	mov.u32 	%r2498, %r2500;
	mov.u32 	%r2497, %r2500;
	mov.u32 	%r2496, %r2500;
	mov.u32 	%r2495, %r2500;
	mov.u32 	%r2494, %r2500;
	mov.u32 	%r2493, %r2500;
	mov.u32 	%r2492, %r2500;
	mov.u32 	%r2491, %r2500;
	mov.u32 	%r2490, %r2500;
	mov.u32 	%r2489, %r2500;
	mov.u32 	%r2488, %r2500;
	mov.u32 	%r2487, %r2500;
	mov.u32 	%r2486, %r2500;
	mov.u32 	%r2485, %r2500;
	mov.u32 	%r2484, %r2500;
	mov.u32 	%r2483, %r2500;
	mov.u32 	%r2482, %r2500;
	mov.u32 	%r2481, %r2500;
	mov.u32 	%r2480, %r2500;
	mov.u32 	%r2479, %r2500;
	mov.u32 	%r2478, %r2500;
	mov.u32 	%r2477, %r2500;
	mov.u32 	%r2476, %r2500;
	mov.u32 	%r2475, %r2500;
	mov.u32 	%r2474, %r2500;
	mov.u32 	%r2473, %r2500;
	mov.u32 	%r2472, %r2500;
	mov.u32 	%r2471, %r2500;
	mov.u32 	%r2470, %r2500;
	mov.u32 	%r2469, %r2500;
	mov.u32 	%r2468, %r2500;
	mov.u32 	%r2467, %r2500;
	mov.u32 	%r2466, %r2500;
	mov.u32 	%r2465, %r2500;
	mov.u32 	%r2464, %r2500;
	mov.u32 	%r2463, %r2500;
	mov.u32 	%r2462, %r2500;
	mov.u32 	%r2461, %r2500;
	mov.u32 	%r2460, %r2500;
	mov.u32 	%r2459, %r2500;
	mov.u32 	%r2458, %r2500;
	mov.u32 	%r2457, %r2500;
	mov.u32 	%r2456, %r2500;
	mov.u32 	%r2455, %r2500;
	mov.u32 	%r2454, %r2500;
	mov.u32 	%r2453, %r2500;
	mov.u32 	%r2452, %r2500;
	mov.u32 	%r2451, %r2500;
	mov.u32 	%r2450, %r2500;
	mov.u32 	%r2449, %r2500;
	mov.u32 	%r2448, %r2500;
	mov.u32 	%r2447, %r2500;
	mov.u32 	%r2446, %r2500;
	mov.u32 	%r2445, %r2500;
	mov.u32 	%r2444, %r2500;
	mov.u32 	%r2443, %r2500;
	mov.u32 	%r2442, %r2500;
	mov.u32 	%r2441, %r2500;
	mov.u32 	%r2440, %r2500;
	mov.u32 	%r2439, %r2500;
	mov.u32 	%r2438, %r2500;
	mov.u32 	%r2437, %r2500;
	.loc	1 93 22
	@%p13 bra 	$L__BB0_3;
	.loc	1 0 22
	cvt.s64.s32 	%rd3, %r437;
	cvt.s64.s32 	%rd4, %r438;
	cvt.s64.s32 	%rd5, %r439;
	cvt.s64.s32 	%rd6, %r440;
	shr.s32 	%r442, %r441, 31;
	shr.u32 	%r443, %r442, 27;
	add.s32 	%r444, %r441, %r443;
	shr.s32 	%r11, %r444, 5;
	cvt.s64.s32 	%rd7, %r445;
	cvt.s64.s32 	%rd8, %r446;
	add.s32 	%r64, %r11, -2;
	.loc	1 93 22
	shl.b64 	%rd9, %rd6, 1;
	shl.b64 	%rd46, %rd8, 2;
	add.s64 	%rd137, %rd21, %rd46;
	shl.b64 	%rd11, %rd8, 1;
	shl.b64 	%rd12, %rd5, 1;
	shl.b64 	%rd13, %rd4, 1;
	shl.b64 	%rd14, %rd3, 1;
	shl.b64 	%rd136, %rd7, 2;
	shl.b64 	%rd16, %rd7, 1;
	mov.b32 	%r2437, 0;
	mov.b32 	%r2435, 1;
	mov.b32 	%r2399, 0;
	mov.u32 	%r2432, %r461;
	mov.u32 	%r2433, %r452;
	mov.u32 	%r2434, %r2399;
	mov.u32 	%r2436, %r2399;
	mov.u32 	%r2438, %r2437;
	mov.u32 	%r2439, %r2437;
	mov.u32 	%r2440, %r2437;
	mov.u32 	%r2441, %r2437;
	mov.u32 	%r2442, %r2437;
	mov.u32 	%r2443, %r2437;
	mov.u32 	%r2444, %r2437;
	mov.u32 	%r2445, %r2437;
	mov.u32 	%r2446, %r2437;
	mov.u32 	%r2447, %r2437;
	mov.u32 	%r2448, %r2437;
	mov.u32 	%r2449, %r2437;
	mov.u32 	%r2450, %r2437;
	mov.u32 	%r2451, %r2437;
	mov.u32 	%r2452, %r2437;
	mov.u32 	%r2453, %r2437;
	mov.u32 	%r2454, %r2437;
	mov.u32 	%r2455, %r2437;
	mov.u32 	%r2456, %r2437;
	mov.u32 	%r2457, %r2437;
	mov.u32 	%r2458, %r2437;
	mov.u32 	%r2459, %r2437;
	mov.u32 	%r2460, %r2437;
	mov.u32 	%r2461, %r2437;
	mov.u32 	%r2462, %r2437;
	mov.u32 	%r2463, %r2437;
	mov.u32 	%r2464, %r2437;
	mov.u32 	%r2465, %r2437;
	mov.u32 	%r2466, %r2437;
	mov.u32 	%r2467, %r2437;
	mov.u32 	%r2468, %r2437;
	mov.u32 	%r2469, %r2437;
	mov.u32 	%r2470, %r2437;
	mov.u32 	%r2471, %r2437;
	mov.u32 	%r2472, %r2437;
	mov.u32 	%r2473, %r2437;
	mov.u32 	%r2474, %r2437;
	mov.u32 	%r2475, %r2437;
	mov.u32 	%r2476, %r2437;
	mov.u32 	%r2477, %r2437;
	mov.u32 	%r2478, %r2437;
	mov.u32 	%r2479, %r2437;
	mov.u32 	%r2480, %r2437;
	mov.u32 	%r2481, %r2437;
	mov.u32 	%r2482, %r2437;
	mov.u32 	%r2483, %r2437;
	mov.u32 	%r2484, %r2437;
	mov.u32 	%r2485, %r2437;
	mov.u32 	%r2486, %r2437;
	mov.u32 	%r2487, %r2437;
	mov.u32 	%r2488, %r2437;
	mov.u32 	%r2489, %r2437;
	mov.u32 	%r2490, %r2437;
	mov.u32 	%r2491, %r2437;
	mov.u32 	%r2492, %r2437;
	mov.u32 	%r2493, %r2437;
	mov.u32 	%r2494, %r2437;
	mov.u32 	%r2495, %r2437;
	mov.u32 	%r2496, %r2437;
	mov.u32 	%r2497, %r2437;
	mov.u32 	%r2498, %r2437;
	mov.u32 	%r2499, %r2437;
	mov.u32 	%r2500, %r2437;
$L__BB0_2:
	setp.lt.s32 	%p34, %r2436, %r64;
	.loc	1 96 20
	add.s32 	%r1253, %r2433, %r483;
	add.s32 	%r524, %r1253, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r936, %r937, %r938, %r939 }, [ %r524 + 0 ];
	// end inline asm
	add.s32 	%r1255, %r2433, %r487;
	add.s32 	%r529, %r1255, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1016, %r1017, %r1018, %r1019 }, [ %r529 + 0 ];
	// end inline asm
	add.s32 	%r1257, %r2433, %r491;
	add.s32 	%r534, %r1257, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1096, %r1097, %r1098, %r1099 }, [ %r534 + 0 ];
	// end inline asm
	add.s32 	%r1259, %r2433, %r495;
	add.s32 	%r539, %r1259, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1176, %r1177, %r1178, %r1179 }, [ %r539 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r1261, %r2432, %r502;
	add.s32 	%r544, %r1261, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r940, %r941, %r950, %r951 }, [ %r544 + 0 ];
	// end inline asm
	add.s32 	%r1263, %r2432, %r506;
	add.s32 	%r549, %r1263, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r960, %r961, %r970, %r971 }, [ %r549 + 0 ];
	// end inline asm
	add.s32 	%r1265, %r2432, %r510;
	add.s32 	%r554, %r1265, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r980, %r981, %r990, %r991 }, [ %r554 + 0 ];
	// end inline asm
	add.s32 	%r1267, %r2432, %r514;
	add.s32 	%r559, %r1267, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1000, %r1001, %r1010, %r1011 }, [ %r559 + 0 ];
	// end inline asm
	.loc	1 100 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2500, %r2499 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2412, %r2413 }, { %r2500, %r2499 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2498, %r2497 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2414, %r2415 }, { %r2498, %r2497 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2496, %r2495 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2408, %r2409 }, { %r2496, %r2495 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2494, %r2493 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2410, %r2411 }, { %r2494, %r2493 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2492, %r2491 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2404, %r2405 }, { %r2492, %r2491 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2490, %r2489 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2406, %r2407 }, { %r2490, %r2489 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2488, %r2487 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2400, %r2401 }, { %r2488, %r2487 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2486, %r2485 }, { %r2428, %r2429, %r2430, %r2431 }, { %r2402, %r2403 }, { %r2486, %r2485 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2484, %r2483 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2412, %r2413 }, { %r2484, %r2483 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2482, %r2481 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2414, %r2415 }, { %r2482, %r2481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2480, %r2479 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2408, %r2409 }, { %r2480, %r2479 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2478, %r2477 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2410, %r2411 }, { %r2478, %r2477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2476, %r2475 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2404, %r2405 }, { %r2476, %r2475 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2474, %r2473 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2406, %r2407 }, { %r2474, %r2473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2472, %r2471 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2400, %r2401 }, { %r2472, %r2471 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2470, %r2469 }, { %r2424, %r2425, %r2426, %r2427 }, { %r2402, %r2403 }, { %r2470, %r2469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2468, %r2467 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2412, %r2413 }, { %r2468, %r2467 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2466, %r2465 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2414, %r2415 }, { %r2466, %r2465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2464, %r2463 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2408, %r2409 }, { %r2464, %r2463 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2462, %r2461 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2410, %r2411 }, { %r2462, %r2461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2460, %r2459 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2404, %r2405 }, { %r2460, %r2459 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2458, %r2457 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2406, %r2407 }, { %r2458, %r2457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2456, %r2455 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2400, %r2401 }, { %r2456, %r2455 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2454, %r2453 }, { %r2420, %r2421, %r2422, %r2423 }, { %r2402, %r2403 }, { %r2454, %r2453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2452, %r2451 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2412, %r2413 }, { %r2452, %r2451 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2450, %r2449 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2414, %r2415 }, { %r2450, %r2449 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2448, %r2447 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2408, %r2409 }, { %r2448, %r2447 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2446, %r2445 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2410, %r2411 }, { %r2446, %r2445 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2444, %r2443 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2404, %r2405 }, { %r2444, %r2443 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2442, %r2441 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2406, %r2407 }, { %r2442, %r2441 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2440, %r2439 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2400, %r2401 }, { %r2440, %r2439 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2438, %r2437 }, { %r2416, %r2417, %r2418, %r2419 }, { %r2402, %r2403 }, { %r2438, %r2437 };
	// end inline asm
	.loc	1 102 18
	add.s64 	%rd47, %rd25, %rd136;
	.loc	1 103 18
	add.s64 	%rd48, %rd26, %rd136;
	add.s64 	%rd49, %rd137, %rd14;
	add.s64 	%rd50, %rd137, %rd13;
	add.s64 	%rd51, %rd137, %rd12;
	.loc	1 93 22
	add.s64 	%rd52, %rd137, %rd9;
	add.s32 	%r1268, %r2435, 1;
	setp.lt.s32 	%p35, %r1268, 2;
	selp.b32 	%r2435, %r1268, 0, %p35;
	.loc	1 96 53
	add.s32 	%r1269, %r10, %r2399;
	add.s32 	%r1270, %r1269, 64;
	.loc	1 96 72
	add.s32 	%r1271, %r1269, 80;
	setp.lt.s32 	%p36, %r1270, %r335;
	setp.lt.s32 	%p37, %r1271, %r335;
	.loc	1 96 20
	shl.b32 	%r1272, %r2435, 13;
	add.s32 	%r1274, %r452, %r1272;
	bar.sync 	0;
	add.s32 	%r880, %r1274, %r451;
	add.s32 	%r882, %r1274, %r454;
	selp.b32 	%r1277, 16, 0, %p36;
	selp.b32 	%r881, %r1277, 0, %p34;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r880 + 0 ], [ %rd47 + 0 ], 0x10, %r881;
	// end inline asm
	selp.b32 	%r1278, 16, 0, %p37;
	selp.b32 	%r883, %r1278, 0, %p34;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r882 + 0 ], [ %rd48 + 0 ], 0x10, %r883;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 53
	add.s32 	%r1279, %r4, %r2399;
	add.s32 	%r1280, %r1279, 64;
	add.s32 	%r1281, %r1279, 72;
	add.s32 	%r1282, %r1279, 80;
	.loc	1 97 72
	add.s32 	%r1283, %r1279, 88;
	setp.lt.s32 	%p38, %r1280, %r335;
	setp.lt.s32 	%p39, %r1281, %r335;
	setp.lt.s32 	%p40, %r1282, %r335;
	setp.lt.s32 	%p41, %r1283, %r335;
	.loc	1 97 20
	shl.b32 	%r1284, %r2435, 14;
	add.s32 	%r1286, %r461, %r1284;
	add.s32 	%r884, %r1286, %r460;
	add.s32 	%r886, %r1286, %r463;
	add.s32 	%r888, %r1286, %r465;
	add.s32 	%r890, %r1286, %r467;
	selp.b32 	%r1291, 16, 0, %p38;
	selp.b32 	%r885, %r1291, 0, %p34;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r884 + 0 ], [ %rd49 + 0 ], 0x10, %r885;
	// end inline asm
	selp.b32 	%r1292, 16, 0, %p39;
	selp.b32 	%r887, %r1292, 0, %p34;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r886 + 0 ], [ %rd50 + 0 ], 0x10, %r887;
	// end inline asm
	selp.b32 	%r1293, 16, 0, %p40;
	selp.b32 	%r889, %r1293, 0, %p34;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r888 + 0 ], [ %rd51 + 0 ], 0x10, %r889;
	// end inline asm
	selp.b32 	%r1294, 16, 0, %p41;
	selp.b32 	%r891, %r1294, 0, %p34;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r890 + 0 ], [ %rd52 + 0 ], 0x10, %r891;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	add.s32 	%r1295, %r2434, 1;
	setp.lt.s32 	%p42, %r1295, 2;
	selp.b32 	%r2434, %r1295, 0, %p42;
	.loc	1 96 20
	shl.b32 	%r1296, %r2434, 13;
	add.s32 	%r2433, %r452, %r1296;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 97 20
	shl.b32 	%r1297, %r2434, 14;
	add.s32 	%r2432, %r461, %r1297;
	.loc	1 96 20
	add.s32 	%r896, %r2433, %r483;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2428, %r2429, %r2430, %r2431 }, [ %r896 + 0 ];
	// end inline asm
	add.s32 	%r901, %r2433, %r487;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2424, %r2425, %r2426, %r2427 }, [ %r901 + 0 ];
	// end inline asm
	add.s32 	%r906, %r2433, %r491;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2420, %r2421, %r2422, %r2423 }, [ %r906 + 0 ];
	// end inline asm
	add.s32 	%r911, %r2433, %r495;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2416, %r2417, %r2418, %r2419 }, [ %r911 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r916, %r2432, %r502;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2412, %r2413, %r2414, %r2415 }, [ %r916 + 0 ];
	// end inline asm
	add.s32 	%r921, %r2432, %r506;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2408, %r2409, %r2410, %r2411 }, [ %r921 + 0 ];
	// end inline asm
	add.s32 	%r926, %r2432, %r510;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2404, %r2405, %r2406, %r2407 }, [ %r926 + 0 ];
	// end inline asm
	add.s32 	%r931, %r2432, %r514;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2400, %r2401, %r2402, %r2403 }, [ %r931 + 0 ];
	// end inline asm
	.loc	1 100 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2500, %r2499 }, { %r936, %r937, %r938, %r939 }, { %r940, %r941 }, { %r2500, %r2499 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2498, %r2497 }, { %r936, %r937, %r938, %r939 }, { %r950, %r951 }, { %r2498, %r2497 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2496, %r2495 }, { %r936, %r937, %r938, %r939 }, { %r960, %r961 }, { %r2496, %r2495 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2494, %r2493 }, { %r936, %r937, %r938, %r939 }, { %r970, %r971 }, { %r2494, %r2493 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2492, %r2491 }, { %r936, %r937, %r938, %r939 }, { %r980, %r981 }, { %r2492, %r2491 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2490, %r2489 }, { %r936, %r937, %r938, %r939 }, { %r990, %r991 }, { %r2490, %r2489 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2488, %r2487 }, { %r936, %r937, %r938, %r939 }, { %r1000, %r1001 }, { %r2488, %r2487 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2486, %r2485 }, { %r936, %r937, %r938, %r939 }, { %r1010, %r1011 }, { %r2486, %r2485 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2484, %r2483 }, { %r1016, %r1017, %r1018, %r1019 }, { %r940, %r941 }, { %r2484, %r2483 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2482, %r2481 }, { %r1016, %r1017, %r1018, %r1019 }, { %r950, %r951 }, { %r2482, %r2481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2480, %r2479 }, { %r1016, %r1017, %r1018, %r1019 }, { %r960, %r961 }, { %r2480, %r2479 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2478, %r2477 }, { %r1016, %r1017, %r1018, %r1019 }, { %r970, %r971 }, { %r2478, %r2477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2476, %r2475 }, { %r1016, %r1017, %r1018, %r1019 }, { %r980, %r981 }, { %r2476, %r2475 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2474, %r2473 }, { %r1016, %r1017, %r1018, %r1019 }, { %r990, %r991 }, { %r2474, %r2473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2472, %r2471 }, { %r1016, %r1017, %r1018, %r1019 }, { %r1000, %r1001 }, { %r2472, %r2471 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2470, %r2469 }, { %r1016, %r1017, %r1018, %r1019 }, { %r1010, %r1011 }, { %r2470, %r2469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2468, %r2467 }, { %r1096, %r1097, %r1098, %r1099 }, { %r940, %r941 }, { %r2468, %r2467 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2466, %r2465 }, { %r1096, %r1097, %r1098, %r1099 }, { %r950, %r951 }, { %r2466, %r2465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2464, %r2463 }, { %r1096, %r1097, %r1098, %r1099 }, { %r960, %r961 }, { %r2464, %r2463 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2462, %r2461 }, { %r1096, %r1097, %r1098, %r1099 }, { %r970, %r971 }, { %r2462, %r2461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2460, %r2459 }, { %r1096, %r1097, %r1098, %r1099 }, { %r980, %r981 }, { %r2460, %r2459 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2458, %r2457 }, { %r1096, %r1097, %r1098, %r1099 }, { %r990, %r991 }, { %r2458, %r2457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2456, %r2455 }, { %r1096, %r1097, %r1098, %r1099 }, { %r1000, %r1001 }, { %r2456, %r2455 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2454, %r2453 }, { %r1096, %r1097, %r1098, %r1099 }, { %r1010, %r1011 }, { %r2454, %r2453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2452, %r2451 }, { %r1176, %r1177, %r1178, %r1179 }, { %r940, %r941 }, { %r2452, %r2451 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2450, %r2449 }, { %r1176, %r1177, %r1178, %r1179 }, { %r950, %r951 }, { %r2450, %r2449 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2448, %r2447 }, { %r1176, %r1177, %r1178, %r1179 }, { %r960, %r961 }, { %r2448, %r2447 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2446, %r2445 }, { %r1176, %r1177, %r1178, %r1179 }, { %r970, %r971 }, { %r2446, %r2445 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2444, %r2443 }, { %r1176, %r1177, %r1178, %r1179 }, { %r980, %r981 }, { %r2444, %r2443 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2442, %r2441 }, { %r1176, %r1177, %r1178, %r1179 }, { %r990, %r991 }, { %r2442, %r2441 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2440, %r2439 }, { %r1176, %r1177, %r1178, %r1179 }, { %r1000, %r1001 }, { %r2440, %r2439 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2438, %r2437 }, { %r1176, %r1177, %r1178, %r1179 }, { %r1010, %r1011 }, { %r2438, %r2437 };
	// end inline asm
	.loc	1 93 22
	add.s32 	%r2436, %r2436, 1;
	add.s64 	%rd137, %rd137, %rd11;
	add.s64 	%rd136, %rd136, %rd16;
	add.s32 	%r2399, %r2399, 32;
	setp.lt.s32 	%p43, %r2436, %r11;
	@%p43 bra 	$L__BB0_2;
$L__BB0_3:
	.loc	1 74 51
	or.b32  	%r1810, %r1, %r4;
	.loc	1 74 38
	or.b32  	%r1811, %r1810, 120;
	.loc	1 83 33
	setp.lt.s32 	%p78, %r1811, %r333;
	.loc	1 83 58
	setp.lt.s32 	%p79, %r9, %r334;
	.loc	1 83 39
	and.pred  	%p61, %p78, %p79;
	.loc	1 74 38
	or.b32  	%r1812, %r1810, 112;
	.loc	1 83 33
	setp.lt.s32 	%p80, %r1812, %r333;
	.loc	1 83 39
	and.pred  	%p60, %p80, %p79;
	.loc	1 74 38
	or.b32  	%r1813, %r1810, 104;
	.loc	1 83 33
	setp.lt.s32 	%p81, %r1813, %r333;
	.loc	1 83 39
	and.pred  	%p59, %p81, %p79;
	.loc	1 74 38
	or.b32  	%r1814, %r1810, 96;
	.loc	1 83 33
	setp.lt.s32 	%p82, %r1814, %r333;
	.loc	1 83 39
	and.pred  	%p58, %p82, %p79;
	.loc	1 74 38
	or.b32  	%r1815, %r1810, 88;
	.loc	1 83 33
	setp.lt.s32 	%p83, %r1815, %r333;
	.loc	1 83 39
	and.pred  	%p57, %p83, %p79;
	.loc	1 74 38
	or.b32  	%r1816, %r1810, 80;
	.loc	1 83 33
	setp.lt.s32 	%p84, %r1816, %r333;
	.loc	1 83 39
	and.pred  	%p56, %p84, %p79;
	.loc	1 74 38
	or.b32  	%r1817, %r1810, 72;
	.loc	1 83 33
	setp.lt.s32 	%p85, %r1817, %r333;
	.loc	1 83 39
	and.pred  	%p55, %p85, %p79;
	.loc	1 74 38
	or.b32  	%r1818, %r1810, 64;
	.loc	1 83 33
	setp.lt.s32 	%p86, %r1818, %r333;
	.loc	1 83 39
	and.pred  	%p54, %p86, %p79;
	.loc	1 74 38
	or.b32  	%r1819, %r1, %r21;
	.loc	1 83 33
	setp.lt.s32 	%p87, %r1819, %r333;
	.loc	1 83 39
	and.pred  	%p53, %p87, %p79;
	.loc	1 74 38
	or.b32  	%r1820, %r1, %r20;
	.loc	1 83 33
	setp.lt.s32 	%p88, %r1820, %r333;
	.loc	1 83 39
	and.pred  	%p52, %p88, %p79;
	.loc	1 74 38
	or.b32  	%r1821, %r1, %r19;
	.loc	1 83 33
	setp.lt.s32 	%p89, %r1821, %r333;
	.loc	1 83 39
	and.pred  	%p51, %p89, %p79;
	.loc	1 74 38
	or.b32  	%r1822, %r1, %r18;
	.loc	1 83 33
	setp.lt.s32 	%p90, %r1822, %r333;
	.loc	1 83 39
	and.pred  	%p50, %p90, %p79;
	.loc	1 74 38
	or.b32  	%r1823, %r1, %r7;
	.loc	1 83 33
	setp.lt.s32 	%p91, %r1823, %r333;
	.loc	1 83 39
	and.pred  	%p49, %p91, %p79;
	.loc	1 74 38
	or.b32  	%r1824, %r1, %r6;
	.loc	1 83 33
	setp.lt.s32 	%p92, %r1824, %r333;
	.loc	1 83 39
	and.pred  	%p48, %p92, %p79;
	.loc	1 74 38
	or.b32  	%r1825, %r1, %r5;
	.loc	1 83 33
	setp.lt.s32 	%p93, %r1825, %r333;
	.loc	1 83 39
	and.pred  	%p47, %p93, %p79;
	.loc	1 83 33
	setp.lt.s32 	%p94, %r1810, %r333;
	.loc	1 83 39
	and.pred  	%p46, %p94, %p79;
	.loc	1 82 33
	mul.lo.s32 	%r1826, %r1811, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd86, %r1826, 2;
	add.s64 	%rd87, %rd22, %rd86;
	.loc	1 82 52
	mul.wide.s32 	%rd88, %r9, 2;
	add.s64 	%rd85, %rd87, %rd88;
	.loc	1 82 33
	shl.b32 	%r1827, %r336, 3;
	sub.s32 	%r1828, %r1826, %r1827;
	.loc	1 82 21
	mul.wide.s32 	%rd89, %r1828, 2;
	add.s64 	%rd90, %rd22, %rd89;
	.loc	1 82 52
	add.s64 	%rd84, %rd90, %rd88;
	.loc	1 82 33
	sub.s32 	%r1829, %r1828, %r1827;
	.loc	1 82 21
	mul.wide.s32 	%rd91, %r1829, 2;
	add.s64 	%rd92, %rd22, %rd91;
	.loc	1 82 52
	add.s64 	%rd83, %rd92, %rd88;
	.loc	1 82 33
	sub.s32 	%r1830, %r1829, %r1827;
	.loc	1 82 21
	mul.wide.s32 	%rd93, %r1830, 2;
	add.s64 	%rd94, %rd22, %rd93;
	.loc	1 82 52
	add.s64 	%rd82, %rd94, %rd88;
	.loc	1 82 33
	sub.s32 	%r1831, %r1830, %r1827;
	.loc	1 82 21
	mul.wide.s32 	%rd95, %r1831, 2;
	add.s64 	%rd96, %rd22, %rd95;
	.loc	1 82 52
	add.s64 	%rd81, %rd96, %rd88;
	.loc	1 82 33
	sub.s32 	%r1832, %r1831, %r1827;
	.loc	1 82 21
	mul.wide.s32 	%rd97, %r1832, 2;
	add.s64 	%rd98, %rd22, %rd97;
	.loc	1 82 52
	add.s64 	%rd80, %rd98, %rd88;
	.loc	1 82 33
	sub.s32 	%r1833, %r1832, %r1827;
	.loc	1 82 21
	mul.wide.s32 	%rd99, %r1833, 2;
	add.s64 	%rd100, %rd22, %rd99;
	.loc	1 82 52
	add.s64 	%rd79, %rd100, %rd88;
	.loc	1 82 33
	sub.s32 	%r1834, %r1833, %r1827;
	.loc	1 82 21
	mul.wide.s32 	%rd101, %r1834, 2;
	add.s64 	%rd102, %rd22, %rd101;
	.loc	1 82 52
	add.s64 	%rd78, %rd102, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1835, %r1819, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd103, %r1835, 2;
	add.s64 	%rd104, %rd22, %rd103;
	.loc	1 82 52
	add.s64 	%rd77, %rd104, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1836, %r1820, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd105, %r1836, 2;
	add.s64 	%rd106, %rd22, %rd105;
	.loc	1 82 52
	add.s64 	%rd76, %rd106, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1837, %r1821, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd107, %r1837, 2;
	add.s64 	%rd108, %rd22, %rd107;
	.loc	1 82 52
	add.s64 	%rd75, %rd108, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1838, %r1822, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd109, %r1838, 2;
	add.s64 	%rd110, %rd22, %rd109;
	.loc	1 82 52
	add.s64 	%rd74, %rd110, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1839, %r1823, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd111, %r1839, 2;
	add.s64 	%rd112, %rd22, %rd111;
	.loc	1 82 52
	add.s64 	%rd73, %rd112, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1840, %r1824, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd113, %r1840, 2;
	add.s64 	%rd114, %rd22, %rd113;
	.loc	1 82 52
	add.s64 	%rd72, %rd114, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1841, %r1825, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd115, %r1841, 2;
	add.s64 	%rd116, %rd22, %rd115;
	.loc	1 82 52
	add.s64 	%rd71, %rd116, %rd88;
	.loc	1 82 33
	mul.lo.s32 	%r1842, %r1810, %r336;
	.loc	1 82 21
	mul.wide.s32 	%rd117, %r1842, 2;
	add.s64 	%rd118, %rd22, %rd117;
	.loc	1 82 52
	add.s64 	%rd70, %rd118, %rd88;
	.loc	1 75 51
	and.b32  	%r1843, %r2, 255;
	.loc	1 75 38
	or.b32  	%r1844, %r8, %r1843;
	.loc	1 93 22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 107 31
	mul.wide.s32 	%rd119, %r1844, 2;
	add.s64 	%rd53, %rd23, %rd119;
	.loc	1 108 32
	setp.lt.s32 	%p44, %r1844, %r334;
	mov.u16 	%rs2, 0;
	.loc	1 109 23
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p44 ld.global.b16 { %rs1 }, [ %rd53 + 0 ];
	@!%p44 mov.u16 %rs1, %rs2;
	// end inline asm
	.loc	1 110 30
	shl.b32 	%r1845, %r1843, 1;
	add.s32 	%r1847, %r452, %r1845;
	st.shared.u16 	[%r1847], %rs1;
	bar.sync 	0;
	shl.b32 	%r1848, %r43, 4;
	shl.b32 	%r1849, %r2, 2;
	and.b32  	%r1850, %r1849, 12;
	or.b32  	%r1851, %r1848, %r1850;
	add.s32 	%r1852, %r452, %r1851;
	add.s32 	%r1853, %r1852, 64;
	add.s32 	%r1854, %r1852, 128;
	add.s32 	%r1855, %r1852, 192;
	add.s32 	%r1856, %r1852, 256;
	add.s32 	%r1857, %r1852, 320;
	add.s32 	%r1858, %r1852, 384;
	add.s32 	%r1859, %r1852, 448;
	.loc	1 117 32
	add.s64 	%rd120, %rd24, %rd117;
	add.s64 	%rd121, %rd24, %rd115;
	add.s64 	%rd122, %rd24, %rd113;
	add.s64 	%rd123, %rd24, %rd111;
	add.s64 	%rd124, %rd24, %rd109;
	add.s64 	%rd125, %rd24, %rd107;
	add.s64 	%rd126, %rd24, %rd105;
	add.s64 	%rd127, %rd24, %rd103;
	add.s64 	%rd128, %rd24, %rd101;
	add.s64 	%rd129, %rd24, %rd99;
	add.s64 	%rd130, %rd24, %rd97;
	add.s64 	%rd131, %rd24, %rd95;
	add.s64 	%rd132, %rd24, %rd93;
	add.s64 	%rd133, %rd24, %rd91;
	add.s64 	%rd134, %rd24, %rd89;
	add.s64 	%rd135, %rd24, %rd86;
	.loc	1 117 63
	add.s64 	%rd54, %rd120, %rd88;
	add.s64 	%rd55, %rd121, %rd88;
	add.s64 	%rd56, %rd122, %rd88;
	add.s64 	%rd57, %rd123, %rd88;
	add.s64 	%rd58, %rd124, %rd88;
	add.s64 	%rd59, %rd125, %rd88;
	add.s64 	%rd60, %rd126, %rd88;
	add.s64 	%rd61, %rd127, %rd88;
	add.s64 	%rd62, %rd128, %rd88;
	add.s64 	%rd63, %rd129, %rd88;
	add.s64 	%rd64, %rd130, %rd88;
	add.s64 	%rd65, %rd131, %rd88;
	add.s64 	%rd66, %rd132, %rd88;
	add.s64 	%rd67, %rd133, %rd88;
	add.s64 	%rd68, %rd134, %rd88;
	add.s64 	%rd69, %rd135, %rd88;
	.loc	1 110 30
	ld.shared.b32 	%r1860, [%r1852];
	.loc	1 111 23
	add.f16x2 	%r1861, %r2500, %r1860;
$L__tmp6:
	.loc	1 152 33
	mov.b32 	%r1862, 939538432;
	mul.f16x2 	%r1863, %r1861, %r1862;
	.loc	1 153 90
	mov.b32 	%r1864, 615457967;
	mul.f16x2 	%r1865, %r1861, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1866, %r1861, %r1865;
	.loc	1 153 67
	fma.rn.f16x2 	%r1867, %r1861, %r1866, %r1861;
	.loc	1 153 63
	mov.b32 	%r1868, 980302446;
	mul.f16x2 	%r1869, %r1867, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1870, %r1869, %r1869;
	mov.b32 	{%rs3, %rs4}, %r1870;
	mov.b16 	%rs5, 0x4E32;
	.loc	1 143 45
	add.f16 	%rs6, %rs3, %rs5;
	add.f16 	%rs7, %rs4, %rs5;
	mov.b16 	%rs8, 0x4843;
	.loc	1 143 81
	fma.rn.f16 	%rs9, %rs3, %rs8, %rs5;
	fma.rn.f16 	%rs10, %rs4, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1, %rs6;
	cvt.f32.f16 	%f2, %rs7;
	cvt.f32.f16 	%f3, %rs9;
	cvt.f32.f16 	%f4, %rs10;
	.loc	1 143 18
	mov.b32 	{%rs11, %rs12}, %r1869;
	cvt.f32.f16 	%f5, %rs12;
	cvt.f32.f16 	%f6, %rs11;
	.loc	1 153 12
	mov.b32 	{%rs13, %rs14}, %r1863;
	cvt.f32.f16 	%f7, %rs14;
	cvt.f32.f16 	%f8, %rs13;
$L__tmp7:
	.loc	1 111 23
	add.f16x2 	%r1871, %r2499, %r1860;
$L__tmp8:
	.loc	1 152 33
	mul.f16x2 	%r1872, %r1871, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1873, %r1871, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1874, %r1871, %r1873;
	.loc	1 153 67
	fma.rn.f16x2 	%r1875, %r1871, %r1874, %r1871;
	.loc	1 153 63
	mul.f16x2 	%r1876, %r1875, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1877, %r1876, %r1876;
	mov.b32 	{%rs15, %rs16}, %r1877;
	.loc	1 143 45
	add.f16 	%rs17, %rs15, %rs5;
	add.f16 	%rs18, %rs16, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs19, %rs15, %rs8, %rs5;
	fma.rn.f16 	%rs20, %rs16, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f9, %rs17;
	cvt.f32.f16 	%f10, %rs18;
	cvt.f32.f16 	%f11, %rs19;
	cvt.f32.f16 	%f12, %rs20;
	.loc	1 143 18
	mov.b32 	{%rs21, %rs22}, %r1876;
	cvt.f32.f16 	%f13, %rs22;
	cvt.f32.f16 	%f14, %rs21;
	.loc	1 153 12
	mov.b32 	{%rs23, %rs24}, %r1872;
	cvt.f32.f16 	%f15, %rs24;
	cvt.f32.f16 	%f16, %rs23;
$L__tmp9:
	.loc	1 110 30
	ld.shared.b32 	%r1878, [%r1852+64];
	.loc	1 111 23
	add.f16x2 	%r1879, %r2498, %r1878;
$L__tmp10:
	.loc	1 152 33
	mul.f16x2 	%r1880, %r1879, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1881, %r1879, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1882, %r1879, %r1881;
	.loc	1 153 67
	fma.rn.f16x2 	%r1883, %r1879, %r1882, %r1879;
	.loc	1 153 63
	mul.f16x2 	%r1884, %r1883, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1885, %r1884, %r1884;
	mov.b32 	{%rs25, %rs26}, %r1885;
	.loc	1 143 45
	add.f16 	%rs27, %rs25, %rs5;
	add.f16 	%rs28, %rs26, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs29, %rs25, %rs8, %rs5;
	fma.rn.f16 	%rs30, %rs26, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f17, %rs27;
	cvt.f32.f16 	%f18, %rs28;
	cvt.f32.f16 	%f19, %rs29;
	cvt.f32.f16 	%f20, %rs30;
	.loc	1 143 18
	mov.b32 	{%rs31, %rs32}, %r1884;
	cvt.f32.f16 	%f21, %rs32;
	cvt.f32.f16 	%f22, %rs31;
	.loc	1 153 12
	mov.b32 	{%rs33, %rs34}, %r1880;
	cvt.f32.f16 	%f23, %rs34;
	cvt.f32.f16 	%f24, %rs33;
$L__tmp11:
	.loc	1 111 23
	add.f16x2 	%r1886, %r2497, %r1878;
$L__tmp12:
	.loc	1 152 33
	mul.f16x2 	%r1887, %r1886, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1888, %r1886, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1889, %r1886, %r1888;
	.loc	1 153 67
	fma.rn.f16x2 	%r1890, %r1886, %r1889, %r1886;
	.loc	1 153 63
	mul.f16x2 	%r1891, %r1890, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1892, %r1891, %r1891;
	mov.b32 	{%rs35, %rs36}, %r1892;
	.loc	1 143 45
	add.f16 	%rs37, %rs35, %rs5;
	add.f16 	%rs38, %rs36, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs39, %rs35, %rs8, %rs5;
	fma.rn.f16 	%rs40, %rs36, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f25, %rs37;
	cvt.f32.f16 	%f26, %rs38;
	cvt.f32.f16 	%f27, %rs39;
	cvt.f32.f16 	%f28, %rs40;
	.loc	1 143 18
	mov.b32 	{%rs41, %rs42}, %r1891;
	cvt.f32.f16 	%f29, %rs42;
	cvt.f32.f16 	%f30, %rs41;
	.loc	1 153 12
	mov.b32 	{%rs43, %rs44}, %r1887;
	cvt.f32.f16 	%f31, %rs44;
	cvt.f32.f16 	%f32, %rs43;
$L__tmp13:
	.loc	1 110 30
	ld.shared.b32 	%r1893, [%r1852+128];
	.loc	1 111 23
	add.f16x2 	%r1894, %r2496, %r1893;
$L__tmp14:
	.loc	1 152 33
	mul.f16x2 	%r1895, %r1894, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1896, %r1894, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1897, %r1894, %r1896;
	.loc	1 153 67
	fma.rn.f16x2 	%r1898, %r1894, %r1897, %r1894;
	.loc	1 153 63
	mul.f16x2 	%r1899, %r1898, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1900, %r1899, %r1899;
	mov.b32 	{%rs45, %rs46}, %r1900;
	.loc	1 143 45
	add.f16 	%rs47, %rs45, %rs5;
	add.f16 	%rs48, %rs46, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs49, %rs45, %rs8, %rs5;
	fma.rn.f16 	%rs50, %rs46, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f33, %rs47;
	cvt.f32.f16 	%f34, %rs48;
	cvt.f32.f16 	%f35, %rs49;
	cvt.f32.f16 	%f36, %rs50;
	.loc	1 143 18
	mov.b32 	{%rs51, %rs52}, %r1899;
	cvt.f32.f16 	%f37, %rs52;
	cvt.f32.f16 	%f38, %rs51;
	.loc	1 153 12
	mov.b32 	{%rs53, %rs54}, %r1895;
	cvt.f32.f16 	%f39, %rs54;
	cvt.f32.f16 	%f40, %rs53;
$L__tmp15:
	.loc	1 111 23
	add.f16x2 	%r1901, %r2495, %r1893;
$L__tmp16:
	.loc	1 152 33
	mul.f16x2 	%r1902, %r1901, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1903, %r1901, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1904, %r1901, %r1903;
	.loc	1 153 67
	fma.rn.f16x2 	%r1905, %r1901, %r1904, %r1901;
	.loc	1 153 63
	mul.f16x2 	%r1906, %r1905, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1907, %r1906, %r1906;
	mov.b32 	{%rs55, %rs56}, %r1907;
	.loc	1 143 45
	add.f16 	%rs57, %rs55, %rs5;
	add.f16 	%rs58, %rs56, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs59, %rs55, %rs8, %rs5;
	fma.rn.f16 	%rs60, %rs56, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f41, %rs57;
	cvt.f32.f16 	%f42, %rs58;
	cvt.f32.f16 	%f43, %rs59;
	cvt.f32.f16 	%f44, %rs60;
	.loc	1 143 18
	mov.b32 	{%rs61, %rs62}, %r1906;
	cvt.f32.f16 	%f45, %rs62;
	cvt.f32.f16 	%f46, %rs61;
	.loc	1 153 12
	mov.b32 	{%rs63, %rs64}, %r1902;
	cvt.f32.f16 	%f47, %rs64;
	cvt.f32.f16 	%f48, %rs63;
$L__tmp17:
	.loc	1 110 30
	ld.shared.b32 	%r1908, [%r1852+192];
	.loc	1 111 23
	add.f16x2 	%r1909, %r2494, %r1908;
$L__tmp18:
	.loc	1 152 33
	mul.f16x2 	%r1910, %r1909, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1911, %r1909, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1912, %r1909, %r1911;
	.loc	1 153 67
	fma.rn.f16x2 	%r1913, %r1909, %r1912, %r1909;
	.loc	1 153 63
	mul.f16x2 	%r1914, %r1913, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1915, %r1914, %r1914;
	mov.b32 	{%rs65, %rs66}, %r1915;
	.loc	1 143 45
	add.f16 	%rs67, %rs65, %rs5;
	add.f16 	%rs68, %rs66, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs69, %rs65, %rs8, %rs5;
	fma.rn.f16 	%rs70, %rs66, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f49, %rs67;
	cvt.f32.f16 	%f50, %rs68;
	cvt.f32.f16 	%f51, %rs69;
	cvt.f32.f16 	%f52, %rs70;
	.loc	1 143 18
	mov.b32 	{%rs71, %rs72}, %r1914;
	cvt.f32.f16 	%f53, %rs72;
	cvt.f32.f16 	%f54, %rs71;
	.loc	1 153 12
	mov.b32 	{%rs73, %rs74}, %r1910;
	cvt.f32.f16 	%f55, %rs74;
	cvt.f32.f16 	%f56, %rs73;
$L__tmp19:
	.loc	1 111 23
	add.f16x2 	%r1916, %r2493, %r1908;
$L__tmp20:
	.loc	1 152 33
	mul.f16x2 	%r1917, %r1916, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1918, %r1916, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1919, %r1916, %r1918;
	.loc	1 153 67
	fma.rn.f16x2 	%r1920, %r1916, %r1919, %r1916;
	.loc	1 153 63
	mul.f16x2 	%r1921, %r1920, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1922, %r1921, %r1921;
	mov.b32 	{%rs75, %rs76}, %r1922;
	.loc	1 143 45
	add.f16 	%rs77, %rs75, %rs5;
	add.f16 	%rs78, %rs76, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs79, %rs75, %rs8, %rs5;
	fma.rn.f16 	%rs80, %rs76, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f57, %rs77;
	cvt.f32.f16 	%f58, %rs78;
	cvt.f32.f16 	%f59, %rs79;
	cvt.f32.f16 	%f60, %rs80;
	.loc	1 143 18
	mov.b32 	{%rs81, %rs82}, %r1921;
	cvt.f32.f16 	%f61, %rs82;
	cvt.f32.f16 	%f62, %rs81;
	.loc	1 153 12
	mov.b32 	{%rs83, %rs84}, %r1917;
	cvt.f32.f16 	%f63, %rs84;
	cvt.f32.f16 	%f64, %rs83;
$L__tmp21:
	.loc	1 110 30
	ld.shared.b32 	%r1923, [%r1852+256];
	.loc	1 111 23
	add.f16x2 	%r1924, %r2492, %r1923;
$L__tmp22:
	.loc	1 152 33
	mul.f16x2 	%r1925, %r1924, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1926, %r1924, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1927, %r1924, %r1926;
	.loc	1 153 67
	fma.rn.f16x2 	%r1928, %r1924, %r1927, %r1924;
	.loc	1 153 63
	mul.f16x2 	%r1929, %r1928, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1930, %r1929, %r1929;
	mov.b32 	{%rs85, %rs86}, %r1930;
	.loc	1 143 45
	add.f16 	%rs87, %rs85, %rs5;
	add.f16 	%rs88, %rs86, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs89, %rs85, %rs8, %rs5;
	fma.rn.f16 	%rs90, %rs86, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f65, %rs87;
	cvt.f32.f16 	%f66, %rs88;
	cvt.f32.f16 	%f67, %rs89;
	cvt.f32.f16 	%f68, %rs90;
	.loc	1 143 18
	mov.b32 	{%rs91, %rs92}, %r1929;
	cvt.f32.f16 	%f69, %rs92;
	cvt.f32.f16 	%f70, %rs91;
	.loc	1 153 12
	mov.b32 	{%rs93, %rs94}, %r1925;
	cvt.f32.f16 	%f71, %rs94;
	cvt.f32.f16 	%f72, %rs93;
$L__tmp23:
	.loc	1 111 23
	add.f16x2 	%r1931, %r2491, %r1923;
$L__tmp24:
	.loc	1 152 33
	mul.f16x2 	%r1932, %r1931, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1933, %r1931, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1934, %r1931, %r1933;
	.loc	1 153 67
	fma.rn.f16x2 	%r1935, %r1931, %r1934, %r1931;
	.loc	1 153 63
	mul.f16x2 	%r1936, %r1935, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1937, %r1936, %r1936;
	mov.b32 	{%rs95, %rs96}, %r1937;
	.loc	1 143 45
	add.f16 	%rs97, %rs95, %rs5;
	add.f16 	%rs98, %rs96, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs99, %rs95, %rs8, %rs5;
	fma.rn.f16 	%rs100, %rs96, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f73, %rs97;
	cvt.f32.f16 	%f74, %rs98;
	cvt.f32.f16 	%f75, %rs99;
	cvt.f32.f16 	%f76, %rs100;
	.loc	1 143 18
	mov.b32 	{%rs101, %rs102}, %r1936;
	cvt.f32.f16 	%f77, %rs102;
	cvt.f32.f16 	%f78, %rs101;
	.loc	1 153 12
	mov.b32 	{%rs103, %rs104}, %r1932;
	cvt.f32.f16 	%f79, %rs104;
	cvt.f32.f16 	%f80, %rs103;
$L__tmp25:
	.loc	1 110 30
	ld.shared.b32 	%r1938, [%r1852+320];
	.loc	1 111 23
	add.f16x2 	%r1939, %r2490, %r1938;
$L__tmp26:
	.loc	1 152 33
	mul.f16x2 	%r1940, %r1939, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1941, %r1939, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1942, %r1939, %r1941;
	.loc	1 153 67
	fma.rn.f16x2 	%r1943, %r1939, %r1942, %r1939;
	.loc	1 153 63
	mul.f16x2 	%r1944, %r1943, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1945, %r1944, %r1944;
	mov.b32 	{%rs105, %rs106}, %r1945;
	.loc	1 143 45
	add.f16 	%rs107, %rs105, %rs5;
	add.f16 	%rs108, %rs106, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs109, %rs105, %rs8, %rs5;
	fma.rn.f16 	%rs110, %rs106, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f81, %rs107;
	cvt.f32.f16 	%f82, %rs108;
	cvt.f32.f16 	%f83, %rs109;
	cvt.f32.f16 	%f84, %rs110;
	.loc	1 143 18
	mov.b32 	{%rs111, %rs112}, %r1944;
	cvt.f32.f16 	%f85, %rs112;
	cvt.f32.f16 	%f86, %rs111;
	.loc	1 153 12
	mov.b32 	{%rs113, %rs114}, %r1940;
	cvt.f32.f16 	%f87, %rs114;
	cvt.f32.f16 	%f88, %rs113;
$L__tmp27:
	.loc	1 111 23
	add.f16x2 	%r1946, %r2489, %r1938;
$L__tmp28:
	.loc	1 152 33
	mul.f16x2 	%r1947, %r1946, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1948, %r1946, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1949, %r1946, %r1948;
	.loc	1 153 67
	fma.rn.f16x2 	%r1950, %r1946, %r1949, %r1946;
	.loc	1 153 63
	mul.f16x2 	%r1951, %r1950, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1952, %r1951, %r1951;
	mov.b32 	{%rs115, %rs116}, %r1952;
	.loc	1 143 45
	add.f16 	%rs117, %rs115, %rs5;
	add.f16 	%rs118, %rs116, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs119, %rs115, %rs8, %rs5;
	fma.rn.f16 	%rs120, %rs116, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f89, %rs117;
	cvt.f32.f16 	%f90, %rs118;
	cvt.f32.f16 	%f91, %rs119;
	cvt.f32.f16 	%f92, %rs120;
	.loc	1 143 18
	mov.b32 	{%rs121, %rs122}, %r1951;
	cvt.f32.f16 	%f93, %rs122;
	cvt.f32.f16 	%f94, %rs121;
	.loc	1 153 12
	mov.b32 	{%rs123, %rs124}, %r1947;
	cvt.f32.f16 	%f95, %rs124;
	cvt.f32.f16 	%f96, %rs123;
$L__tmp29:
	.loc	1 110 30
	ld.shared.b32 	%r1953, [%r1852+384];
	.loc	1 111 23
	add.f16x2 	%r1954, %r2488, %r1953;
$L__tmp30:
	.loc	1 152 33
	mul.f16x2 	%r1955, %r1954, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1956, %r1954, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1957, %r1954, %r1956;
	.loc	1 153 67
	fma.rn.f16x2 	%r1958, %r1954, %r1957, %r1954;
	.loc	1 153 63
	mul.f16x2 	%r1959, %r1958, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1960, %r1959, %r1959;
	mov.b32 	{%rs125, %rs126}, %r1960;
	.loc	1 143 45
	add.f16 	%rs127, %rs125, %rs5;
	add.f16 	%rs128, %rs126, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs129, %rs125, %rs8, %rs5;
	fma.rn.f16 	%rs130, %rs126, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f97, %rs127;
	cvt.f32.f16 	%f98, %rs128;
	cvt.f32.f16 	%f99, %rs129;
	cvt.f32.f16 	%f100, %rs130;
	.loc	1 143 18
	mov.b32 	{%rs131, %rs132}, %r1959;
	cvt.f32.f16 	%f101, %rs132;
	cvt.f32.f16 	%f102, %rs131;
	.loc	1 153 12
	mov.b32 	{%rs133, %rs134}, %r1955;
	cvt.f32.f16 	%f103, %rs134;
	cvt.f32.f16 	%f104, %rs133;
$L__tmp31:
	.loc	1 111 23
	add.f16x2 	%r1961, %r2487, %r1953;
$L__tmp32:
	.loc	1 152 33
	mul.f16x2 	%r1962, %r1961, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1963, %r1961, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1964, %r1961, %r1963;
	.loc	1 153 67
	fma.rn.f16x2 	%r1965, %r1961, %r1964, %r1961;
	.loc	1 153 63
	mul.f16x2 	%r1966, %r1965, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1967, %r1966, %r1966;
	mov.b32 	{%rs135, %rs136}, %r1967;
	.loc	1 143 45
	add.f16 	%rs137, %rs135, %rs5;
	add.f16 	%rs138, %rs136, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs139, %rs135, %rs8, %rs5;
	fma.rn.f16 	%rs140, %rs136, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f105, %rs137;
	cvt.f32.f16 	%f106, %rs138;
	cvt.f32.f16 	%f107, %rs139;
	cvt.f32.f16 	%f108, %rs140;
	.loc	1 143 18
	mov.b32 	{%rs141, %rs142}, %r1966;
	cvt.f32.f16 	%f109, %rs142;
	cvt.f32.f16 	%f110, %rs141;
	.loc	1 153 12
	mov.b32 	{%rs143, %rs144}, %r1962;
	cvt.f32.f16 	%f111, %rs144;
	cvt.f32.f16 	%f112, %rs143;
$L__tmp33:
	.loc	1 110 30
	ld.shared.b32 	%r1968, [%r1852+448];
	.loc	1 111 23
	add.f16x2 	%r1969, %r2486, %r1968;
$L__tmp34:
	.loc	1 152 33
	mul.f16x2 	%r1970, %r1969, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1971, %r1969, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1972, %r1969, %r1971;
	.loc	1 153 67
	fma.rn.f16x2 	%r1973, %r1969, %r1972, %r1969;
	.loc	1 153 63
	mul.f16x2 	%r1974, %r1973, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1975, %r1974, %r1974;
	mov.b32 	{%rs145, %rs146}, %r1975;
	.loc	1 143 45
	add.f16 	%rs147, %rs145, %rs5;
	add.f16 	%rs148, %rs146, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs149, %rs145, %rs8, %rs5;
	fma.rn.f16 	%rs150, %rs146, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f113, %rs147;
	cvt.f32.f16 	%f114, %rs148;
	cvt.f32.f16 	%f115, %rs149;
	cvt.f32.f16 	%f116, %rs150;
	.loc	1 143 18
	mov.b32 	{%rs151, %rs152}, %r1974;
	cvt.f32.f16 	%f117, %rs152;
	cvt.f32.f16 	%f118, %rs151;
	.loc	1 153 12
	mov.b32 	{%rs153, %rs154}, %r1970;
	cvt.f32.f16 	%f119, %rs154;
	cvt.f32.f16 	%f120, %rs153;
	.loc	1 143 54
	mov.b32 	%r1299, %f1;
	mov.b32 	%r1300, %f3;
	// begin inline asm
	div.full.f32 %r1298, %r1299, %r1300;
	// end inline asm
	mov.b32 	%f121, %r1298;
	mov.b32 	%r1302, %f2;
	mov.b32 	%r1303, %f4;
	// begin inline asm
	div.full.f32 %r1301, %r1302, %r1303;
	// end inline asm
	mov.b32 	%f122, %r1301;
	.loc	1 143 18
	mul.f32 	%f123, %f121, %f6;
	mul.f32 	%f124, %f122, %f5;
	.loc	1 144 54
	max.f32 	%f125, %f124, 0fBF800000;
	max.f32 	%f126, %f123, 0fBF800000;
	min.f32 	%f127, %f126, 0f3F800000;
	min.f32 	%f128, %f125, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f129, %f128, 0f3F800000;
	add.f32 	%f130, %f127, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f131, %f130, %f8;
	mul.f32 	%f132, %f129, %f7;
$L__tmp35:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs155, %f132;
	cvt.rn.f16.f32 	%rs156, %f131;
	mov.b32 	%r1976, {%rs156, %rs155};
$L__tmp36:
	.loc	1 143 54
	mov.b32 	%r1305, %f9;
	mov.b32 	%r1306, %f11;
	// begin inline asm
	div.full.f32 %r1304, %r1305, %r1306;
	// end inline asm
	mov.b32 	%f133, %r1304;
	mov.b32 	%r1308, %f10;
	mov.b32 	%r1309, %f12;
	// begin inline asm
	div.full.f32 %r1307, %r1308, %r1309;
	// end inline asm
	mov.b32 	%f134, %r1307;
	mov.b32 	%r1311, %f17;
	mov.b32 	%r1312, %f19;
	// begin inline asm
	div.full.f32 %r1310, %r1311, %r1312;
	// end inline asm
	mov.b32 	%f135, %r1310;
	mov.b32 	%r1314, %f18;
	mov.b32 	%r1315, %f20;
	// begin inline asm
	div.full.f32 %r1313, %r1314, %r1315;
	// end inline asm
	mov.b32 	%f136, %r1313;
	.loc	1 143 18
	mul.f32 	%f137, %f133, %f14;
	mul.f32 	%f138, %f134, %f13;
	mul.f32 	%f139, %f135, %f22;
	mul.f32 	%f140, %f136, %f21;
	.loc	1 144 54
	max.f32 	%f141, %f138, 0fBF800000;
	max.f32 	%f142, %f137, 0fBF800000;
	min.f32 	%f143, %f142, 0f3F800000;
	min.f32 	%f144, %f141, 0f3F800000;
	max.f32 	%f145, %f140, 0fBF800000;
	max.f32 	%f146, %f139, 0fBF800000;
	min.f32 	%f147, %f146, 0f3F800000;
	min.f32 	%f148, %f145, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f149, %f144, 0f3F800000;
	add.f32 	%f150, %f143, 0f3F800000;
	add.f32 	%f151, %f148, 0f3F800000;
	add.f32 	%f152, %f147, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f153, %f150, %f16;
	mul.f32 	%f154, %f149, %f15;
	mul.f32 	%f155, %f152, %f24;
	mul.f32 	%f156, %f151, %f23;
$L__tmp37:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs157, %f154;
	cvt.rn.f16.f32 	%rs158, %f153;
	mov.b32 	%r1977, {%rs158, %rs157};
	cvt.rn.f16.f32 	%rs159, %f156;
	cvt.rn.f16.f32 	%rs160, %f155;
	mov.b32 	%r1978, {%rs160, %rs159};
$L__tmp38:
	.loc	1 143 54
	mov.b32 	%r1317, %f25;
	mov.b32 	%r1318, %f27;
	// begin inline asm
	div.full.f32 %r1316, %r1317, %r1318;
	// end inline asm
	mov.b32 	%f157, %r1316;
	mov.b32 	%r1320, %f26;
	mov.b32 	%r1321, %f28;
	// begin inline asm
	div.full.f32 %r1319, %r1320, %r1321;
	// end inline asm
	mov.b32 	%f158, %r1319;
	mov.b32 	%r1323, %f33;
	mov.b32 	%r1324, %f35;
	// begin inline asm
	div.full.f32 %r1322, %r1323, %r1324;
	// end inline asm
	mov.b32 	%f159, %r1322;
	mov.b32 	%r1326, %f34;
	mov.b32 	%r1327, %f36;
	// begin inline asm
	div.full.f32 %r1325, %r1326, %r1327;
	// end inline asm
	mov.b32 	%f160, %r1325;
	.loc	1 143 18
	mul.f32 	%f161, %f157, %f30;
	mul.f32 	%f162, %f158, %f29;
	mul.f32 	%f163, %f159, %f38;
	mul.f32 	%f164, %f160, %f37;
	.loc	1 144 54
	max.f32 	%f165, %f162, 0fBF800000;
	max.f32 	%f166, %f161, 0fBF800000;
	min.f32 	%f167, %f166, 0f3F800000;
	min.f32 	%f168, %f165, 0f3F800000;
	max.f32 	%f169, %f164, 0fBF800000;
	max.f32 	%f170, %f163, 0fBF800000;
	min.f32 	%f171, %f170, 0f3F800000;
	min.f32 	%f172, %f169, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f173, %f168, 0f3F800000;
	add.f32 	%f174, %f167, 0f3F800000;
	add.f32 	%f175, %f172, 0f3F800000;
	add.f32 	%f176, %f171, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f177, %f174, %f32;
	mul.f32 	%f178, %f173, %f31;
	mul.f32 	%f179, %f176, %f40;
	mul.f32 	%f180, %f175, %f39;
$L__tmp39:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs161, %f178;
	cvt.rn.f16.f32 	%rs162, %f177;
	mov.b32 	%r1979, {%rs162, %rs161};
	cvt.rn.f16.f32 	%rs163, %f180;
	cvt.rn.f16.f32 	%rs164, %f179;
	mov.b32 	%r1980, {%rs164, %rs163};
$L__tmp40:
	.loc	1 143 54
	mov.b32 	%r1329, %f41;
	mov.b32 	%r1330, %f43;
	// begin inline asm
	div.full.f32 %r1328, %r1329, %r1330;
	// end inline asm
	mov.b32 	%f181, %r1328;
	mov.b32 	%r1332, %f42;
	mov.b32 	%r1333, %f44;
	// begin inline asm
	div.full.f32 %r1331, %r1332, %r1333;
	// end inline asm
	mov.b32 	%f182, %r1331;
	mov.b32 	%r1335, %f49;
	mov.b32 	%r1336, %f51;
	// begin inline asm
	div.full.f32 %r1334, %r1335, %r1336;
	// end inline asm
	mov.b32 	%f183, %r1334;
	mov.b32 	%r1338, %f50;
	mov.b32 	%r1339, %f52;
	// begin inline asm
	div.full.f32 %r1337, %r1338, %r1339;
	// end inline asm
	mov.b32 	%f184, %r1337;
	.loc	1 143 18
	mul.f32 	%f185, %f181, %f46;
	mul.f32 	%f186, %f182, %f45;
	mul.f32 	%f187, %f183, %f54;
	mul.f32 	%f188, %f184, %f53;
	.loc	1 144 54
	max.f32 	%f189, %f186, 0fBF800000;
	max.f32 	%f190, %f185, 0fBF800000;
	min.f32 	%f191, %f190, 0f3F800000;
	min.f32 	%f192, %f189, 0f3F800000;
	max.f32 	%f193, %f188, 0fBF800000;
	max.f32 	%f194, %f187, 0fBF800000;
	min.f32 	%f195, %f194, 0f3F800000;
	min.f32 	%f196, %f193, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f197, %f192, 0f3F800000;
	add.f32 	%f198, %f191, 0f3F800000;
	add.f32 	%f199, %f196, 0f3F800000;
	add.f32 	%f200, %f195, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f201, %f198, %f48;
	mul.f32 	%f202, %f197, %f47;
	mul.f32 	%f203, %f200, %f56;
	mul.f32 	%f204, %f199, %f55;
$L__tmp41:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs165, %f202;
	cvt.rn.f16.f32 	%rs166, %f201;
	mov.b32 	%r1981, {%rs166, %rs165};
	cvt.rn.f16.f32 	%rs167, %f204;
	cvt.rn.f16.f32 	%rs168, %f203;
	mov.b32 	%r1982, {%rs168, %rs167};
$L__tmp42:
	.loc	1 143 54
	mov.b32 	%r1341, %f57;
	mov.b32 	%r1342, %f59;
	// begin inline asm
	div.full.f32 %r1340, %r1341, %r1342;
	// end inline asm
	mov.b32 	%f205, %r1340;
	mov.b32 	%r1344, %f58;
	mov.b32 	%r1345, %f60;
	// begin inline asm
	div.full.f32 %r1343, %r1344, %r1345;
	// end inline asm
	mov.b32 	%f206, %r1343;
	mov.b32 	%r1347, %f65;
	mov.b32 	%r1348, %f67;
	// begin inline asm
	div.full.f32 %r1346, %r1347, %r1348;
	// end inline asm
	mov.b32 	%f207, %r1346;
	mov.b32 	%r1350, %f66;
	mov.b32 	%r1351, %f68;
	// begin inline asm
	div.full.f32 %r1349, %r1350, %r1351;
	// end inline asm
	mov.b32 	%f208, %r1349;
	.loc	1 143 18
	mul.f32 	%f209, %f205, %f62;
	mul.f32 	%f210, %f206, %f61;
	mul.f32 	%f211, %f207, %f70;
	mul.f32 	%f212, %f208, %f69;
	.loc	1 144 54
	max.f32 	%f213, %f210, 0fBF800000;
	max.f32 	%f214, %f209, 0fBF800000;
	min.f32 	%f215, %f214, 0f3F800000;
	min.f32 	%f216, %f213, 0f3F800000;
	max.f32 	%f217, %f212, 0fBF800000;
	max.f32 	%f218, %f211, 0fBF800000;
	min.f32 	%f219, %f218, 0f3F800000;
	min.f32 	%f220, %f217, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f221, %f216, 0f3F800000;
	add.f32 	%f222, %f215, 0f3F800000;
	add.f32 	%f223, %f220, 0f3F800000;
	add.f32 	%f224, %f219, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f225, %f222, %f64;
	mul.f32 	%f226, %f221, %f63;
	mul.f32 	%f227, %f224, %f72;
	mul.f32 	%f228, %f223, %f71;
$L__tmp43:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs169, %f226;
	cvt.rn.f16.f32 	%rs170, %f225;
	mov.b32 	%r1983, {%rs170, %rs169};
	cvt.rn.f16.f32 	%rs171, %f228;
	cvt.rn.f16.f32 	%rs172, %f227;
	mov.b32 	%r1984, {%rs172, %rs171};
$L__tmp44:
	.loc	1 143 54
	mov.b32 	%r1353, %f73;
	mov.b32 	%r1354, %f75;
	// begin inline asm
	div.full.f32 %r1352, %r1353, %r1354;
	// end inline asm
	mov.b32 	%f229, %r1352;
	mov.b32 	%r1356, %f74;
	mov.b32 	%r1357, %f76;
	// begin inline asm
	div.full.f32 %r1355, %r1356, %r1357;
	// end inline asm
	mov.b32 	%f230, %r1355;
	mov.b32 	%r1359, %f81;
	mov.b32 	%r1360, %f83;
	// begin inline asm
	div.full.f32 %r1358, %r1359, %r1360;
	// end inline asm
	mov.b32 	%f231, %r1358;
	mov.b32 	%r1362, %f82;
	mov.b32 	%r1363, %f84;
	// begin inline asm
	div.full.f32 %r1361, %r1362, %r1363;
	// end inline asm
	mov.b32 	%f232, %r1361;
	.loc	1 143 18
	mul.f32 	%f233, %f229, %f78;
	mul.f32 	%f234, %f230, %f77;
	mul.f32 	%f235, %f231, %f86;
	mul.f32 	%f236, %f232, %f85;
	.loc	1 144 54
	max.f32 	%f237, %f234, 0fBF800000;
	max.f32 	%f238, %f233, 0fBF800000;
	min.f32 	%f239, %f238, 0f3F800000;
	min.f32 	%f240, %f237, 0f3F800000;
	max.f32 	%f241, %f236, 0fBF800000;
	max.f32 	%f242, %f235, 0fBF800000;
	min.f32 	%f243, %f242, 0f3F800000;
	min.f32 	%f244, %f241, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f245, %f240, 0f3F800000;
	add.f32 	%f246, %f239, 0f3F800000;
	add.f32 	%f247, %f244, 0f3F800000;
	add.f32 	%f248, %f243, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f249, %f246, %f80;
	mul.f32 	%f250, %f245, %f79;
	mul.f32 	%f251, %f248, %f88;
	mul.f32 	%f252, %f247, %f87;
$L__tmp45:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs173, %f250;
	cvt.rn.f16.f32 	%rs174, %f249;
	mov.b32 	%r1985, {%rs174, %rs173};
	cvt.rn.f16.f32 	%rs175, %f252;
	cvt.rn.f16.f32 	%rs176, %f251;
	mov.b32 	%r1986, {%rs176, %rs175};
$L__tmp46:
	.loc	1 143 54
	mov.b32 	%r1365, %f89;
	mov.b32 	%r1366, %f91;
	// begin inline asm
	div.full.f32 %r1364, %r1365, %r1366;
	// end inline asm
	mov.b32 	%f253, %r1364;
	mov.b32 	%r1368, %f90;
	mov.b32 	%r1369, %f92;
	// begin inline asm
	div.full.f32 %r1367, %r1368, %r1369;
	// end inline asm
	mov.b32 	%f254, %r1367;
	mov.b32 	%r1371, %f97;
	mov.b32 	%r1372, %f99;
	// begin inline asm
	div.full.f32 %r1370, %r1371, %r1372;
	// end inline asm
	mov.b32 	%f255, %r1370;
	mov.b32 	%r1374, %f98;
	mov.b32 	%r1375, %f100;
	// begin inline asm
	div.full.f32 %r1373, %r1374, %r1375;
	// end inline asm
	mov.b32 	%f256, %r1373;
	.loc	1 143 18
	mul.f32 	%f257, %f253, %f94;
	mul.f32 	%f258, %f254, %f93;
	mul.f32 	%f259, %f255, %f102;
	mul.f32 	%f260, %f256, %f101;
	.loc	1 144 54
	max.f32 	%f261, %f258, 0fBF800000;
	max.f32 	%f262, %f257, 0fBF800000;
	min.f32 	%f263, %f262, 0f3F800000;
	min.f32 	%f264, %f261, 0f3F800000;
	max.f32 	%f265, %f260, 0fBF800000;
	max.f32 	%f266, %f259, 0fBF800000;
	min.f32 	%f267, %f266, 0f3F800000;
	min.f32 	%f268, %f265, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f269, %f264, 0f3F800000;
	add.f32 	%f270, %f263, 0f3F800000;
	add.f32 	%f271, %f268, 0f3F800000;
	add.f32 	%f272, %f267, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f273, %f270, %f96;
	mul.f32 	%f274, %f269, %f95;
	mul.f32 	%f275, %f272, %f104;
	mul.f32 	%f276, %f271, %f103;
$L__tmp47:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs177, %f274;
	cvt.rn.f16.f32 	%rs178, %f273;
	mov.b32 	%r1987, {%rs178, %rs177};
	cvt.rn.f16.f32 	%rs179, %f276;
	cvt.rn.f16.f32 	%rs180, %f275;
	mov.b32 	%r1988, {%rs180, %rs179};
$L__tmp48:
	.loc	1 143 54
	mov.b32 	%r1377, %f105;
	mov.b32 	%r1378, %f107;
	// begin inline asm
	div.full.f32 %r1376, %r1377, %r1378;
	// end inline asm
	mov.b32 	%f277, %r1376;
	mov.b32 	%r1380, %f106;
	mov.b32 	%r1381, %f108;
	// begin inline asm
	div.full.f32 %r1379, %r1380, %r1381;
	// end inline asm
	mov.b32 	%f278, %r1379;
	mov.b32 	%r1383, %f113;
	mov.b32 	%r1384, %f115;
	// begin inline asm
	div.full.f32 %r1382, %r1383, %r1384;
	// end inline asm
	mov.b32 	%f279, %r1382;
	mov.b32 	%r1386, %f114;
	mov.b32 	%r1387, %f116;
	// begin inline asm
	div.full.f32 %r1385, %r1386, %r1387;
	// end inline asm
	mov.b32 	%f280, %r1385;
	.loc	1 143 18
	mul.f32 	%f281, %f277, %f110;
	mul.f32 	%f282, %f278, %f109;
	mul.f32 	%f283, %f279, %f118;
	mul.f32 	%f284, %f280, %f117;
	.loc	1 144 54
	max.f32 	%f285, %f282, 0fBF800000;
	max.f32 	%f286, %f281, 0fBF800000;
	min.f32 	%f287, %f286, 0f3F800000;
	min.f32 	%f288, %f285, 0f3F800000;
	max.f32 	%f289, %f284, 0fBF800000;
	max.f32 	%f290, %f283, 0fBF800000;
	min.f32 	%f291, %f290, 0f3F800000;
	min.f32 	%f292, %f289, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f293, %f288, 0f3F800000;
	add.f32 	%f294, %f287, 0f3F800000;
	add.f32 	%f295, %f292, 0f3F800000;
	add.f32 	%f296, %f291, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f297, %f294, %f112;
	mul.f32 	%f298, %f293, %f111;
	mul.f32 	%f299, %f296, %f120;
	mul.f32 	%f300, %f295, %f119;
$L__tmp49:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs181, %f298;
	cvt.rn.f16.f32 	%rs182, %f297;
	mov.b32 	%r1989, {%rs182, %rs181};
	cvt.rn.f16.f32 	%rs183, %f300;
	cvt.rn.f16.f32 	%rs184, %f299;
	mov.b32 	%r1990, {%rs184, %rs183};
	.loc	1 111 23
	add.f16x2 	%r1991, %r2485, %r1968;
$L__tmp50:
	.loc	1 152 33
	mul.f16x2 	%r1992, %r1991, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r1993, %r1991, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r1994, %r1991, %r1993;
	.loc	1 153 67
	fma.rn.f16x2 	%r1995, %r1991, %r1994, %r1991;
	.loc	1 153 63
	mul.f16x2 	%r1996, %r1995, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r1997, %r1996, %r1996;
	mov.b32 	{%rs185, %rs186}, %r1997;
	.loc	1 143 45
	add.f16 	%rs187, %rs185, %rs5;
	add.f16 	%rs188, %rs186, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs189, %rs185, %rs8, %rs5;
	fma.rn.f16 	%rs190, %rs186, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f301, %rs187;
	cvt.f32.f16 	%f302, %rs188;
	cvt.f32.f16 	%f303, %rs189;
	cvt.f32.f16 	%f304, %rs190;
	.loc	1 143 18
	mov.b32 	{%rs191, %rs192}, %r1996;
	cvt.f32.f16 	%f305, %rs192;
	cvt.f32.f16 	%f306, %rs191;
	.loc	1 153 12
	mov.b32 	{%rs193, %rs194}, %r1992;
	cvt.f32.f16 	%f307, %rs194;
	cvt.f32.f16 	%f308, %rs193;
	.loc	1 143 54
	mov.b32 	%r1389, %f301;
	mov.b32 	%r1390, %f303;
	// begin inline asm
	div.full.f32 %r1388, %r1389, %r1390;
	// end inline asm
	mov.b32 	%f309, %r1388;
	mov.b32 	%r1392, %f302;
	mov.b32 	%r1393, %f304;
	// begin inline asm
	div.full.f32 %r1391, %r1392, %r1393;
	// end inline asm
	mov.b32 	%f310, %r1391;
	.loc	1 143 18
	mul.f32 	%f311, %f309, %f306;
	mul.f32 	%f312, %f310, %f305;
	.loc	1 144 54
	max.f32 	%f313, %f312, 0fBF800000;
	max.f32 	%f314, %f311, 0fBF800000;
	min.f32 	%f315, %f314, 0f3F800000;
	min.f32 	%f316, %f313, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f317, %f316, 0f3F800000;
	add.f32 	%f318, %f315, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f319, %f318, %f308;
	mul.f32 	%f320, %f317, %f307;
$L__tmp51:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs195, %f320;
	cvt.rn.f16.f32 	%rs196, %f319;
	mov.b32 	%r1998, {%rs196, %rs195};
	.loc	1 111 23
	add.f16x2 	%r1999, %r2484, %r1860;
$L__tmp52:
	.loc	1 152 33
	mul.f16x2 	%r2000, %r1999, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2001, %r1999, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2002, %r1999, %r2001;
	.loc	1 153 67
	fma.rn.f16x2 	%r2003, %r1999, %r2002, %r1999;
	.loc	1 153 63
	mul.f16x2 	%r2004, %r2003, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2005, %r2004, %r2004;
	mov.b32 	{%rs197, %rs198}, %r2005;
	.loc	1 143 45
	add.f16 	%rs199, %rs197, %rs5;
	add.f16 	%rs200, %rs198, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs201, %rs197, %rs8, %rs5;
	fma.rn.f16 	%rs202, %rs198, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f321, %rs199;
	cvt.f32.f16 	%f322, %rs200;
	cvt.f32.f16 	%f323, %rs201;
	cvt.f32.f16 	%f324, %rs202;
	.loc	1 143 18
	mov.b32 	{%rs203, %rs204}, %r2004;
	cvt.f32.f16 	%f325, %rs204;
	cvt.f32.f16 	%f326, %rs203;
	.loc	1 153 12
	mov.b32 	{%rs205, %rs206}, %r2000;
	cvt.f32.f16 	%f327, %rs206;
	cvt.f32.f16 	%f328, %rs205;
	.loc	1 143 54
	mov.b32 	%r1395, %f321;
	mov.b32 	%r1396, %f323;
	// begin inline asm
	div.full.f32 %r1394, %r1395, %r1396;
	// end inline asm
	mov.b32 	%f329, %r1394;
	mov.b32 	%r1398, %f322;
	mov.b32 	%r1399, %f324;
	// begin inline asm
	div.full.f32 %r1397, %r1398, %r1399;
	// end inline asm
	mov.b32 	%f330, %r1397;
	.loc	1 143 18
	mul.f32 	%f331, %f329, %f326;
	mul.f32 	%f332, %f330, %f325;
	.loc	1 144 54
	max.f32 	%f333, %f332, 0fBF800000;
	max.f32 	%f334, %f331, 0fBF800000;
	min.f32 	%f335, %f334, 0f3F800000;
	min.f32 	%f336, %f333, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f337, %f336, 0f3F800000;
	add.f32 	%f338, %f335, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f339, %f338, %f328;
	mul.f32 	%f340, %f337, %f327;
$L__tmp53:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs207, %f340;
	cvt.rn.f16.f32 	%rs208, %f339;
	mov.b32 	%r2006, {%rs208, %rs207};
	.loc	1 111 23
	add.f16x2 	%r2007, %r2483, %r1860;
$L__tmp54:
	.loc	1 152 33
	mul.f16x2 	%r2008, %r2007, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2009, %r2007, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2010, %r2007, %r2009;
	.loc	1 153 67
	fma.rn.f16x2 	%r2011, %r2007, %r2010, %r2007;
	.loc	1 153 63
	mul.f16x2 	%r2012, %r2011, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2013, %r2012, %r2012;
	mov.b32 	{%rs209, %rs210}, %r2013;
	.loc	1 143 45
	add.f16 	%rs211, %rs209, %rs5;
	add.f16 	%rs212, %rs210, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs213, %rs209, %rs8, %rs5;
	fma.rn.f16 	%rs214, %rs210, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f341, %rs211;
	cvt.f32.f16 	%f342, %rs212;
	cvt.f32.f16 	%f343, %rs213;
	cvt.f32.f16 	%f344, %rs214;
	.loc	1 143 18
	mov.b32 	{%rs215, %rs216}, %r2012;
	cvt.f32.f16 	%f345, %rs216;
	cvt.f32.f16 	%f346, %rs215;
	.loc	1 153 12
	mov.b32 	{%rs217, %rs218}, %r2008;
	cvt.f32.f16 	%f347, %rs218;
	cvt.f32.f16 	%f348, %rs217;
	.loc	1 143 54
	mov.b32 	%r1401, %f341;
	mov.b32 	%r1402, %f343;
	// begin inline asm
	div.full.f32 %r1400, %r1401, %r1402;
	// end inline asm
	mov.b32 	%f349, %r1400;
	mov.b32 	%r1404, %f342;
	mov.b32 	%r1405, %f344;
	// begin inline asm
	div.full.f32 %r1403, %r1404, %r1405;
	// end inline asm
	mov.b32 	%f350, %r1403;
	.loc	1 143 18
	mul.f32 	%f351, %f349, %f346;
	mul.f32 	%f352, %f350, %f345;
	.loc	1 144 54
	max.f32 	%f353, %f352, 0fBF800000;
	max.f32 	%f354, %f351, 0fBF800000;
	min.f32 	%f355, %f354, 0f3F800000;
	min.f32 	%f356, %f353, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f357, %f356, 0f3F800000;
	add.f32 	%f358, %f355, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f359, %f358, %f348;
	mul.f32 	%f360, %f357, %f347;
$L__tmp55:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs219, %f360;
	cvt.rn.f16.f32 	%rs220, %f359;
	mov.b32 	%r2014, {%rs220, %rs219};
	.loc	1 111 23
	add.f16x2 	%r2015, %r2482, %r1878;
$L__tmp56:
	.loc	1 152 33
	mul.f16x2 	%r2016, %r2015, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2017, %r2015, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2018, %r2015, %r2017;
	.loc	1 153 67
	fma.rn.f16x2 	%r2019, %r2015, %r2018, %r2015;
	.loc	1 153 63
	mul.f16x2 	%r2020, %r2019, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2021, %r2020, %r2020;
	mov.b32 	{%rs221, %rs222}, %r2021;
	.loc	1 143 45
	add.f16 	%rs223, %rs221, %rs5;
	add.f16 	%rs224, %rs222, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs225, %rs221, %rs8, %rs5;
	fma.rn.f16 	%rs226, %rs222, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f361, %rs223;
	cvt.f32.f16 	%f362, %rs224;
	cvt.f32.f16 	%f363, %rs225;
	cvt.f32.f16 	%f364, %rs226;
	.loc	1 143 18
	mov.b32 	{%rs227, %rs228}, %r2020;
	cvt.f32.f16 	%f365, %rs228;
	cvt.f32.f16 	%f366, %rs227;
	.loc	1 153 12
	mov.b32 	{%rs229, %rs230}, %r2016;
	cvt.f32.f16 	%f367, %rs230;
	cvt.f32.f16 	%f368, %rs229;
	.loc	1 143 54
	mov.b32 	%r1407, %f361;
	mov.b32 	%r1408, %f363;
	// begin inline asm
	div.full.f32 %r1406, %r1407, %r1408;
	// end inline asm
	mov.b32 	%f369, %r1406;
	mov.b32 	%r1410, %f362;
	mov.b32 	%r1411, %f364;
	// begin inline asm
	div.full.f32 %r1409, %r1410, %r1411;
	// end inline asm
	mov.b32 	%f370, %r1409;
	.loc	1 143 18
	mul.f32 	%f371, %f369, %f366;
	mul.f32 	%f372, %f370, %f365;
	.loc	1 144 54
	max.f32 	%f373, %f372, 0fBF800000;
	max.f32 	%f374, %f371, 0fBF800000;
	min.f32 	%f375, %f374, 0f3F800000;
	min.f32 	%f376, %f373, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f377, %f376, 0f3F800000;
	add.f32 	%f378, %f375, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f379, %f378, %f368;
	mul.f32 	%f380, %f377, %f367;
$L__tmp57:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs231, %f380;
	cvt.rn.f16.f32 	%rs232, %f379;
	mov.b32 	%r2022, {%rs232, %rs231};
	.loc	1 111 23
	add.f16x2 	%r2023, %r2481, %r1878;
$L__tmp58:
	.loc	1 152 33
	mul.f16x2 	%r2024, %r2023, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2025, %r2023, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2026, %r2023, %r2025;
	.loc	1 153 67
	fma.rn.f16x2 	%r2027, %r2023, %r2026, %r2023;
	.loc	1 153 63
	mul.f16x2 	%r2028, %r2027, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2029, %r2028, %r2028;
	mov.b32 	{%rs233, %rs234}, %r2029;
	.loc	1 143 45
	add.f16 	%rs235, %rs233, %rs5;
	add.f16 	%rs236, %rs234, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs237, %rs233, %rs8, %rs5;
	fma.rn.f16 	%rs238, %rs234, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f381, %rs235;
	cvt.f32.f16 	%f382, %rs236;
	cvt.f32.f16 	%f383, %rs237;
	cvt.f32.f16 	%f384, %rs238;
	.loc	1 143 18
	mov.b32 	{%rs239, %rs240}, %r2028;
	cvt.f32.f16 	%f385, %rs240;
	cvt.f32.f16 	%f386, %rs239;
	.loc	1 153 12
	mov.b32 	{%rs241, %rs242}, %r2024;
	cvt.f32.f16 	%f387, %rs242;
	cvt.f32.f16 	%f388, %rs241;
	.loc	1 143 54
	mov.b32 	%r1413, %f381;
	mov.b32 	%r1414, %f383;
	// begin inline asm
	div.full.f32 %r1412, %r1413, %r1414;
	// end inline asm
	mov.b32 	%f389, %r1412;
	mov.b32 	%r1416, %f382;
	mov.b32 	%r1417, %f384;
	// begin inline asm
	div.full.f32 %r1415, %r1416, %r1417;
	// end inline asm
	mov.b32 	%f390, %r1415;
	.loc	1 143 18
	mul.f32 	%f391, %f389, %f386;
	mul.f32 	%f392, %f390, %f385;
	.loc	1 144 54
	max.f32 	%f393, %f392, 0fBF800000;
	max.f32 	%f394, %f391, 0fBF800000;
	min.f32 	%f395, %f394, 0f3F800000;
	min.f32 	%f396, %f393, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f397, %f396, 0f3F800000;
	add.f32 	%f398, %f395, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f399, %f398, %f388;
	mul.f32 	%f400, %f397, %f387;
$L__tmp59:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs243, %f400;
	cvt.rn.f16.f32 	%rs244, %f399;
	mov.b32 	%r2030, {%rs244, %rs243};
	.loc	1 111 23
	add.f16x2 	%r2031, %r2480, %r1893;
$L__tmp60:
	.loc	1 152 33
	mul.f16x2 	%r2032, %r2031, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2033, %r2031, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2034, %r2031, %r2033;
	.loc	1 153 67
	fma.rn.f16x2 	%r2035, %r2031, %r2034, %r2031;
	.loc	1 153 63
	mul.f16x2 	%r2036, %r2035, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2037, %r2036, %r2036;
	mov.b32 	{%rs245, %rs246}, %r2037;
	.loc	1 143 45
	add.f16 	%rs247, %rs245, %rs5;
	add.f16 	%rs248, %rs246, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs249, %rs245, %rs8, %rs5;
	fma.rn.f16 	%rs250, %rs246, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f401, %rs247;
	cvt.f32.f16 	%f402, %rs248;
	cvt.f32.f16 	%f403, %rs249;
	cvt.f32.f16 	%f404, %rs250;
	.loc	1 143 18
	mov.b32 	{%rs251, %rs252}, %r2036;
	cvt.f32.f16 	%f405, %rs252;
	cvt.f32.f16 	%f406, %rs251;
	.loc	1 153 12
	mov.b32 	{%rs253, %rs254}, %r2032;
	cvt.f32.f16 	%f407, %rs254;
	cvt.f32.f16 	%f408, %rs253;
	.loc	1 143 54
	mov.b32 	%r1419, %f401;
	mov.b32 	%r1420, %f403;
	// begin inline asm
	div.full.f32 %r1418, %r1419, %r1420;
	// end inline asm
	mov.b32 	%f409, %r1418;
	mov.b32 	%r1422, %f402;
	mov.b32 	%r1423, %f404;
	// begin inline asm
	div.full.f32 %r1421, %r1422, %r1423;
	// end inline asm
	mov.b32 	%f410, %r1421;
	.loc	1 143 18
	mul.f32 	%f411, %f409, %f406;
	mul.f32 	%f412, %f410, %f405;
	.loc	1 144 54
	max.f32 	%f413, %f412, 0fBF800000;
	max.f32 	%f414, %f411, 0fBF800000;
	min.f32 	%f415, %f414, 0f3F800000;
	min.f32 	%f416, %f413, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f417, %f416, 0f3F800000;
	add.f32 	%f418, %f415, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f419, %f418, %f408;
	mul.f32 	%f420, %f417, %f407;
$L__tmp61:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs255, %f420;
	cvt.rn.f16.f32 	%rs256, %f419;
	mov.b32 	%r2038, {%rs256, %rs255};
	.loc	1 111 23
	add.f16x2 	%r2039, %r2479, %r1893;
$L__tmp62:
	.loc	1 152 33
	mul.f16x2 	%r2040, %r2039, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2041, %r2039, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2042, %r2039, %r2041;
	.loc	1 153 67
	fma.rn.f16x2 	%r2043, %r2039, %r2042, %r2039;
	.loc	1 153 63
	mul.f16x2 	%r2044, %r2043, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2045, %r2044, %r2044;
	mov.b32 	{%rs257, %rs258}, %r2045;
	.loc	1 143 45
	add.f16 	%rs259, %rs257, %rs5;
	add.f16 	%rs260, %rs258, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs261, %rs257, %rs8, %rs5;
	fma.rn.f16 	%rs262, %rs258, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f421, %rs259;
	cvt.f32.f16 	%f422, %rs260;
	cvt.f32.f16 	%f423, %rs261;
	cvt.f32.f16 	%f424, %rs262;
	.loc	1 143 18
	mov.b32 	{%rs263, %rs264}, %r2044;
	cvt.f32.f16 	%f425, %rs264;
	cvt.f32.f16 	%f426, %rs263;
	.loc	1 153 12
	mov.b32 	{%rs265, %rs266}, %r2040;
	cvt.f32.f16 	%f427, %rs266;
	cvt.f32.f16 	%f428, %rs265;
	.loc	1 143 54
	mov.b32 	%r1425, %f421;
	mov.b32 	%r1426, %f423;
	// begin inline asm
	div.full.f32 %r1424, %r1425, %r1426;
	// end inline asm
	mov.b32 	%f429, %r1424;
	mov.b32 	%r1428, %f422;
	mov.b32 	%r1429, %f424;
	// begin inline asm
	div.full.f32 %r1427, %r1428, %r1429;
	// end inline asm
	mov.b32 	%f430, %r1427;
	.loc	1 143 18
	mul.f32 	%f431, %f429, %f426;
	mul.f32 	%f432, %f430, %f425;
	.loc	1 144 54
	max.f32 	%f433, %f432, 0fBF800000;
	max.f32 	%f434, %f431, 0fBF800000;
	min.f32 	%f435, %f434, 0f3F800000;
	min.f32 	%f436, %f433, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f437, %f436, 0f3F800000;
	add.f32 	%f438, %f435, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f439, %f438, %f428;
	mul.f32 	%f440, %f437, %f427;
$L__tmp63:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs267, %f440;
	cvt.rn.f16.f32 	%rs268, %f439;
	mov.b32 	%r2046, {%rs268, %rs267};
	.loc	1 111 23
	add.f16x2 	%r2047, %r2478, %r1908;
$L__tmp64:
	.loc	1 152 33
	mul.f16x2 	%r2048, %r2047, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2049, %r2047, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2050, %r2047, %r2049;
	.loc	1 153 67
	fma.rn.f16x2 	%r2051, %r2047, %r2050, %r2047;
	.loc	1 153 63
	mul.f16x2 	%r2052, %r2051, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2053, %r2052, %r2052;
	mov.b32 	{%rs269, %rs270}, %r2053;
	.loc	1 143 45
	add.f16 	%rs271, %rs269, %rs5;
	add.f16 	%rs272, %rs270, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs273, %rs269, %rs8, %rs5;
	fma.rn.f16 	%rs274, %rs270, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f441, %rs271;
	cvt.f32.f16 	%f442, %rs272;
	cvt.f32.f16 	%f443, %rs273;
	cvt.f32.f16 	%f444, %rs274;
	.loc	1 143 18
	mov.b32 	{%rs275, %rs276}, %r2052;
	cvt.f32.f16 	%f445, %rs276;
	cvt.f32.f16 	%f446, %rs275;
	.loc	1 153 12
	mov.b32 	{%rs277, %rs278}, %r2048;
	cvt.f32.f16 	%f447, %rs278;
	cvt.f32.f16 	%f448, %rs277;
	.loc	1 143 54
	mov.b32 	%r1431, %f441;
	mov.b32 	%r1432, %f443;
	// begin inline asm
	div.full.f32 %r1430, %r1431, %r1432;
	// end inline asm
	mov.b32 	%f449, %r1430;
	mov.b32 	%r1434, %f442;
	mov.b32 	%r1435, %f444;
	// begin inline asm
	div.full.f32 %r1433, %r1434, %r1435;
	// end inline asm
	mov.b32 	%f450, %r1433;
	.loc	1 143 18
	mul.f32 	%f451, %f449, %f446;
	mul.f32 	%f452, %f450, %f445;
	.loc	1 144 54
	max.f32 	%f453, %f452, 0fBF800000;
	max.f32 	%f454, %f451, 0fBF800000;
	min.f32 	%f455, %f454, 0f3F800000;
	min.f32 	%f456, %f453, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f457, %f456, 0f3F800000;
	add.f32 	%f458, %f455, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f459, %f458, %f448;
	mul.f32 	%f460, %f457, %f447;
$L__tmp65:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs279, %f460;
	cvt.rn.f16.f32 	%rs280, %f459;
	mov.b32 	%r2054, {%rs280, %rs279};
	.loc	1 111 23
	add.f16x2 	%r2055, %r2477, %r1908;
$L__tmp66:
	.loc	1 152 33
	mul.f16x2 	%r2056, %r2055, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2057, %r2055, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2058, %r2055, %r2057;
	.loc	1 153 67
	fma.rn.f16x2 	%r2059, %r2055, %r2058, %r2055;
	.loc	1 153 63
	mul.f16x2 	%r2060, %r2059, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2061, %r2060, %r2060;
	mov.b32 	{%rs281, %rs282}, %r2061;
	.loc	1 143 45
	add.f16 	%rs283, %rs281, %rs5;
	add.f16 	%rs284, %rs282, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs285, %rs281, %rs8, %rs5;
	fma.rn.f16 	%rs286, %rs282, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f461, %rs283;
	cvt.f32.f16 	%f462, %rs284;
	cvt.f32.f16 	%f463, %rs285;
	cvt.f32.f16 	%f464, %rs286;
	.loc	1 143 18
	mov.b32 	{%rs287, %rs288}, %r2060;
	cvt.f32.f16 	%f465, %rs288;
	cvt.f32.f16 	%f466, %rs287;
	.loc	1 153 12
	mov.b32 	{%rs289, %rs290}, %r2056;
	cvt.f32.f16 	%f467, %rs290;
	cvt.f32.f16 	%f468, %rs289;
	.loc	1 143 54
	mov.b32 	%r1437, %f461;
	mov.b32 	%r1438, %f463;
	// begin inline asm
	div.full.f32 %r1436, %r1437, %r1438;
	// end inline asm
	mov.b32 	%f469, %r1436;
	mov.b32 	%r1440, %f462;
	mov.b32 	%r1441, %f464;
	// begin inline asm
	div.full.f32 %r1439, %r1440, %r1441;
	// end inline asm
	mov.b32 	%f470, %r1439;
	.loc	1 143 18
	mul.f32 	%f471, %f469, %f466;
	mul.f32 	%f472, %f470, %f465;
	.loc	1 144 54
	max.f32 	%f473, %f472, 0fBF800000;
	max.f32 	%f474, %f471, 0fBF800000;
	min.f32 	%f475, %f474, 0f3F800000;
	min.f32 	%f476, %f473, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f477, %f476, 0f3F800000;
	add.f32 	%f478, %f475, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f479, %f478, %f468;
	mul.f32 	%f480, %f477, %f467;
$L__tmp67:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs291, %f480;
	cvt.rn.f16.f32 	%rs292, %f479;
	mov.b32 	%r2062, {%rs292, %rs291};
	.loc	1 111 23
	add.f16x2 	%r2063, %r2476, %r1923;
$L__tmp68:
	.loc	1 152 33
	mul.f16x2 	%r2064, %r2063, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2065, %r2063, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2066, %r2063, %r2065;
	.loc	1 153 67
	fma.rn.f16x2 	%r2067, %r2063, %r2066, %r2063;
	.loc	1 153 63
	mul.f16x2 	%r2068, %r2067, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2069, %r2068, %r2068;
	mov.b32 	{%rs293, %rs294}, %r2069;
	.loc	1 143 45
	add.f16 	%rs295, %rs293, %rs5;
	add.f16 	%rs296, %rs294, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs297, %rs293, %rs8, %rs5;
	fma.rn.f16 	%rs298, %rs294, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f481, %rs295;
	cvt.f32.f16 	%f482, %rs296;
	cvt.f32.f16 	%f483, %rs297;
	cvt.f32.f16 	%f484, %rs298;
	.loc	1 143 18
	mov.b32 	{%rs299, %rs300}, %r2068;
	cvt.f32.f16 	%f485, %rs300;
	cvt.f32.f16 	%f486, %rs299;
	.loc	1 153 12
	mov.b32 	{%rs301, %rs302}, %r2064;
	cvt.f32.f16 	%f487, %rs302;
	cvt.f32.f16 	%f488, %rs301;
	.loc	1 143 54
	mov.b32 	%r1443, %f481;
	mov.b32 	%r1444, %f483;
	// begin inline asm
	div.full.f32 %r1442, %r1443, %r1444;
	// end inline asm
	mov.b32 	%f489, %r1442;
	mov.b32 	%r1446, %f482;
	mov.b32 	%r1447, %f484;
	// begin inline asm
	div.full.f32 %r1445, %r1446, %r1447;
	// end inline asm
	mov.b32 	%f490, %r1445;
	.loc	1 143 18
	mul.f32 	%f491, %f489, %f486;
	mul.f32 	%f492, %f490, %f485;
	.loc	1 144 54
	max.f32 	%f493, %f492, 0fBF800000;
	max.f32 	%f494, %f491, 0fBF800000;
	min.f32 	%f495, %f494, 0f3F800000;
	min.f32 	%f496, %f493, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f497, %f496, 0f3F800000;
	add.f32 	%f498, %f495, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f499, %f498, %f488;
	mul.f32 	%f500, %f497, %f487;
$L__tmp69:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs303, %f500;
	cvt.rn.f16.f32 	%rs304, %f499;
	mov.b32 	%r2070, {%rs304, %rs303};
	.loc	1 111 23
	add.f16x2 	%r2071, %r2475, %r1923;
$L__tmp70:
	.loc	1 152 33
	mul.f16x2 	%r2072, %r2071, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2073, %r2071, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2074, %r2071, %r2073;
	.loc	1 153 67
	fma.rn.f16x2 	%r2075, %r2071, %r2074, %r2071;
	.loc	1 153 63
	mul.f16x2 	%r2076, %r2075, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2077, %r2076, %r2076;
	mov.b32 	{%rs305, %rs306}, %r2077;
	.loc	1 143 45
	add.f16 	%rs307, %rs305, %rs5;
	add.f16 	%rs308, %rs306, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs309, %rs305, %rs8, %rs5;
	fma.rn.f16 	%rs310, %rs306, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f501, %rs307;
	cvt.f32.f16 	%f502, %rs308;
	cvt.f32.f16 	%f503, %rs309;
	cvt.f32.f16 	%f504, %rs310;
	.loc	1 143 18
	mov.b32 	{%rs311, %rs312}, %r2076;
	cvt.f32.f16 	%f505, %rs312;
	cvt.f32.f16 	%f506, %rs311;
	.loc	1 153 12
	mov.b32 	{%rs313, %rs314}, %r2072;
	cvt.f32.f16 	%f507, %rs314;
	cvt.f32.f16 	%f508, %rs313;
	.loc	1 143 54
	mov.b32 	%r1449, %f501;
	mov.b32 	%r1450, %f503;
	// begin inline asm
	div.full.f32 %r1448, %r1449, %r1450;
	// end inline asm
	mov.b32 	%f509, %r1448;
	mov.b32 	%r1452, %f502;
	mov.b32 	%r1453, %f504;
	// begin inline asm
	div.full.f32 %r1451, %r1452, %r1453;
	// end inline asm
	mov.b32 	%f510, %r1451;
	.loc	1 143 18
	mul.f32 	%f511, %f509, %f506;
	mul.f32 	%f512, %f510, %f505;
	.loc	1 144 54
	max.f32 	%f513, %f512, 0fBF800000;
	max.f32 	%f514, %f511, 0fBF800000;
	min.f32 	%f515, %f514, 0f3F800000;
	min.f32 	%f516, %f513, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f517, %f516, 0f3F800000;
	add.f32 	%f518, %f515, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f519, %f518, %f508;
	mul.f32 	%f520, %f517, %f507;
$L__tmp71:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs315, %f520;
	cvt.rn.f16.f32 	%rs316, %f519;
	mov.b32 	%r2078, {%rs316, %rs315};
	.loc	1 111 23
	add.f16x2 	%r2079, %r2474, %r1938;
$L__tmp72:
	.loc	1 152 33
	mul.f16x2 	%r2080, %r2079, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2081, %r2079, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2082, %r2079, %r2081;
	.loc	1 153 67
	fma.rn.f16x2 	%r2083, %r2079, %r2082, %r2079;
	.loc	1 153 63
	mul.f16x2 	%r2084, %r2083, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2085, %r2084, %r2084;
	mov.b32 	{%rs317, %rs318}, %r2085;
	.loc	1 143 45
	add.f16 	%rs319, %rs317, %rs5;
	add.f16 	%rs320, %rs318, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs321, %rs317, %rs8, %rs5;
	fma.rn.f16 	%rs322, %rs318, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f521, %rs319;
	cvt.f32.f16 	%f522, %rs320;
	cvt.f32.f16 	%f523, %rs321;
	cvt.f32.f16 	%f524, %rs322;
	.loc	1 143 18
	mov.b32 	{%rs323, %rs324}, %r2084;
	cvt.f32.f16 	%f525, %rs324;
	cvt.f32.f16 	%f526, %rs323;
	.loc	1 153 12
	mov.b32 	{%rs325, %rs326}, %r2080;
	cvt.f32.f16 	%f527, %rs326;
	cvt.f32.f16 	%f528, %rs325;
	.loc	1 143 54
	mov.b32 	%r1455, %f521;
	mov.b32 	%r1456, %f523;
	// begin inline asm
	div.full.f32 %r1454, %r1455, %r1456;
	// end inline asm
	mov.b32 	%f529, %r1454;
	mov.b32 	%r1458, %f522;
	mov.b32 	%r1459, %f524;
	// begin inline asm
	div.full.f32 %r1457, %r1458, %r1459;
	// end inline asm
	mov.b32 	%f530, %r1457;
	.loc	1 143 18
	mul.f32 	%f531, %f529, %f526;
	mul.f32 	%f532, %f530, %f525;
	.loc	1 144 54
	max.f32 	%f533, %f532, 0fBF800000;
	max.f32 	%f534, %f531, 0fBF800000;
	min.f32 	%f535, %f534, 0f3F800000;
	min.f32 	%f536, %f533, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f537, %f536, 0f3F800000;
	add.f32 	%f538, %f535, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f539, %f538, %f528;
	mul.f32 	%f540, %f537, %f527;
$L__tmp73:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs327, %f540;
	cvt.rn.f16.f32 	%rs328, %f539;
	mov.b32 	%r2086, {%rs328, %rs327};
	.loc	1 111 23
	add.f16x2 	%r2087, %r2473, %r1938;
$L__tmp74:
	.loc	1 152 33
	mul.f16x2 	%r2088, %r2087, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2089, %r2087, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2090, %r2087, %r2089;
	.loc	1 153 67
	fma.rn.f16x2 	%r2091, %r2087, %r2090, %r2087;
	.loc	1 153 63
	mul.f16x2 	%r2092, %r2091, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2093, %r2092, %r2092;
	mov.b32 	{%rs329, %rs330}, %r2093;
	.loc	1 143 45
	add.f16 	%rs331, %rs329, %rs5;
	add.f16 	%rs332, %rs330, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs333, %rs329, %rs8, %rs5;
	fma.rn.f16 	%rs334, %rs330, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f541, %rs331;
	cvt.f32.f16 	%f542, %rs332;
	cvt.f32.f16 	%f543, %rs333;
	cvt.f32.f16 	%f544, %rs334;
	.loc	1 143 18
	mov.b32 	{%rs335, %rs336}, %r2092;
	cvt.f32.f16 	%f545, %rs336;
	cvt.f32.f16 	%f546, %rs335;
	.loc	1 153 12
	mov.b32 	{%rs337, %rs338}, %r2088;
	cvt.f32.f16 	%f547, %rs338;
	cvt.f32.f16 	%f548, %rs337;
	.loc	1 143 54
	mov.b32 	%r1461, %f541;
	mov.b32 	%r1462, %f543;
	// begin inline asm
	div.full.f32 %r1460, %r1461, %r1462;
	// end inline asm
	mov.b32 	%f549, %r1460;
	mov.b32 	%r1464, %f542;
	mov.b32 	%r1465, %f544;
	// begin inline asm
	div.full.f32 %r1463, %r1464, %r1465;
	// end inline asm
	mov.b32 	%f550, %r1463;
	.loc	1 143 18
	mul.f32 	%f551, %f549, %f546;
	mul.f32 	%f552, %f550, %f545;
	.loc	1 144 54
	max.f32 	%f553, %f552, 0fBF800000;
	max.f32 	%f554, %f551, 0fBF800000;
	min.f32 	%f555, %f554, 0f3F800000;
	min.f32 	%f556, %f553, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f557, %f556, 0f3F800000;
	add.f32 	%f558, %f555, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f559, %f558, %f548;
	mul.f32 	%f560, %f557, %f547;
$L__tmp75:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs339, %f560;
	cvt.rn.f16.f32 	%rs340, %f559;
	mov.b32 	%r2094, {%rs340, %rs339};
	.loc	1 111 23
	add.f16x2 	%r2095, %r2472, %r1953;
$L__tmp76:
	.loc	1 152 33
	mul.f16x2 	%r2096, %r2095, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2097, %r2095, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2098, %r2095, %r2097;
	.loc	1 153 67
	fma.rn.f16x2 	%r2099, %r2095, %r2098, %r2095;
	.loc	1 153 63
	mul.f16x2 	%r2100, %r2099, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2101, %r2100, %r2100;
	mov.b32 	{%rs341, %rs342}, %r2101;
	.loc	1 143 45
	add.f16 	%rs343, %rs341, %rs5;
	add.f16 	%rs344, %rs342, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs345, %rs341, %rs8, %rs5;
	fma.rn.f16 	%rs346, %rs342, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f561, %rs343;
	cvt.f32.f16 	%f562, %rs344;
	cvt.f32.f16 	%f563, %rs345;
	cvt.f32.f16 	%f564, %rs346;
	.loc	1 143 18
	mov.b32 	{%rs347, %rs348}, %r2100;
	cvt.f32.f16 	%f565, %rs348;
	cvt.f32.f16 	%f566, %rs347;
	.loc	1 153 12
	mov.b32 	{%rs349, %rs350}, %r2096;
	cvt.f32.f16 	%f567, %rs350;
	cvt.f32.f16 	%f568, %rs349;
	.loc	1 143 54
	mov.b32 	%r1467, %f561;
	mov.b32 	%r1468, %f563;
	// begin inline asm
	div.full.f32 %r1466, %r1467, %r1468;
	// end inline asm
	mov.b32 	%f569, %r1466;
	mov.b32 	%r1470, %f562;
	mov.b32 	%r1471, %f564;
	// begin inline asm
	div.full.f32 %r1469, %r1470, %r1471;
	// end inline asm
	mov.b32 	%f570, %r1469;
	.loc	1 143 18
	mul.f32 	%f571, %f569, %f566;
	mul.f32 	%f572, %f570, %f565;
	.loc	1 144 54
	max.f32 	%f573, %f572, 0fBF800000;
	max.f32 	%f574, %f571, 0fBF800000;
	min.f32 	%f575, %f574, 0f3F800000;
	min.f32 	%f576, %f573, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f577, %f576, 0f3F800000;
	add.f32 	%f578, %f575, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f579, %f578, %f568;
	mul.f32 	%f580, %f577, %f567;
$L__tmp77:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs351, %f580;
	cvt.rn.f16.f32 	%rs352, %f579;
	mov.b32 	%r2102, {%rs352, %rs351};
	.loc	1 111 23
	add.f16x2 	%r2103, %r2471, %r1953;
$L__tmp78:
	.loc	1 152 33
	mul.f16x2 	%r2104, %r2103, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2105, %r2103, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2106, %r2103, %r2105;
	.loc	1 153 67
	fma.rn.f16x2 	%r2107, %r2103, %r2106, %r2103;
	.loc	1 153 63
	mul.f16x2 	%r2108, %r2107, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2109, %r2108, %r2108;
	mov.b32 	{%rs353, %rs354}, %r2109;
	.loc	1 143 45
	add.f16 	%rs355, %rs353, %rs5;
	add.f16 	%rs356, %rs354, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs357, %rs353, %rs8, %rs5;
	fma.rn.f16 	%rs358, %rs354, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f581, %rs355;
	cvt.f32.f16 	%f582, %rs356;
	cvt.f32.f16 	%f583, %rs357;
	cvt.f32.f16 	%f584, %rs358;
	.loc	1 143 18
	mov.b32 	{%rs359, %rs360}, %r2108;
	cvt.f32.f16 	%f585, %rs360;
	cvt.f32.f16 	%f586, %rs359;
	.loc	1 153 12
	mov.b32 	{%rs361, %rs362}, %r2104;
	cvt.f32.f16 	%f587, %rs362;
	cvt.f32.f16 	%f588, %rs361;
	.loc	1 143 54
	mov.b32 	%r1473, %f581;
	mov.b32 	%r1474, %f583;
	// begin inline asm
	div.full.f32 %r1472, %r1473, %r1474;
	// end inline asm
	mov.b32 	%f589, %r1472;
	mov.b32 	%r1476, %f582;
	mov.b32 	%r1477, %f584;
	// begin inline asm
	div.full.f32 %r1475, %r1476, %r1477;
	// end inline asm
	mov.b32 	%f590, %r1475;
	.loc	1 143 18
	mul.f32 	%f591, %f589, %f586;
	mul.f32 	%f592, %f590, %f585;
	.loc	1 144 54
	max.f32 	%f593, %f592, 0fBF800000;
	max.f32 	%f594, %f591, 0fBF800000;
	min.f32 	%f595, %f594, 0f3F800000;
	min.f32 	%f596, %f593, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f597, %f596, 0f3F800000;
	add.f32 	%f598, %f595, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f599, %f598, %f588;
	mul.f32 	%f600, %f597, %f587;
$L__tmp79:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs363, %f600;
	cvt.rn.f16.f32 	%rs364, %f599;
	mov.b32 	%r2110, {%rs364, %rs363};
	.loc	1 111 23
	add.f16x2 	%r2111, %r2470, %r1968;
$L__tmp80:
	.loc	1 152 33
	mul.f16x2 	%r2112, %r2111, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2113, %r2111, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2114, %r2111, %r2113;
	.loc	1 153 67
	fma.rn.f16x2 	%r2115, %r2111, %r2114, %r2111;
	.loc	1 153 63
	mul.f16x2 	%r2116, %r2115, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2117, %r2116, %r2116;
	mov.b32 	{%rs365, %rs366}, %r2117;
	.loc	1 143 45
	add.f16 	%rs367, %rs365, %rs5;
	add.f16 	%rs368, %rs366, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs369, %rs365, %rs8, %rs5;
	fma.rn.f16 	%rs370, %rs366, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f601, %rs367;
	cvt.f32.f16 	%f602, %rs368;
	cvt.f32.f16 	%f603, %rs369;
	cvt.f32.f16 	%f604, %rs370;
	.loc	1 143 18
	mov.b32 	{%rs371, %rs372}, %r2116;
	cvt.f32.f16 	%f605, %rs372;
	cvt.f32.f16 	%f606, %rs371;
	.loc	1 153 12
	mov.b32 	{%rs373, %rs374}, %r2112;
	cvt.f32.f16 	%f607, %rs374;
	cvt.f32.f16 	%f608, %rs373;
	.loc	1 143 54
	mov.b32 	%r1479, %f601;
	mov.b32 	%r1480, %f603;
	// begin inline asm
	div.full.f32 %r1478, %r1479, %r1480;
	// end inline asm
	mov.b32 	%f609, %r1478;
	mov.b32 	%r1482, %f602;
	mov.b32 	%r1483, %f604;
	// begin inline asm
	div.full.f32 %r1481, %r1482, %r1483;
	// end inline asm
	mov.b32 	%f610, %r1481;
	.loc	1 143 18
	mul.f32 	%f611, %f609, %f606;
	mul.f32 	%f612, %f610, %f605;
	.loc	1 144 54
	max.f32 	%f613, %f612, 0fBF800000;
	max.f32 	%f614, %f611, 0fBF800000;
	min.f32 	%f615, %f614, 0f3F800000;
	min.f32 	%f616, %f613, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f617, %f616, 0f3F800000;
	add.f32 	%f618, %f615, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f619, %f618, %f608;
	mul.f32 	%f620, %f617, %f607;
$L__tmp81:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs375, %f620;
	cvt.rn.f16.f32 	%rs376, %f619;
	mov.b32 	%r2118, {%rs376, %rs375};
	.loc	1 111 23
	add.f16x2 	%r2119, %r2469, %r1968;
$L__tmp82:
	.loc	1 152 33
	mul.f16x2 	%r2120, %r2119, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2121, %r2119, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2122, %r2119, %r2121;
	.loc	1 153 67
	fma.rn.f16x2 	%r2123, %r2119, %r2122, %r2119;
	.loc	1 153 63
	mul.f16x2 	%r2124, %r2123, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2125, %r2124, %r2124;
	mov.b32 	{%rs377, %rs378}, %r2125;
	.loc	1 143 45
	add.f16 	%rs379, %rs377, %rs5;
	add.f16 	%rs380, %rs378, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs381, %rs377, %rs8, %rs5;
	fma.rn.f16 	%rs382, %rs378, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f621, %rs379;
	cvt.f32.f16 	%f622, %rs380;
	cvt.f32.f16 	%f623, %rs381;
	cvt.f32.f16 	%f624, %rs382;
	.loc	1 143 18
	mov.b32 	{%rs383, %rs384}, %r2124;
	cvt.f32.f16 	%f625, %rs384;
	cvt.f32.f16 	%f626, %rs383;
	.loc	1 153 12
	mov.b32 	{%rs385, %rs386}, %r2120;
	cvt.f32.f16 	%f627, %rs386;
	cvt.f32.f16 	%f628, %rs385;
	.loc	1 143 54
	mov.b32 	%r1485, %f621;
	mov.b32 	%r1486, %f623;
	// begin inline asm
	div.full.f32 %r1484, %r1485, %r1486;
	// end inline asm
	mov.b32 	%f629, %r1484;
	mov.b32 	%r1488, %f622;
	mov.b32 	%r1489, %f624;
	// begin inline asm
	div.full.f32 %r1487, %r1488, %r1489;
	// end inline asm
	mov.b32 	%f630, %r1487;
	.loc	1 143 18
	mul.f32 	%f631, %f629, %f626;
	mul.f32 	%f632, %f630, %f625;
	.loc	1 144 54
	max.f32 	%f633, %f632, 0fBF800000;
	max.f32 	%f634, %f631, 0fBF800000;
	min.f32 	%f635, %f634, 0f3F800000;
	min.f32 	%f636, %f633, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f637, %f636, 0f3F800000;
	add.f32 	%f638, %f635, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f639, %f638, %f628;
	mul.f32 	%f640, %f637, %f627;
$L__tmp83:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs387, %f640;
	cvt.rn.f16.f32 	%rs388, %f639;
	mov.b32 	%r2126, {%rs388, %rs387};
	.loc	1 111 23
	add.f16x2 	%r2127, %r2468, %r1860;
$L__tmp84:
	.loc	1 152 33
	mul.f16x2 	%r2128, %r2127, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2129, %r2127, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2130, %r2127, %r2129;
	.loc	1 153 67
	fma.rn.f16x2 	%r2131, %r2127, %r2130, %r2127;
	.loc	1 153 63
	mul.f16x2 	%r2132, %r2131, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2133, %r2132, %r2132;
	mov.b32 	{%rs389, %rs390}, %r2133;
	.loc	1 143 45
	add.f16 	%rs391, %rs389, %rs5;
	add.f16 	%rs392, %rs390, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs393, %rs389, %rs8, %rs5;
	fma.rn.f16 	%rs394, %rs390, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f641, %rs391;
	cvt.f32.f16 	%f642, %rs392;
	cvt.f32.f16 	%f643, %rs393;
	cvt.f32.f16 	%f644, %rs394;
	.loc	1 143 18
	mov.b32 	{%rs395, %rs396}, %r2132;
	cvt.f32.f16 	%f645, %rs396;
	cvt.f32.f16 	%f646, %rs395;
	.loc	1 153 12
	mov.b32 	{%rs397, %rs398}, %r2128;
	cvt.f32.f16 	%f647, %rs398;
	cvt.f32.f16 	%f648, %rs397;
	.loc	1 143 54
	mov.b32 	%r1491, %f641;
	mov.b32 	%r1492, %f643;
	// begin inline asm
	div.full.f32 %r1490, %r1491, %r1492;
	// end inline asm
	mov.b32 	%f649, %r1490;
	mov.b32 	%r1494, %f642;
	mov.b32 	%r1495, %f644;
	// begin inline asm
	div.full.f32 %r1493, %r1494, %r1495;
	// end inline asm
	mov.b32 	%f650, %r1493;
	.loc	1 143 18
	mul.f32 	%f651, %f649, %f646;
	mul.f32 	%f652, %f650, %f645;
	.loc	1 144 54
	max.f32 	%f653, %f652, 0fBF800000;
	max.f32 	%f654, %f651, 0fBF800000;
	min.f32 	%f655, %f654, 0f3F800000;
	min.f32 	%f656, %f653, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f657, %f656, 0f3F800000;
	add.f32 	%f658, %f655, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f659, %f658, %f648;
	mul.f32 	%f660, %f657, %f647;
$L__tmp85:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs399, %f660;
	cvt.rn.f16.f32 	%rs400, %f659;
	mov.b32 	%r2134, {%rs400, %rs399};
	.loc	1 111 23
	add.f16x2 	%r2135, %r2467, %r1860;
$L__tmp86:
	.loc	1 152 33
	mul.f16x2 	%r2136, %r2135, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2137, %r2135, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2138, %r2135, %r2137;
	.loc	1 153 67
	fma.rn.f16x2 	%r2139, %r2135, %r2138, %r2135;
	.loc	1 153 63
	mul.f16x2 	%r2140, %r2139, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2141, %r2140, %r2140;
	mov.b32 	{%rs401, %rs402}, %r2141;
	.loc	1 143 45
	add.f16 	%rs403, %rs401, %rs5;
	add.f16 	%rs404, %rs402, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs405, %rs401, %rs8, %rs5;
	fma.rn.f16 	%rs406, %rs402, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f661, %rs403;
	cvt.f32.f16 	%f662, %rs404;
	cvt.f32.f16 	%f663, %rs405;
	cvt.f32.f16 	%f664, %rs406;
	.loc	1 143 18
	mov.b32 	{%rs407, %rs408}, %r2140;
	cvt.f32.f16 	%f665, %rs408;
	cvt.f32.f16 	%f666, %rs407;
	.loc	1 153 12
	mov.b32 	{%rs409, %rs410}, %r2136;
	cvt.f32.f16 	%f667, %rs410;
	cvt.f32.f16 	%f668, %rs409;
	.loc	1 143 54
	mov.b32 	%r1497, %f661;
	mov.b32 	%r1498, %f663;
	// begin inline asm
	div.full.f32 %r1496, %r1497, %r1498;
	// end inline asm
	mov.b32 	%f669, %r1496;
	mov.b32 	%r1500, %f662;
	mov.b32 	%r1501, %f664;
	// begin inline asm
	div.full.f32 %r1499, %r1500, %r1501;
	// end inline asm
	mov.b32 	%f670, %r1499;
	.loc	1 143 18
	mul.f32 	%f671, %f669, %f666;
	mul.f32 	%f672, %f670, %f665;
	.loc	1 144 54
	max.f32 	%f673, %f672, 0fBF800000;
	max.f32 	%f674, %f671, 0fBF800000;
	min.f32 	%f675, %f674, 0f3F800000;
	min.f32 	%f676, %f673, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f677, %f676, 0f3F800000;
	add.f32 	%f678, %f675, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f679, %f678, %f668;
	mul.f32 	%f680, %f677, %f667;
$L__tmp87:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs411, %f680;
	cvt.rn.f16.f32 	%rs412, %f679;
	mov.b32 	%r2142, {%rs412, %rs411};
	.loc	1 111 23
	add.f16x2 	%r2143, %r2466, %r1878;
$L__tmp88:
	.loc	1 152 33
	mul.f16x2 	%r2144, %r2143, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2145, %r2143, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2146, %r2143, %r2145;
	.loc	1 153 67
	fma.rn.f16x2 	%r2147, %r2143, %r2146, %r2143;
	.loc	1 153 63
	mul.f16x2 	%r2148, %r2147, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2149, %r2148, %r2148;
	mov.b32 	{%rs413, %rs414}, %r2149;
	.loc	1 143 45
	add.f16 	%rs415, %rs413, %rs5;
	add.f16 	%rs416, %rs414, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs417, %rs413, %rs8, %rs5;
	fma.rn.f16 	%rs418, %rs414, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f681, %rs415;
	cvt.f32.f16 	%f682, %rs416;
	cvt.f32.f16 	%f683, %rs417;
	cvt.f32.f16 	%f684, %rs418;
	.loc	1 143 18
	mov.b32 	{%rs419, %rs420}, %r2148;
	cvt.f32.f16 	%f685, %rs420;
	cvt.f32.f16 	%f686, %rs419;
	.loc	1 153 12
	mov.b32 	{%rs421, %rs422}, %r2144;
	cvt.f32.f16 	%f687, %rs422;
	cvt.f32.f16 	%f688, %rs421;
	.loc	1 143 54
	mov.b32 	%r1503, %f681;
	mov.b32 	%r1504, %f683;
	// begin inline asm
	div.full.f32 %r1502, %r1503, %r1504;
	// end inline asm
	mov.b32 	%f689, %r1502;
	mov.b32 	%r1506, %f682;
	mov.b32 	%r1507, %f684;
	// begin inline asm
	div.full.f32 %r1505, %r1506, %r1507;
	// end inline asm
	mov.b32 	%f690, %r1505;
	.loc	1 143 18
	mul.f32 	%f691, %f689, %f686;
	mul.f32 	%f692, %f690, %f685;
	.loc	1 144 54
	max.f32 	%f693, %f692, 0fBF800000;
	max.f32 	%f694, %f691, 0fBF800000;
	min.f32 	%f695, %f694, 0f3F800000;
	min.f32 	%f696, %f693, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f697, %f696, 0f3F800000;
	add.f32 	%f698, %f695, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f699, %f698, %f688;
	mul.f32 	%f700, %f697, %f687;
$L__tmp89:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs423, %f700;
	cvt.rn.f16.f32 	%rs424, %f699;
	mov.b32 	%r2150, {%rs424, %rs423};
	.loc	1 111 23
	add.f16x2 	%r2151, %r2465, %r1878;
$L__tmp90:
	.loc	1 152 33
	mul.f16x2 	%r2152, %r2151, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2153, %r2151, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2154, %r2151, %r2153;
	.loc	1 153 67
	fma.rn.f16x2 	%r2155, %r2151, %r2154, %r2151;
	.loc	1 153 63
	mul.f16x2 	%r2156, %r2155, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2157, %r2156, %r2156;
	mov.b32 	{%rs425, %rs426}, %r2157;
	.loc	1 143 45
	add.f16 	%rs427, %rs425, %rs5;
	add.f16 	%rs428, %rs426, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs429, %rs425, %rs8, %rs5;
	fma.rn.f16 	%rs430, %rs426, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f701, %rs427;
	cvt.f32.f16 	%f702, %rs428;
	cvt.f32.f16 	%f703, %rs429;
	cvt.f32.f16 	%f704, %rs430;
	.loc	1 143 18
	mov.b32 	{%rs431, %rs432}, %r2156;
	cvt.f32.f16 	%f705, %rs432;
	cvt.f32.f16 	%f706, %rs431;
	.loc	1 153 12
	mov.b32 	{%rs433, %rs434}, %r2152;
	cvt.f32.f16 	%f707, %rs434;
	cvt.f32.f16 	%f708, %rs433;
	.loc	1 143 54
	mov.b32 	%r1509, %f701;
	mov.b32 	%r1510, %f703;
	// begin inline asm
	div.full.f32 %r1508, %r1509, %r1510;
	// end inline asm
	mov.b32 	%f709, %r1508;
	mov.b32 	%r1512, %f702;
	mov.b32 	%r1513, %f704;
	// begin inline asm
	div.full.f32 %r1511, %r1512, %r1513;
	// end inline asm
	mov.b32 	%f710, %r1511;
	.loc	1 143 18
	mul.f32 	%f711, %f709, %f706;
	mul.f32 	%f712, %f710, %f705;
	.loc	1 144 54
	max.f32 	%f713, %f712, 0fBF800000;
	max.f32 	%f714, %f711, 0fBF800000;
	min.f32 	%f715, %f714, 0f3F800000;
	min.f32 	%f716, %f713, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f717, %f716, 0f3F800000;
	add.f32 	%f718, %f715, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f719, %f718, %f708;
	mul.f32 	%f720, %f717, %f707;
$L__tmp91:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs435, %f720;
	cvt.rn.f16.f32 	%rs436, %f719;
	mov.b32 	%r2158, {%rs436, %rs435};
	.loc	1 111 23
	add.f16x2 	%r2159, %r2464, %r1893;
$L__tmp92:
	.loc	1 152 33
	mul.f16x2 	%r2160, %r2159, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2161, %r2159, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2162, %r2159, %r2161;
	.loc	1 153 67
	fma.rn.f16x2 	%r2163, %r2159, %r2162, %r2159;
	.loc	1 153 63
	mul.f16x2 	%r2164, %r2163, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2165, %r2164, %r2164;
	mov.b32 	{%rs437, %rs438}, %r2165;
	.loc	1 143 45
	add.f16 	%rs439, %rs437, %rs5;
	add.f16 	%rs440, %rs438, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs441, %rs437, %rs8, %rs5;
	fma.rn.f16 	%rs442, %rs438, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f721, %rs439;
	cvt.f32.f16 	%f722, %rs440;
	cvt.f32.f16 	%f723, %rs441;
	cvt.f32.f16 	%f724, %rs442;
	.loc	1 143 18
	mov.b32 	{%rs443, %rs444}, %r2164;
	cvt.f32.f16 	%f725, %rs444;
	cvt.f32.f16 	%f726, %rs443;
	.loc	1 153 12
	mov.b32 	{%rs445, %rs446}, %r2160;
	cvt.f32.f16 	%f727, %rs446;
	cvt.f32.f16 	%f728, %rs445;
	.loc	1 143 54
	mov.b32 	%r1515, %f721;
	mov.b32 	%r1516, %f723;
	// begin inline asm
	div.full.f32 %r1514, %r1515, %r1516;
	// end inline asm
	mov.b32 	%f729, %r1514;
	mov.b32 	%r1518, %f722;
	mov.b32 	%r1519, %f724;
	// begin inline asm
	div.full.f32 %r1517, %r1518, %r1519;
	// end inline asm
	mov.b32 	%f730, %r1517;
	.loc	1 143 18
	mul.f32 	%f731, %f729, %f726;
	mul.f32 	%f732, %f730, %f725;
	.loc	1 144 54
	max.f32 	%f733, %f732, 0fBF800000;
	max.f32 	%f734, %f731, 0fBF800000;
	min.f32 	%f735, %f734, 0f3F800000;
	min.f32 	%f736, %f733, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f737, %f736, 0f3F800000;
	add.f32 	%f738, %f735, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f739, %f738, %f728;
	mul.f32 	%f740, %f737, %f727;
$L__tmp93:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs447, %f740;
	cvt.rn.f16.f32 	%rs448, %f739;
	mov.b32 	%r2166, {%rs448, %rs447};
	.loc	1 111 23
	add.f16x2 	%r2167, %r2463, %r1893;
$L__tmp94:
	.loc	1 152 33
	mul.f16x2 	%r2168, %r2167, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2169, %r2167, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2170, %r2167, %r2169;
	.loc	1 153 67
	fma.rn.f16x2 	%r2171, %r2167, %r2170, %r2167;
	.loc	1 153 63
	mul.f16x2 	%r2172, %r2171, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2173, %r2172, %r2172;
	mov.b32 	{%rs449, %rs450}, %r2173;
	.loc	1 143 45
	add.f16 	%rs451, %rs449, %rs5;
	add.f16 	%rs452, %rs450, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs453, %rs449, %rs8, %rs5;
	fma.rn.f16 	%rs454, %rs450, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f741, %rs451;
	cvt.f32.f16 	%f742, %rs452;
	cvt.f32.f16 	%f743, %rs453;
	cvt.f32.f16 	%f744, %rs454;
	.loc	1 143 18
	mov.b32 	{%rs455, %rs456}, %r2172;
	cvt.f32.f16 	%f745, %rs456;
	cvt.f32.f16 	%f746, %rs455;
	.loc	1 153 12
	mov.b32 	{%rs457, %rs458}, %r2168;
	cvt.f32.f16 	%f747, %rs458;
	cvt.f32.f16 	%f748, %rs457;
	.loc	1 143 54
	mov.b32 	%r1521, %f741;
	mov.b32 	%r1522, %f743;
	// begin inline asm
	div.full.f32 %r1520, %r1521, %r1522;
	// end inline asm
	mov.b32 	%f749, %r1520;
	mov.b32 	%r1524, %f742;
	mov.b32 	%r1525, %f744;
	// begin inline asm
	div.full.f32 %r1523, %r1524, %r1525;
	// end inline asm
	mov.b32 	%f750, %r1523;
	.loc	1 143 18
	mul.f32 	%f751, %f749, %f746;
	mul.f32 	%f752, %f750, %f745;
	.loc	1 144 54
	max.f32 	%f753, %f752, 0fBF800000;
	max.f32 	%f754, %f751, 0fBF800000;
	min.f32 	%f755, %f754, 0f3F800000;
	min.f32 	%f756, %f753, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f757, %f756, 0f3F800000;
	add.f32 	%f758, %f755, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f759, %f758, %f748;
	mul.f32 	%f760, %f757, %f747;
$L__tmp95:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs459, %f760;
	cvt.rn.f16.f32 	%rs460, %f759;
	mov.b32 	%r2174, {%rs460, %rs459};
	.loc	1 111 23
	add.f16x2 	%r2175, %r2462, %r1908;
$L__tmp96:
	.loc	1 152 33
	mul.f16x2 	%r2176, %r2175, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2177, %r2175, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2178, %r2175, %r2177;
	.loc	1 153 67
	fma.rn.f16x2 	%r2179, %r2175, %r2178, %r2175;
	.loc	1 153 63
	mul.f16x2 	%r2180, %r2179, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2181, %r2180, %r2180;
	mov.b32 	{%rs461, %rs462}, %r2181;
	.loc	1 143 45
	add.f16 	%rs463, %rs461, %rs5;
	add.f16 	%rs464, %rs462, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs465, %rs461, %rs8, %rs5;
	fma.rn.f16 	%rs466, %rs462, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f761, %rs463;
	cvt.f32.f16 	%f762, %rs464;
	cvt.f32.f16 	%f763, %rs465;
	cvt.f32.f16 	%f764, %rs466;
	.loc	1 143 18
	mov.b32 	{%rs467, %rs468}, %r2180;
	cvt.f32.f16 	%f765, %rs468;
	cvt.f32.f16 	%f766, %rs467;
	.loc	1 153 12
	mov.b32 	{%rs469, %rs470}, %r2176;
	cvt.f32.f16 	%f767, %rs470;
	cvt.f32.f16 	%f768, %rs469;
	.loc	1 143 54
	mov.b32 	%r1527, %f761;
	mov.b32 	%r1528, %f763;
	// begin inline asm
	div.full.f32 %r1526, %r1527, %r1528;
	// end inline asm
	mov.b32 	%f769, %r1526;
	mov.b32 	%r1530, %f762;
	mov.b32 	%r1531, %f764;
	// begin inline asm
	div.full.f32 %r1529, %r1530, %r1531;
	// end inline asm
	mov.b32 	%f770, %r1529;
	.loc	1 143 18
	mul.f32 	%f771, %f769, %f766;
	mul.f32 	%f772, %f770, %f765;
	.loc	1 144 54
	max.f32 	%f773, %f772, 0fBF800000;
	max.f32 	%f774, %f771, 0fBF800000;
	min.f32 	%f775, %f774, 0f3F800000;
	min.f32 	%f776, %f773, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f777, %f776, 0f3F800000;
	add.f32 	%f778, %f775, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f779, %f778, %f768;
	mul.f32 	%f780, %f777, %f767;
$L__tmp97:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs471, %f780;
	cvt.rn.f16.f32 	%rs472, %f779;
	mov.b32 	%r2182, {%rs472, %rs471};
	.loc	1 111 23
	add.f16x2 	%r2183, %r2461, %r1908;
$L__tmp98:
	.loc	1 152 33
	mul.f16x2 	%r2184, %r2183, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2185, %r2183, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2186, %r2183, %r2185;
	.loc	1 153 67
	fma.rn.f16x2 	%r2187, %r2183, %r2186, %r2183;
	.loc	1 153 63
	mul.f16x2 	%r2188, %r2187, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2189, %r2188, %r2188;
	mov.b32 	{%rs473, %rs474}, %r2189;
	.loc	1 143 45
	add.f16 	%rs475, %rs473, %rs5;
	add.f16 	%rs476, %rs474, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs477, %rs473, %rs8, %rs5;
	fma.rn.f16 	%rs478, %rs474, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f781, %rs475;
	cvt.f32.f16 	%f782, %rs476;
	cvt.f32.f16 	%f783, %rs477;
	cvt.f32.f16 	%f784, %rs478;
	.loc	1 143 18
	mov.b32 	{%rs479, %rs480}, %r2188;
	cvt.f32.f16 	%f785, %rs480;
	cvt.f32.f16 	%f786, %rs479;
	.loc	1 153 12
	mov.b32 	{%rs481, %rs482}, %r2184;
	cvt.f32.f16 	%f787, %rs482;
	cvt.f32.f16 	%f788, %rs481;
	.loc	1 143 54
	mov.b32 	%r1533, %f781;
	mov.b32 	%r1534, %f783;
	// begin inline asm
	div.full.f32 %r1532, %r1533, %r1534;
	// end inline asm
	mov.b32 	%f789, %r1532;
	mov.b32 	%r1536, %f782;
	mov.b32 	%r1537, %f784;
	// begin inline asm
	div.full.f32 %r1535, %r1536, %r1537;
	// end inline asm
	mov.b32 	%f790, %r1535;
	.loc	1 143 18
	mul.f32 	%f791, %f789, %f786;
	mul.f32 	%f792, %f790, %f785;
	.loc	1 144 54
	max.f32 	%f793, %f792, 0fBF800000;
	max.f32 	%f794, %f791, 0fBF800000;
	min.f32 	%f795, %f794, 0f3F800000;
	min.f32 	%f796, %f793, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f797, %f796, 0f3F800000;
	add.f32 	%f798, %f795, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f799, %f798, %f788;
	mul.f32 	%f800, %f797, %f787;
$L__tmp99:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs483, %f800;
	cvt.rn.f16.f32 	%rs484, %f799;
	mov.b32 	%r2190, {%rs484, %rs483};
	.loc	1 111 23
	add.f16x2 	%r2191, %r2460, %r1923;
$L__tmp100:
	.loc	1 152 33
	mul.f16x2 	%r2192, %r2191, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2193, %r2191, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2194, %r2191, %r2193;
	.loc	1 153 67
	fma.rn.f16x2 	%r2195, %r2191, %r2194, %r2191;
	.loc	1 153 63
	mul.f16x2 	%r2196, %r2195, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2197, %r2196, %r2196;
	mov.b32 	{%rs485, %rs486}, %r2197;
	.loc	1 143 45
	add.f16 	%rs487, %rs485, %rs5;
	add.f16 	%rs488, %rs486, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs489, %rs485, %rs8, %rs5;
	fma.rn.f16 	%rs490, %rs486, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f801, %rs487;
	cvt.f32.f16 	%f802, %rs488;
	cvt.f32.f16 	%f803, %rs489;
	cvt.f32.f16 	%f804, %rs490;
	.loc	1 143 18
	mov.b32 	{%rs491, %rs492}, %r2196;
	cvt.f32.f16 	%f805, %rs492;
	cvt.f32.f16 	%f806, %rs491;
	.loc	1 153 12
	mov.b32 	{%rs493, %rs494}, %r2192;
	cvt.f32.f16 	%f807, %rs494;
	cvt.f32.f16 	%f808, %rs493;
	.loc	1 143 54
	mov.b32 	%r1539, %f801;
	mov.b32 	%r1540, %f803;
	// begin inline asm
	div.full.f32 %r1538, %r1539, %r1540;
	// end inline asm
	mov.b32 	%f809, %r1538;
	mov.b32 	%r1542, %f802;
	mov.b32 	%r1543, %f804;
	// begin inline asm
	div.full.f32 %r1541, %r1542, %r1543;
	// end inline asm
	mov.b32 	%f810, %r1541;
	.loc	1 143 18
	mul.f32 	%f811, %f809, %f806;
	mul.f32 	%f812, %f810, %f805;
	.loc	1 144 54
	max.f32 	%f813, %f812, 0fBF800000;
	max.f32 	%f814, %f811, 0fBF800000;
	min.f32 	%f815, %f814, 0f3F800000;
	min.f32 	%f816, %f813, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f817, %f816, 0f3F800000;
	add.f32 	%f818, %f815, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f819, %f818, %f808;
	mul.f32 	%f820, %f817, %f807;
$L__tmp101:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs495, %f820;
	cvt.rn.f16.f32 	%rs496, %f819;
	mov.b32 	%r2198, {%rs496, %rs495};
	.loc	1 111 23
	add.f16x2 	%r2199, %r2459, %r1923;
$L__tmp102:
	.loc	1 152 33
	mul.f16x2 	%r2200, %r2199, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2201, %r2199, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2202, %r2199, %r2201;
	.loc	1 153 67
	fma.rn.f16x2 	%r2203, %r2199, %r2202, %r2199;
	.loc	1 153 63
	mul.f16x2 	%r2204, %r2203, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2205, %r2204, %r2204;
	mov.b32 	{%rs497, %rs498}, %r2205;
	.loc	1 143 45
	add.f16 	%rs499, %rs497, %rs5;
	add.f16 	%rs500, %rs498, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs501, %rs497, %rs8, %rs5;
	fma.rn.f16 	%rs502, %rs498, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f821, %rs499;
	cvt.f32.f16 	%f822, %rs500;
	cvt.f32.f16 	%f823, %rs501;
	cvt.f32.f16 	%f824, %rs502;
	.loc	1 143 18
	mov.b32 	{%rs503, %rs504}, %r2204;
	cvt.f32.f16 	%f825, %rs504;
	cvt.f32.f16 	%f826, %rs503;
	.loc	1 153 12
	mov.b32 	{%rs505, %rs506}, %r2200;
	cvt.f32.f16 	%f827, %rs506;
	cvt.f32.f16 	%f828, %rs505;
	.loc	1 143 54
	mov.b32 	%r1545, %f821;
	mov.b32 	%r1546, %f823;
	// begin inline asm
	div.full.f32 %r1544, %r1545, %r1546;
	// end inline asm
	mov.b32 	%f829, %r1544;
	mov.b32 	%r1548, %f822;
	mov.b32 	%r1549, %f824;
	// begin inline asm
	div.full.f32 %r1547, %r1548, %r1549;
	// end inline asm
	mov.b32 	%f830, %r1547;
	.loc	1 143 18
	mul.f32 	%f831, %f829, %f826;
	mul.f32 	%f832, %f830, %f825;
	.loc	1 144 54
	max.f32 	%f833, %f832, 0fBF800000;
	max.f32 	%f834, %f831, 0fBF800000;
	min.f32 	%f835, %f834, 0f3F800000;
	min.f32 	%f836, %f833, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f837, %f836, 0f3F800000;
	add.f32 	%f838, %f835, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f839, %f838, %f828;
	mul.f32 	%f840, %f837, %f827;
$L__tmp103:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs507, %f840;
	cvt.rn.f16.f32 	%rs508, %f839;
	mov.b32 	%r2206, {%rs508, %rs507};
	.loc	1 111 23
	add.f16x2 	%r2207, %r2458, %r1938;
$L__tmp104:
	.loc	1 152 33
	mul.f16x2 	%r2208, %r2207, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2209, %r2207, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2210, %r2207, %r2209;
	.loc	1 153 67
	fma.rn.f16x2 	%r2211, %r2207, %r2210, %r2207;
	.loc	1 153 63
	mul.f16x2 	%r2212, %r2211, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2213, %r2212, %r2212;
	mov.b32 	{%rs509, %rs510}, %r2213;
	.loc	1 143 45
	add.f16 	%rs511, %rs509, %rs5;
	add.f16 	%rs512, %rs510, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs513, %rs509, %rs8, %rs5;
	fma.rn.f16 	%rs514, %rs510, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f841, %rs511;
	cvt.f32.f16 	%f842, %rs512;
	cvt.f32.f16 	%f843, %rs513;
	cvt.f32.f16 	%f844, %rs514;
	.loc	1 143 18
	mov.b32 	{%rs515, %rs516}, %r2212;
	cvt.f32.f16 	%f845, %rs516;
	cvt.f32.f16 	%f846, %rs515;
	.loc	1 153 12
	mov.b32 	{%rs517, %rs518}, %r2208;
	cvt.f32.f16 	%f847, %rs518;
	cvt.f32.f16 	%f848, %rs517;
	.loc	1 143 54
	mov.b32 	%r1551, %f841;
	mov.b32 	%r1552, %f843;
	// begin inline asm
	div.full.f32 %r1550, %r1551, %r1552;
	// end inline asm
	mov.b32 	%f849, %r1550;
	mov.b32 	%r1554, %f842;
	mov.b32 	%r1555, %f844;
	// begin inline asm
	div.full.f32 %r1553, %r1554, %r1555;
	// end inline asm
	mov.b32 	%f850, %r1553;
	.loc	1 143 18
	mul.f32 	%f851, %f849, %f846;
	mul.f32 	%f852, %f850, %f845;
	.loc	1 144 54
	max.f32 	%f853, %f852, 0fBF800000;
	max.f32 	%f854, %f851, 0fBF800000;
	min.f32 	%f855, %f854, 0f3F800000;
	min.f32 	%f856, %f853, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f857, %f856, 0f3F800000;
	add.f32 	%f858, %f855, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f859, %f858, %f848;
	mul.f32 	%f860, %f857, %f847;
$L__tmp105:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs519, %f860;
	cvt.rn.f16.f32 	%rs520, %f859;
	mov.b32 	%r2214, {%rs520, %rs519};
	.loc	1 111 23
	add.f16x2 	%r2215, %r2457, %r1938;
$L__tmp106:
	.loc	1 152 33
	mul.f16x2 	%r2216, %r2215, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2217, %r2215, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2218, %r2215, %r2217;
	.loc	1 153 67
	fma.rn.f16x2 	%r2219, %r2215, %r2218, %r2215;
	.loc	1 153 63
	mul.f16x2 	%r2220, %r2219, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2221, %r2220, %r2220;
	mov.b32 	{%rs521, %rs522}, %r2221;
	.loc	1 143 45
	add.f16 	%rs523, %rs521, %rs5;
	add.f16 	%rs524, %rs522, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs525, %rs521, %rs8, %rs5;
	fma.rn.f16 	%rs526, %rs522, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f861, %rs523;
	cvt.f32.f16 	%f862, %rs524;
	cvt.f32.f16 	%f863, %rs525;
	cvt.f32.f16 	%f864, %rs526;
	.loc	1 143 18
	mov.b32 	{%rs527, %rs528}, %r2220;
	cvt.f32.f16 	%f865, %rs528;
	cvt.f32.f16 	%f866, %rs527;
	.loc	1 153 12
	mov.b32 	{%rs529, %rs530}, %r2216;
	cvt.f32.f16 	%f867, %rs530;
	cvt.f32.f16 	%f868, %rs529;
	.loc	1 143 54
	mov.b32 	%r1557, %f861;
	mov.b32 	%r1558, %f863;
	// begin inline asm
	div.full.f32 %r1556, %r1557, %r1558;
	// end inline asm
	mov.b32 	%f869, %r1556;
	mov.b32 	%r1560, %f862;
	mov.b32 	%r1561, %f864;
	// begin inline asm
	div.full.f32 %r1559, %r1560, %r1561;
	// end inline asm
	mov.b32 	%f870, %r1559;
	.loc	1 143 18
	mul.f32 	%f871, %f869, %f866;
	mul.f32 	%f872, %f870, %f865;
	.loc	1 144 54
	max.f32 	%f873, %f872, 0fBF800000;
	max.f32 	%f874, %f871, 0fBF800000;
	min.f32 	%f875, %f874, 0f3F800000;
	min.f32 	%f876, %f873, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f877, %f876, 0f3F800000;
	add.f32 	%f878, %f875, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f879, %f878, %f868;
	mul.f32 	%f880, %f877, %f867;
$L__tmp107:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs531, %f880;
	cvt.rn.f16.f32 	%rs532, %f879;
	mov.b32 	%r2222, {%rs532, %rs531};
	.loc	1 111 23
	add.f16x2 	%r2223, %r2456, %r1953;
$L__tmp108:
	.loc	1 152 33
	mul.f16x2 	%r2224, %r2223, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2225, %r2223, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2226, %r2223, %r2225;
	.loc	1 153 67
	fma.rn.f16x2 	%r2227, %r2223, %r2226, %r2223;
	.loc	1 153 63
	mul.f16x2 	%r2228, %r2227, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2229, %r2228, %r2228;
	mov.b32 	{%rs533, %rs534}, %r2229;
	.loc	1 143 45
	add.f16 	%rs535, %rs533, %rs5;
	add.f16 	%rs536, %rs534, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs537, %rs533, %rs8, %rs5;
	fma.rn.f16 	%rs538, %rs534, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f881, %rs535;
	cvt.f32.f16 	%f882, %rs536;
	cvt.f32.f16 	%f883, %rs537;
	cvt.f32.f16 	%f884, %rs538;
	.loc	1 143 18
	mov.b32 	{%rs539, %rs540}, %r2228;
	cvt.f32.f16 	%f885, %rs540;
	cvt.f32.f16 	%f886, %rs539;
	.loc	1 153 12
	mov.b32 	{%rs541, %rs542}, %r2224;
	cvt.f32.f16 	%f887, %rs542;
	cvt.f32.f16 	%f888, %rs541;
	.loc	1 143 54
	mov.b32 	%r1563, %f881;
	mov.b32 	%r1564, %f883;
	// begin inline asm
	div.full.f32 %r1562, %r1563, %r1564;
	// end inline asm
	mov.b32 	%f889, %r1562;
	mov.b32 	%r1566, %f882;
	mov.b32 	%r1567, %f884;
	// begin inline asm
	div.full.f32 %r1565, %r1566, %r1567;
	// end inline asm
	mov.b32 	%f890, %r1565;
	.loc	1 143 18
	mul.f32 	%f891, %f889, %f886;
	mul.f32 	%f892, %f890, %f885;
	.loc	1 144 54
	max.f32 	%f893, %f892, 0fBF800000;
	max.f32 	%f894, %f891, 0fBF800000;
	min.f32 	%f895, %f894, 0f3F800000;
	min.f32 	%f896, %f893, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f897, %f896, 0f3F800000;
	add.f32 	%f898, %f895, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f899, %f898, %f888;
	mul.f32 	%f900, %f897, %f887;
$L__tmp109:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs543, %f900;
	cvt.rn.f16.f32 	%rs544, %f899;
	mov.b32 	%r2230, {%rs544, %rs543};
	.loc	1 111 23
	add.f16x2 	%r2231, %r2455, %r1953;
$L__tmp110:
	.loc	1 152 33
	mul.f16x2 	%r2232, %r2231, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2233, %r2231, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2234, %r2231, %r2233;
	.loc	1 153 67
	fma.rn.f16x2 	%r2235, %r2231, %r2234, %r2231;
	.loc	1 153 63
	mul.f16x2 	%r2236, %r2235, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2237, %r2236, %r2236;
	mov.b32 	{%rs545, %rs546}, %r2237;
	.loc	1 143 45
	add.f16 	%rs547, %rs545, %rs5;
	add.f16 	%rs548, %rs546, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs549, %rs545, %rs8, %rs5;
	fma.rn.f16 	%rs550, %rs546, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f901, %rs547;
	cvt.f32.f16 	%f902, %rs548;
	cvt.f32.f16 	%f903, %rs549;
	cvt.f32.f16 	%f904, %rs550;
	.loc	1 143 18
	mov.b32 	{%rs551, %rs552}, %r2236;
	cvt.f32.f16 	%f905, %rs552;
	cvt.f32.f16 	%f906, %rs551;
	.loc	1 153 12
	mov.b32 	{%rs553, %rs554}, %r2232;
	cvt.f32.f16 	%f907, %rs554;
	cvt.f32.f16 	%f908, %rs553;
	.loc	1 143 54
	mov.b32 	%r1569, %f901;
	mov.b32 	%r1570, %f903;
	// begin inline asm
	div.full.f32 %r1568, %r1569, %r1570;
	// end inline asm
	mov.b32 	%f909, %r1568;
	mov.b32 	%r1572, %f902;
	mov.b32 	%r1573, %f904;
	// begin inline asm
	div.full.f32 %r1571, %r1572, %r1573;
	// end inline asm
	mov.b32 	%f910, %r1571;
	.loc	1 143 18
	mul.f32 	%f911, %f909, %f906;
	mul.f32 	%f912, %f910, %f905;
	.loc	1 144 54
	max.f32 	%f913, %f912, 0fBF800000;
	max.f32 	%f914, %f911, 0fBF800000;
	min.f32 	%f915, %f914, 0f3F800000;
	min.f32 	%f916, %f913, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f917, %f916, 0f3F800000;
	add.f32 	%f918, %f915, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f919, %f918, %f908;
	mul.f32 	%f920, %f917, %f907;
$L__tmp111:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs555, %f920;
	cvt.rn.f16.f32 	%rs556, %f919;
	mov.b32 	%r2238, {%rs556, %rs555};
	.loc	1 111 23
	add.f16x2 	%r2239, %r2454, %r1968;
$L__tmp112:
	.loc	1 152 33
	mul.f16x2 	%r2240, %r2239, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2241, %r2239, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2242, %r2239, %r2241;
	.loc	1 153 67
	fma.rn.f16x2 	%r2243, %r2239, %r2242, %r2239;
	.loc	1 153 63
	mul.f16x2 	%r2244, %r2243, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2245, %r2244, %r2244;
	mov.b32 	{%rs557, %rs558}, %r2245;
	.loc	1 143 45
	add.f16 	%rs559, %rs557, %rs5;
	add.f16 	%rs560, %rs558, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs561, %rs557, %rs8, %rs5;
	fma.rn.f16 	%rs562, %rs558, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f921, %rs559;
	cvt.f32.f16 	%f922, %rs560;
	cvt.f32.f16 	%f923, %rs561;
	cvt.f32.f16 	%f924, %rs562;
	.loc	1 143 18
	mov.b32 	{%rs563, %rs564}, %r2244;
	cvt.f32.f16 	%f925, %rs564;
	cvt.f32.f16 	%f926, %rs563;
	.loc	1 153 12
	mov.b32 	{%rs565, %rs566}, %r2240;
	cvt.f32.f16 	%f927, %rs566;
	cvt.f32.f16 	%f928, %rs565;
	.loc	1 143 54
	mov.b32 	%r1575, %f921;
	mov.b32 	%r1576, %f923;
	// begin inline asm
	div.full.f32 %r1574, %r1575, %r1576;
	// end inline asm
	mov.b32 	%f929, %r1574;
	mov.b32 	%r1578, %f922;
	mov.b32 	%r1579, %f924;
	// begin inline asm
	div.full.f32 %r1577, %r1578, %r1579;
	// end inline asm
	mov.b32 	%f930, %r1577;
	.loc	1 143 18
	mul.f32 	%f931, %f929, %f926;
	mul.f32 	%f932, %f930, %f925;
	.loc	1 144 54
	max.f32 	%f933, %f932, 0fBF800000;
	max.f32 	%f934, %f931, 0fBF800000;
	min.f32 	%f935, %f934, 0f3F800000;
	min.f32 	%f936, %f933, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f937, %f936, 0f3F800000;
	add.f32 	%f938, %f935, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f939, %f938, %f928;
	mul.f32 	%f940, %f937, %f927;
$L__tmp113:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs567, %f940;
	cvt.rn.f16.f32 	%rs568, %f939;
	mov.b32 	%r2246, {%rs568, %rs567};
	.loc	1 111 23
	add.f16x2 	%r2247, %r2453, %r1968;
$L__tmp114:
	.loc	1 152 33
	mul.f16x2 	%r2248, %r2247, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2249, %r2247, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2250, %r2247, %r2249;
	.loc	1 153 67
	fma.rn.f16x2 	%r2251, %r2247, %r2250, %r2247;
	.loc	1 153 63
	mul.f16x2 	%r2252, %r2251, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2253, %r2252, %r2252;
	mov.b32 	{%rs569, %rs570}, %r2253;
	.loc	1 143 45
	add.f16 	%rs571, %rs569, %rs5;
	add.f16 	%rs572, %rs570, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs573, %rs569, %rs8, %rs5;
	fma.rn.f16 	%rs574, %rs570, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f941, %rs571;
	cvt.f32.f16 	%f942, %rs572;
	cvt.f32.f16 	%f943, %rs573;
	cvt.f32.f16 	%f944, %rs574;
	.loc	1 143 18
	mov.b32 	{%rs575, %rs576}, %r2252;
	cvt.f32.f16 	%f945, %rs576;
	cvt.f32.f16 	%f946, %rs575;
	.loc	1 153 12
	mov.b32 	{%rs577, %rs578}, %r2248;
	cvt.f32.f16 	%f947, %rs578;
	cvt.f32.f16 	%f948, %rs577;
	.loc	1 143 54
	mov.b32 	%r1581, %f941;
	mov.b32 	%r1582, %f943;
	// begin inline asm
	div.full.f32 %r1580, %r1581, %r1582;
	// end inline asm
	mov.b32 	%f949, %r1580;
	mov.b32 	%r1584, %f942;
	mov.b32 	%r1585, %f944;
	// begin inline asm
	div.full.f32 %r1583, %r1584, %r1585;
	// end inline asm
	mov.b32 	%f950, %r1583;
	.loc	1 143 18
	mul.f32 	%f951, %f949, %f946;
	mul.f32 	%f952, %f950, %f945;
	.loc	1 144 54
	max.f32 	%f953, %f952, 0fBF800000;
	max.f32 	%f954, %f951, 0fBF800000;
	min.f32 	%f955, %f954, 0f3F800000;
	min.f32 	%f956, %f953, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f957, %f956, 0f3F800000;
	add.f32 	%f958, %f955, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f959, %f958, %f948;
	mul.f32 	%f960, %f957, %f947;
$L__tmp115:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs579, %f960;
	cvt.rn.f16.f32 	%rs580, %f959;
	mov.b32 	%r2254, {%rs580, %rs579};
	.loc	1 111 23
	add.f16x2 	%r2255, %r2452, %r1860;
$L__tmp116:
	.loc	1 152 33
	mul.f16x2 	%r2256, %r2255, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2257, %r2255, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2258, %r2255, %r2257;
	.loc	1 153 67
	fma.rn.f16x2 	%r2259, %r2255, %r2258, %r2255;
	.loc	1 153 63
	mul.f16x2 	%r2260, %r2259, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2261, %r2260, %r2260;
	mov.b32 	{%rs581, %rs582}, %r2261;
	.loc	1 143 45
	add.f16 	%rs583, %rs581, %rs5;
	add.f16 	%rs584, %rs582, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs585, %rs581, %rs8, %rs5;
	fma.rn.f16 	%rs586, %rs582, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f961, %rs583;
	cvt.f32.f16 	%f962, %rs584;
	cvt.f32.f16 	%f963, %rs585;
	cvt.f32.f16 	%f964, %rs586;
	.loc	1 143 18
	mov.b32 	{%rs587, %rs588}, %r2260;
	cvt.f32.f16 	%f965, %rs588;
	cvt.f32.f16 	%f966, %rs587;
	.loc	1 153 12
	mov.b32 	{%rs589, %rs590}, %r2256;
	cvt.f32.f16 	%f967, %rs590;
	cvt.f32.f16 	%f968, %rs589;
	.loc	1 143 54
	mov.b32 	%r1587, %f961;
	mov.b32 	%r1588, %f963;
	// begin inline asm
	div.full.f32 %r1586, %r1587, %r1588;
	// end inline asm
	mov.b32 	%f969, %r1586;
	mov.b32 	%r1590, %f962;
	mov.b32 	%r1591, %f964;
	// begin inline asm
	div.full.f32 %r1589, %r1590, %r1591;
	// end inline asm
	mov.b32 	%f970, %r1589;
	.loc	1 143 18
	mul.f32 	%f971, %f969, %f966;
	mul.f32 	%f972, %f970, %f965;
	.loc	1 144 54
	max.f32 	%f973, %f972, 0fBF800000;
	max.f32 	%f974, %f971, 0fBF800000;
	min.f32 	%f975, %f974, 0f3F800000;
	min.f32 	%f976, %f973, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f977, %f976, 0f3F800000;
	add.f32 	%f978, %f975, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f979, %f978, %f968;
	mul.f32 	%f980, %f977, %f967;
$L__tmp117:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs591, %f980;
	cvt.rn.f16.f32 	%rs592, %f979;
	mov.b32 	%r2262, {%rs592, %rs591};
	.loc	1 111 23
	add.f16x2 	%r2263, %r2451, %r1860;
$L__tmp118:
	.loc	1 152 33
	mul.f16x2 	%r2264, %r2263, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2265, %r2263, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2266, %r2263, %r2265;
	.loc	1 153 67
	fma.rn.f16x2 	%r2267, %r2263, %r2266, %r2263;
	.loc	1 153 63
	mul.f16x2 	%r2268, %r2267, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2269, %r2268, %r2268;
	mov.b32 	{%rs593, %rs594}, %r2269;
	.loc	1 143 45
	add.f16 	%rs595, %rs593, %rs5;
	add.f16 	%rs596, %rs594, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs597, %rs593, %rs8, %rs5;
	fma.rn.f16 	%rs598, %rs594, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f981, %rs595;
	cvt.f32.f16 	%f982, %rs596;
	cvt.f32.f16 	%f983, %rs597;
	cvt.f32.f16 	%f984, %rs598;
	.loc	1 143 18
	mov.b32 	{%rs599, %rs600}, %r2268;
	cvt.f32.f16 	%f985, %rs600;
	cvt.f32.f16 	%f986, %rs599;
	.loc	1 153 12
	mov.b32 	{%rs601, %rs602}, %r2264;
	cvt.f32.f16 	%f987, %rs602;
	cvt.f32.f16 	%f988, %rs601;
	.loc	1 143 54
	mov.b32 	%r1593, %f981;
	mov.b32 	%r1594, %f983;
	// begin inline asm
	div.full.f32 %r1592, %r1593, %r1594;
	// end inline asm
	mov.b32 	%f989, %r1592;
	mov.b32 	%r1596, %f982;
	mov.b32 	%r1597, %f984;
	// begin inline asm
	div.full.f32 %r1595, %r1596, %r1597;
	// end inline asm
	mov.b32 	%f990, %r1595;
	.loc	1 143 18
	mul.f32 	%f991, %f989, %f986;
	mul.f32 	%f992, %f990, %f985;
	.loc	1 144 54
	max.f32 	%f993, %f992, 0fBF800000;
	max.f32 	%f994, %f991, 0fBF800000;
	min.f32 	%f995, %f994, 0f3F800000;
	min.f32 	%f996, %f993, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f997, %f996, 0f3F800000;
	add.f32 	%f998, %f995, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f999, %f998, %f988;
	mul.f32 	%f1000, %f997, %f987;
$L__tmp119:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs603, %f1000;
	cvt.rn.f16.f32 	%rs604, %f999;
	mov.b32 	%r2270, {%rs604, %rs603};
	.loc	1 111 23
	add.f16x2 	%r2271, %r2450, %r1878;
$L__tmp120:
	.loc	1 152 33
	mul.f16x2 	%r2272, %r2271, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2273, %r2271, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2274, %r2271, %r2273;
	.loc	1 153 67
	fma.rn.f16x2 	%r2275, %r2271, %r2274, %r2271;
	.loc	1 153 63
	mul.f16x2 	%r2276, %r2275, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2277, %r2276, %r2276;
	mov.b32 	{%rs605, %rs606}, %r2277;
	.loc	1 143 45
	add.f16 	%rs607, %rs605, %rs5;
	add.f16 	%rs608, %rs606, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs609, %rs605, %rs8, %rs5;
	fma.rn.f16 	%rs610, %rs606, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1001, %rs607;
	cvt.f32.f16 	%f1002, %rs608;
	cvt.f32.f16 	%f1003, %rs609;
	cvt.f32.f16 	%f1004, %rs610;
	.loc	1 143 18
	mov.b32 	{%rs611, %rs612}, %r2276;
	cvt.f32.f16 	%f1005, %rs612;
	cvt.f32.f16 	%f1006, %rs611;
	.loc	1 153 12
	mov.b32 	{%rs613, %rs614}, %r2272;
	cvt.f32.f16 	%f1007, %rs614;
	cvt.f32.f16 	%f1008, %rs613;
	.loc	1 143 54
	mov.b32 	%r1599, %f1001;
	mov.b32 	%r1600, %f1003;
	// begin inline asm
	div.full.f32 %r1598, %r1599, %r1600;
	// end inline asm
	mov.b32 	%f1009, %r1598;
	mov.b32 	%r1602, %f1002;
	mov.b32 	%r1603, %f1004;
	// begin inline asm
	div.full.f32 %r1601, %r1602, %r1603;
	// end inline asm
	mov.b32 	%f1010, %r1601;
	.loc	1 143 18
	mul.f32 	%f1011, %f1009, %f1006;
	mul.f32 	%f1012, %f1010, %f1005;
	.loc	1 144 54
	max.f32 	%f1013, %f1012, 0fBF800000;
	max.f32 	%f1014, %f1011, 0fBF800000;
	min.f32 	%f1015, %f1014, 0f3F800000;
	min.f32 	%f1016, %f1013, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1017, %f1016, 0f3F800000;
	add.f32 	%f1018, %f1015, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1019, %f1018, %f1008;
	mul.f32 	%f1020, %f1017, %f1007;
$L__tmp121:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs615, %f1020;
	cvt.rn.f16.f32 	%rs616, %f1019;
	mov.b32 	%r2278, {%rs616, %rs615};
	.loc	1 111 23
	add.f16x2 	%r2279, %r2449, %r1878;
$L__tmp122:
	.loc	1 152 33
	mul.f16x2 	%r2280, %r2279, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2281, %r2279, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2282, %r2279, %r2281;
	.loc	1 153 67
	fma.rn.f16x2 	%r2283, %r2279, %r2282, %r2279;
	.loc	1 153 63
	mul.f16x2 	%r2284, %r2283, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2285, %r2284, %r2284;
	mov.b32 	{%rs617, %rs618}, %r2285;
	.loc	1 143 45
	add.f16 	%rs619, %rs617, %rs5;
	add.f16 	%rs620, %rs618, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs621, %rs617, %rs8, %rs5;
	fma.rn.f16 	%rs622, %rs618, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1021, %rs619;
	cvt.f32.f16 	%f1022, %rs620;
	cvt.f32.f16 	%f1023, %rs621;
	cvt.f32.f16 	%f1024, %rs622;
	.loc	1 143 18
	mov.b32 	{%rs623, %rs624}, %r2284;
	cvt.f32.f16 	%f1025, %rs624;
	cvt.f32.f16 	%f1026, %rs623;
	.loc	1 153 12
	mov.b32 	{%rs625, %rs626}, %r2280;
	cvt.f32.f16 	%f1027, %rs626;
	cvt.f32.f16 	%f1028, %rs625;
	.loc	1 143 54
	mov.b32 	%r1605, %f1021;
	mov.b32 	%r1606, %f1023;
	// begin inline asm
	div.full.f32 %r1604, %r1605, %r1606;
	// end inline asm
	mov.b32 	%f1029, %r1604;
	mov.b32 	%r1608, %f1022;
	mov.b32 	%r1609, %f1024;
	// begin inline asm
	div.full.f32 %r1607, %r1608, %r1609;
	// end inline asm
	mov.b32 	%f1030, %r1607;
	.loc	1 143 18
	mul.f32 	%f1031, %f1029, %f1026;
	mul.f32 	%f1032, %f1030, %f1025;
	.loc	1 144 54
	max.f32 	%f1033, %f1032, 0fBF800000;
	max.f32 	%f1034, %f1031, 0fBF800000;
	min.f32 	%f1035, %f1034, 0f3F800000;
	min.f32 	%f1036, %f1033, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1037, %f1036, 0f3F800000;
	add.f32 	%f1038, %f1035, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1039, %f1038, %f1028;
	mul.f32 	%f1040, %f1037, %f1027;
$L__tmp123:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs627, %f1040;
	cvt.rn.f16.f32 	%rs628, %f1039;
	mov.b32 	%r2286, {%rs628, %rs627};
	.loc	1 111 23
	add.f16x2 	%r2287, %r2448, %r1893;
$L__tmp124:
	.loc	1 152 33
	mul.f16x2 	%r2288, %r2287, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2289, %r2287, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2290, %r2287, %r2289;
	.loc	1 153 67
	fma.rn.f16x2 	%r2291, %r2287, %r2290, %r2287;
	.loc	1 153 63
	mul.f16x2 	%r2292, %r2291, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2293, %r2292, %r2292;
	mov.b32 	{%rs629, %rs630}, %r2293;
	.loc	1 143 45
	add.f16 	%rs631, %rs629, %rs5;
	add.f16 	%rs632, %rs630, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs633, %rs629, %rs8, %rs5;
	fma.rn.f16 	%rs634, %rs630, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1041, %rs631;
	cvt.f32.f16 	%f1042, %rs632;
	cvt.f32.f16 	%f1043, %rs633;
	cvt.f32.f16 	%f1044, %rs634;
	.loc	1 143 18
	mov.b32 	{%rs635, %rs636}, %r2292;
	cvt.f32.f16 	%f1045, %rs636;
	cvt.f32.f16 	%f1046, %rs635;
	.loc	1 153 12
	mov.b32 	{%rs637, %rs638}, %r2288;
	cvt.f32.f16 	%f1047, %rs638;
	cvt.f32.f16 	%f1048, %rs637;
	.loc	1 143 54
	mov.b32 	%r1611, %f1041;
	mov.b32 	%r1612, %f1043;
	// begin inline asm
	div.full.f32 %r1610, %r1611, %r1612;
	// end inline asm
	mov.b32 	%f1049, %r1610;
	mov.b32 	%r1614, %f1042;
	mov.b32 	%r1615, %f1044;
	// begin inline asm
	div.full.f32 %r1613, %r1614, %r1615;
	// end inline asm
	mov.b32 	%f1050, %r1613;
	.loc	1 143 18
	mul.f32 	%f1051, %f1049, %f1046;
	mul.f32 	%f1052, %f1050, %f1045;
	.loc	1 144 54
	max.f32 	%f1053, %f1052, 0fBF800000;
	max.f32 	%f1054, %f1051, 0fBF800000;
	min.f32 	%f1055, %f1054, 0f3F800000;
	min.f32 	%f1056, %f1053, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1057, %f1056, 0f3F800000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1059, %f1058, %f1048;
	mul.f32 	%f1060, %f1057, %f1047;
$L__tmp125:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs639, %f1060;
	cvt.rn.f16.f32 	%rs640, %f1059;
	mov.b32 	%r2294, {%rs640, %rs639};
	.loc	1 111 23
	add.f16x2 	%r2295, %r2447, %r1893;
$L__tmp126:
	.loc	1 152 33
	mul.f16x2 	%r2296, %r2295, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2297, %r2295, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2298, %r2295, %r2297;
	.loc	1 153 67
	fma.rn.f16x2 	%r2299, %r2295, %r2298, %r2295;
	.loc	1 153 63
	mul.f16x2 	%r2300, %r2299, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2301, %r2300, %r2300;
	mov.b32 	{%rs641, %rs642}, %r2301;
	.loc	1 143 45
	add.f16 	%rs643, %rs641, %rs5;
	add.f16 	%rs644, %rs642, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs645, %rs641, %rs8, %rs5;
	fma.rn.f16 	%rs646, %rs642, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1061, %rs643;
	cvt.f32.f16 	%f1062, %rs644;
	cvt.f32.f16 	%f1063, %rs645;
	cvt.f32.f16 	%f1064, %rs646;
	.loc	1 143 18
	mov.b32 	{%rs647, %rs648}, %r2300;
	cvt.f32.f16 	%f1065, %rs648;
	cvt.f32.f16 	%f1066, %rs647;
	.loc	1 153 12
	mov.b32 	{%rs649, %rs650}, %r2296;
	cvt.f32.f16 	%f1067, %rs650;
	cvt.f32.f16 	%f1068, %rs649;
	.loc	1 143 54
	mov.b32 	%r1617, %f1061;
	mov.b32 	%r1618, %f1063;
	// begin inline asm
	div.full.f32 %r1616, %r1617, %r1618;
	// end inline asm
	mov.b32 	%f1069, %r1616;
	mov.b32 	%r1620, %f1062;
	mov.b32 	%r1621, %f1064;
	// begin inline asm
	div.full.f32 %r1619, %r1620, %r1621;
	// end inline asm
	mov.b32 	%f1070, %r1619;
	.loc	1 143 18
	mul.f32 	%f1071, %f1069, %f1066;
	mul.f32 	%f1072, %f1070, %f1065;
	.loc	1 144 54
	max.f32 	%f1073, %f1072, 0fBF800000;
	max.f32 	%f1074, %f1071, 0fBF800000;
	min.f32 	%f1075, %f1074, 0f3F800000;
	min.f32 	%f1076, %f1073, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1077, %f1076, 0f3F800000;
	add.f32 	%f1078, %f1075, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1079, %f1078, %f1068;
	mul.f32 	%f1080, %f1077, %f1067;
$L__tmp127:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs651, %f1080;
	cvt.rn.f16.f32 	%rs652, %f1079;
	mov.b32 	%r2302, {%rs652, %rs651};
	.loc	1 111 23
	add.f16x2 	%r2303, %r2446, %r1908;
$L__tmp128:
	.loc	1 152 33
	mul.f16x2 	%r2304, %r2303, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2305, %r2303, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2306, %r2303, %r2305;
	.loc	1 153 67
	fma.rn.f16x2 	%r2307, %r2303, %r2306, %r2303;
	.loc	1 153 63
	mul.f16x2 	%r2308, %r2307, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2309, %r2308, %r2308;
	mov.b32 	{%rs653, %rs654}, %r2309;
	.loc	1 143 45
	add.f16 	%rs655, %rs653, %rs5;
	add.f16 	%rs656, %rs654, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs657, %rs653, %rs8, %rs5;
	fma.rn.f16 	%rs658, %rs654, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1081, %rs655;
	cvt.f32.f16 	%f1082, %rs656;
	cvt.f32.f16 	%f1083, %rs657;
	cvt.f32.f16 	%f1084, %rs658;
	.loc	1 143 18
	mov.b32 	{%rs659, %rs660}, %r2308;
	cvt.f32.f16 	%f1085, %rs660;
	cvt.f32.f16 	%f1086, %rs659;
	.loc	1 153 12
	mov.b32 	{%rs661, %rs662}, %r2304;
	cvt.f32.f16 	%f1087, %rs662;
	cvt.f32.f16 	%f1088, %rs661;
	.loc	1 143 54
	mov.b32 	%r1623, %f1081;
	mov.b32 	%r1624, %f1083;
	// begin inline asm
	div.full.f32 %r1622, %r1623, %r1624;
	// end inline asm
	mov.b32 	%f1089, %r1622;
	mov.b32 	%r1626, %f1082;
	mov.b32 	%r1627, %f1084;
	// begin inline asm
	div.full.f32 %r1625, %r1626, %r1627;
	// end inline asm
	mov.b32 	%f1090, %r1625;
	.loc	1 143 18
	mul.f32 	%f1091, %f1089, %f1086;
	mul.f32 	%f1092, %f1090, %f1085;
	.loc	1 144 54
	max.f32 	%f1093, %f1092, 0fBF800000;
	max.f32 	%f1094, %f1091, 0fBF800000;
	min.f32 	%f1095, %f1094, 0f3F800000;
	min.f32 	%f1096, %f1093, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1097, %f1096, 0f3F800000;
	add.f32 	%f1098, %f1095, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1099, %f1098, %f1088;
	mul.f32 	%f1100, %f1097, %f1087;
$L__tmp129:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs663, %f1100;
	cvt.rn.f16.f32 	%rs664, %f1099;
	mov.b32 	%r2310, {%rs664, %rs663};
	.loc	1 111 23
	add.f16x2 	%r2311, %r2445, %r1908;
$L__tmp130:
	.loc	1 152 33
	mul.f16x2 	%r2312, %r2311, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2313, %r2311, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2314, %r2311, %r2313;
	.loc	1 153 67
	fma.rn.f16x2 	%r2315, %r2311, %r2314, %r2311;
	.loc	1 153 63
	mul.f16x2 	%r2316, %r2315, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2317, %r2316, %r2316;
	mov.b32 	{%rs665, %rs666}, %r2317;
	.loc	1 143 45
	add.f16 	%rs667, %rs665, %rs5;
	add.f16 	%rs668, %rs666, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs669, %rs665, %rs8, %rs5;
	fma.rn.f16 	%rs670, %rs666, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1101, %rs667;
	cvt.f32.f16 	%f1102, %rs668;
	cvt.f32.f16 	%f1103, %rs669;
	cvt.f32.f16 	%f1104, %rs670;
	.loc	1 143 18
	mov.b32 	{%rs671, %rs672}, %r2316;
	cvt.f32.f16 	%f1105, %rs672;
	cvt.f32.f16 	%f1106, %rs671;
	.loc	1 153 12
	mov.b32 	{%rs673, %rs674}, %r2312;
	cvt.f32.f16 	%f1107, %rs674;
	cvt.f32.f16 	%f1108, %rs673;
	.loc	1 143 54
	mov.b32 	%r1629, %f1101;
	mov.b32 	%r1630, %f1103;
	// begin inline asm
	div.full.f32 %r1628, %r1629, %r1630;
	// end inline asm
	mov.b32 	%f1109, %r1628;
	mov.b32 	%r1632, %f1102;
	mov.b32 	%r1633, %f1104;
	// begin inline asm
	div.full.f32 %r1631, %r1632, %r1633;
	// end inline asm
	mov.b32 	%f1110, %r1631;
	.loc	1 143 18
	mul.f32 	%f1111, %f1109, %f1106;
	mul.f32 	%f1112, %f1110, %f1105;
	.loc	1 144 54
	max.f32 	%f1113, %f1112, 0fBF800000;
	max.f32 	%f1114, %f1111, 0fBF800000;
	min.f32 	%f1115, %f1114, 0f3F800000;
	min.f32 	%f1116, %f1113, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1117, %f1116, 0f3F800000;
	add.f32 	%f1118, %f1115, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1119, %f1118, %f1108;
	mul.f32 	%f1120, %f1117, %f1107;
$L__tmp131:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs675, %f1120;
	cvt.rn.f16.f32 	%rs676, %f1119;
	mov.b32 	%r2318, {%rs676, %rs675};
	.loc	1 111 23
	add.f16x2 	%r2319, %r2444, %r1923;
$L__tmp132:
	.loc	1 152 33
	mul.f16x2 	%r2320, %r2319, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2321, %r2319, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2322, %r2319, %r2321;
	.loc	1 153 67
	fma.rn.f16x2 	%r2323, %r2319, %r2322, %r2319;
	.loc	1 153 63
	mul.f16x2 	%r2324, %r2323, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2325, %r2324, %r2324;
	mov.b32 	{%rs677, %rs678}, %r2325;
	.loc	1 143 45
	add.f16 	%rs679, %rs677, %rs5;
	add.f16 	%rs680, %rs678, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs681, %rs677, %rs8, %rs5;
	fma.rn.f16 	%rs682, %rs678, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1121, %rs679;
	cvt.f32.f16 	%f1122, %rs680;
	cvt.f32.f16 	%f1123, %rs681;
	cvt.f32.f16 	%f1124, %rs682;
	.loc	1 143 18
	mov.b32 	{%rs683, %rs684}, %r2324;
	cvt.f32.f16 	%f1125, %rs684;
	cvt.f32.f16 	%f1126, %rs683;
	.loc	1 153 12
	mov.b32 	{%rs685, %rs686}, %r2320;
	cvt.f32.f16 	%f1127, %rs686;
	cvt.f32.f16 	%f1128, %rs685;
	.loc	1 143 54
	mov.b32 	%r1635, %f1121;
	mov.b32 	%r1636, %f1123;
	// begin inline asm
	div.full.f32 %r1634, %r1635, %r1636;
	// end inline asm
	mov.b32 	%f1129, %r1634;
	mov.b32 	%r1638, %f1122;
	mov.b32 	%r1639, %f1124;
	// begin inline asm
	div.full.f32 %r1637, %r1638, %r1639;
	// end inline asm
	mov.b32 	%f1130, %r1637;
	.loc	1 143 18
	mul.f32 	%f1131, %f1129, %f1126;
	mul.f32 	%f1132, %f1130, %f1125;
	.loc	1 144 54
	max.f32 	%f1133, %f1132, 0fBF800000;
	max.f32 	%f1134, %f1131, 0fBF800000;
	min.f32 	%f1135, %f1134, 0f3F800000;
	min.f32 	%f1136, %f1133, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1137, %f1136, 0f3F800000;
	add.f32 	%f1138, %f1135, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1139, %f1138, %f1128;
	mul.f32 	%f1140, %f1137, %f1127;
$L__tmp133:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs687, %f1140;
	cvt.rn.f16.f32 	%rs688, %f1139;
	mov.b32 	%r2326, {%rs688, %rs687};
	.loc	1 111 23
	add.f16x2 	%r2327, %r2443, %r1923;
$L__tmp134:
	.loc	1 152 33
	mul.f16x2 	%r2328, %r2327, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2329, %r2327, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2330, %r2327, %r2329;
	.loc	1 153 67
	fma.rn.f16x2 	%r2331, %r2327, %r2330, %r2327;
	.loc	1 153 63
	mul.f16x2 	%r2332, %r2331, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2333, %r2332, %r2332;
	mov.b32 	{%rs689, %rs690}, %r2333;
	.loc	1 143 45
	add.f16 	%rs691, %rs689, %rs5;
	add.f16 	%rs692, %rs690, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs693, %rs689, %rs8, %rs5;
	fma.rn.f16 	%rs694, %rs690, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1141, %rs691;
	cvt.f32.f16 	%f1142, %rs692;
	cvt.f32.f16 	%f1143, %rs693;
	cvt.f32.f16 	%f1144, %rs694;
	.loc	1 143 18
	mov.b32 	{%rs695, %rs696}, %r2332;
	cvt.f32.f16 	%f1145, %rs696;
	cvt.f32.f16 	%f1146, %rs695;
	.loc	1 153 12
	mov.b32 	{%rs697, %rs698}, %r2328;
	cvt.f32.f16 	%f1147, %rs698;
	cvt.f32.f16 	%f1148, %rs697;
	.loc	1 143 54
	mov.b32 	%r1641, %f1141;
	mov.b32 	%r1642, %f1143;
	// begin inline asm
	div.full.f32 %r1640, %r1641, %r1642;
	// end inline asm
	mov.b32 	%f1149, %r1640;
	mov.b32 	%r1644, %f1142;
	mov.b32 	%r1645, %f1144;
	// begin inline asm
	div.full.f32 %r1643, %r1644, %r1645;
	// end inline asm
	mov.b32 	%f1150, %r1643;
	.loc	1 143 18
	mul.f32 	%f1151, %f1149, %f1146;
	mul.f32 	%f1152, %f1150, %f1145;
	.loc	1 144 54
	max.f32 	%f1153, %f1152, 0fBF800000;
	max.f32 	%f1154, %f1151, 0fBF800000;
	min.f32 	%f1155, %f1154, 0f3F800000;
	min.f32 	%f1156, %f1153, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1157, %f1156, 0f3F800000;
	add.f32 	%f1158, %f1155, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1159, %f1158, %f1148;
	mul.f32 	%f1160, %f1157, %f1147;
$L__tmp135:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs699, %f1160;
	cvt.rn.f16.f32 	%rs700, %f1159;
	mov.b32 	%r2334, {%rs700, %rs699};
	.loc	1 111 23
	add.f16x2 	%r2335, %r2442, %r1938;
$L__tmp136:
	.loc	1 152 33
	mul.f16x2 	%r2336, %r2335, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2337, %r2335, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2338, %r2335, %r2337;
	.loc	1 153 67
	fma.rn.f16x2 	%r2339, %r2335, %r2338, %r2335;
	.loc	1 153 63
	mul.f16x2 	%r2340, %r2339, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2341, %r2340, %r2340;
	mov.b32 	{%rs701, %rs702}, %r2341;
	.loc	1 143 45
	add.f16 	%rs703, %rs701, %rs5;
	add.f16 	%rs704, %rs702, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs705, %rs701, %rs8, %rs5;
	fma.rn.f16 	%rs706, %rs702, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1161, %rs703;
	cvt.f32.f16 	%f1162, %rs704;
	cvt.f32.f16 	%f1163, %rs705;
	cvt.f32.f16 	%f1164, %rs706;
	.loc	1 143 18
	mov.b32 	{%rs707, %rs708}, %r2340;
	cvt.f32.f16 	%f1165, %rs708;
	cvt.f32.f16 	%f1166, %rs707;
	.loc	1 153 12
	mov.b32 	{%rs709, %rs710}, %r2336;
	cvt.f32.f16 	%f1167, %rs710;
	cvt.f32.f16 	%f1168, %rs709;
	.loc	1 143 54
	mov.b32 	%r1647, %f1161;
	mov.b32 	%r1648, %f1163;
	// begin inline asm
	div.full.f32 %r1646, %r1647, %r1648;
	// end inline asm
	mov.b32 	%f1169, %r1646;
	mov.b32 	%r1650, %f1162;
	mov.b32 	%r1651, %f1164;
	// begin inline asm
	div.full.f32 %r1649, %r1650, %r1651;
	// end inline asm
	mov.b32 	%f1170, %r1649;
	.loc	1 143 18
	mul.f32 	%f1171, %f1169, %f1166;
	mul.f32 	%f1172, %f1170, %f1165;
	.loc	1 144 54
	max.f32 	%f1173, %f1172, 0fBF800000;
	max.f32 	%f1174, %f1171, 0fBF800000;
	min.f32 	%f1175, %f1174, 0f3F800000;
	min.f32 	%f1176, %f1173, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1177, %f1176, 0f3F800000;
	add.f32 	%f1178, %f1175, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1179, %f1178, %f1168;
	mul.f32 	%f1180, %f1177, %f1167;
$L__tmp137:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs711, %f1180;
	cvt.rn.f16.f32 	%rs712, %f1179;
	mov.b32 	%r2342, {%rs712, %rs711};
	.loc	1 111 23
	add.f16x2 	%r2343, %r2441, %r1938;
$L__tmp138:
	.loc	1 152 33
	mul.f16x2 	%r2344, %r2343, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2345, %r2343, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2346, %r2343, %r2345;
	.loc	1 153 67
	fma.rn.f16x2 	%r2347, %r2343, %r2346, %r2343;
	.loc	1 153 63
	mul.f16x2 	%r2348, %r2347, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2349, %r2348, %r2348;
	mov.b32 	{%rs713, %rs714}, %r2349;
	.loc	1 143 45
	add.f16 	%rs715, %rs713, %rs5;
	add.f16 	%rs716, %rs714, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs717, %rs713, %rs8, %rs5;
	fma.rn.f16 	%rs718, %rs714, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1181, %rs715;
	cvt.f32.f16 	%f1182, %rs716;
	cvt.f32.f16 	%f1183, %rs717;
	cvt.f32.f16 	%f1184, %rs718;
	.loc	1 143 18
	mov.b32 	{%rs719, %rs720}, %r2348;
	cvt.f32.f16 	%f1185, %rs720;
	cvt.f32.f16 	%f1186, %rs719;
	.loc	1 153 12
	mov.b32 	{%rs721, %rs722}, %r2344;
	cvt.f32.f16 	%f1187, %rs722;
	cvt.f32.f16 	%f1188, %rs721;
	.loc	1 143 54
	mov.b32 	%r1653, %f1181;
	mov.b32 	%r1654, %f1183;
	// begin inline asm
	div.full.f32 %r1652, %r1653, %r1654;
	// end inline asm
	mov.b32 	%f1189, %r1652;
	mov.b32 	%r1656, %f1182;
	mov.b32 	%r1657, %f1184;
	// begin inline asm
	div.full.f32 %r1655, %r1656, %r1657;
	// end inline asm
	mov.b32 	%f1190, %r1655;
	.loc	1 143 18
	mul.f32 	%f1191, %f1189, %f1186;
	mul.f32 	%f1192, %f1190, %f1185;
	.loc	1 144 54
	max.f32 	%f1193, %f1192, 0fBF800000;
	max.f32 	%f1194, %f1191, 0fBF800000;
	min.f32 	%f1195, %f1194, 0f3F800000;
	min.f32 	%f1196, %f1193, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1197, %f1196, 0f3F800000;
	add.f32 	%f1198, %f1195, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1199, %f1198, %f1188;
	mul.f32 	%f1200, %f1197, %f1187;
$L__tmp139:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs723, %f1200;
	cvt.rn.f16.f32 	%rs724, %f1199;
	mov.b32 	%r2350, {%rs724, %rs723};
	.loc	1 111 23
	add.f16x2 	%r2351, %r2440, %r1953;
$L__tmp140:
	.loc	1 152 33
	mul.f16x2 	%r2352, %r2351, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2353, %r2351, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2354, %r2351, %r2353;
	.loc	1 153 67
	fma.rn.f16x2 	%r2355, %r2351, %r2354, %r2351;
	.loc	1 153 63
	mul.f16x2 	%r2356, %r2355, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2357, %r2356, %r2356;
	mov.b32 	{%rs725, %rs726}, %r2357;
	.loc	1 143 45
	add.f16 	%rs727, %rs725, %rs5;
	add.f16 	%rs728, %rs726, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs729, %rs725, %rs8, %rs5;
	fma.rn.f16 	%rs730, %rs726, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1201, %rs727;
	cvt.f32.f16 	%f1202, %rs728;
	cvt.f32.f16 	%f1203, %rs729;
	cvt.f32.f16 	%f1204, %rs730;
	.loc	1 143 18
	mov.b32 	{%rs731, %rs732}, %r2356;
	cvt.f32.f16 	%f1205, %rs732;
	cvt.f32.f16 	%f1206, %rs731;
	.loc	1 153 12
	mov.b32 	{%rs733, %rs734}, %r2352;
	cvt.f32.f16 	%f1207, %rs734;
	cvt.f32.f16 	%f1208, %rs733;
	.loc	1 143 54
	mov.b32 	%r1659, %f1201;
	mov.b32 	%r1660, %f1203;
	// begin inline asm
	div.full.f32 %r1658, %r1659, %r1660;
	// end inline asm
	mov.b32 	%f1209, %r1658;
	mov.b32 	%r1662, %f1202;
	mov.b32 	%r1663, %f1204;
	// begin inline asm
	div.full.f32 %r1661, %r1662, %r1663;
	// end inline asm
	mov.b32 	%f1210, %r1661;
	.loc	1 143 18
	mul.f32 	%f1211, %f1209, %f1206;
	mul.f32 	%f1212, %f1210, %f1205;
	.loc	1 144 54
	max.f32 	%f1213, %f1212, 0fBF800000;
	max.f32 	%f1214, %f1211, 0fBF800000;
	min.f32 	%f1215, %f1214, 0f3F800000;
	min.f32 	%f1216, %f1213, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1217, %f1216, 0f3F800000;
	add.f32 	%f1218, %f1215, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1219, %f1218, %f1208;
	mul.f32 	%f1220, %f1217, %f1207;
$L__tmp141:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs735, %f1220;
	cvt.rn.f16.f32 	%rs736, %f1219;
	mov.b32 	%r2358, {%rs736, %rs735};
	.loc	1 111 23
	add.f16x2 	%r2359, %r2439, %r1953;
$L__tmp142:
	.loc	1 152 33
	mul.f16x2 	%r2360, %r2359, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2361, %r2359, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2362, %r2359, %r2361;
	.loc	1 153 67
	fma.rn.f16x2 	%r2363, %r2359, %r2362, %r2359;
	.loc	1 153 63
	mul.f16x2 	%r2364, %r2363, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2365, %r2364, %r2364;
	mov.b32 	{%rs737, %rs738}, %r2365;
	.loc	1 143 45
	add.f16 	%rs739, %rs737, %rs5;
	add.f16 	%rs740, %rs738, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs741, %rs737, %rs8, %rs5;
	fma.rn.f16 	%rs742, %rs738, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1221, %rs739;
	cvt.f32.f16 	%f1222, %rs740;
	cvt.f32.f16 	%f1223, %rs741;
	cvt.f32.f16 	%f1224, %rs742;
	.loc	1 143 18
	mov.b32 	{%rs743, %rs744}, %r2364;
	cvt.f32.f16 	%f1225, %rs744;
	cvt.f32.f16 	%f1226, %rs743;
	.loc	1 153 12
	mov.b32 	{%rs745, %rs746}, %r2360;
	cvt.f32.f16 	%f1227, %rs746;
	cvt.f32.f16 	%f1228, %rs745;
	.loc	1 143 54
	mov.b32 	%r1665, %f1221;
	mov.b32 	%r1666, %f1223;
	// begin inline asm
	div.full.f32 %r1664, %r1665, %r1666;
	// end inline asm
	mov.b32 	%f1229, %r1664;
	mov.b32 	%r1668, %f1222;
	mov.b32 	%r1669, %f1224;
	// begin inline asm
	div.full.f32 %r1667, %r1668, %r1669;
	// end inline asm
	mov.b32 	%f1230, %r1667;
	.loc	1 143 18
	mul.f32 	%f1231, %f1229, %f1226;
	mul.f32 	%f1232, %f1230, %f1225;
	.loc	1 144 54
	max.f32 	%f1233, %f1232, 0fBF800000;
	max.f32 	%f1234, %f1231, 0fBF800000;
	min.f32 	%f1235, %f1234, 0f3F800000;
	min.f32 	%f1236, %f1233, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1237, %f1236, 0f3F800000;
	add.f32 	%f1238, %f1235, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1239, %f1238, %f1228;
	mul.f32 	%f1240, %f1237, %f1227;
$L__tmp143:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs747, %f1240;
	cvt.rn.f16.f32 	%rs748, %f1239;
	mov.b32 	%r2366, {%rs748, %rs747};
	.loc	1 111 23
	add.f16x2 	%r2367, %r2438, %r1968;
$L__tmp144:
	.loc	1 152 33
	mul.f16x2 	%r2368, %r2367, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2369, %r2367, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2370, %r2367, %r2369;
	.loc	1 153 67
	fma.rn.f16x2 	%r2371, %r2367, %r2370, %r2367;
	.loc	1 153 63
	mul.f16x2 	%r2372, %r2371, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2373, %r2372, %r2372;
	mov.b32 	{%rs749, %rs750}, %r2373;
	.loc	1 143 45
	add.f16 	%rs751, %rs749, %rs5;
	add.f16 	%rs752, %rs750, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs753, %rs749, %rs8, %rs5;
	fma.rn.f16 	%rs754, %rs750, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1241, %rs751;
	cvt.f32.f16 	%f1242, %rs752;
	cvt.f32.f16 	%f1243, %rs753;
	cvt.f32.f16 	%f1244, %rs754;
	.loc	1 143 18
	mov.b32 	{%rs755, %rs756}, %r2372;
	cvt.f32.f16 	%f1245, %rs756;
	cvt.f32.f16 	%f1246, %rs755;
	.loc	1 153 12
	mov.b32 	{%rs757, %rs758}, %r2368;
	cvt.f32.f16 	%f1247, %rs758;
	cvt.f32.f16 	%f1248, %rs757;
	.loc	1 143 54
	mov.b32 	%r1671, %f1241;
	mov.b32 	%r1672, %f1243;
	// begin inline asm
	div.full.f32 %r1670, %r1671, %r1672;
	// end inline asm
	mov.b32 	%f1249, %r1670;
	mov.b32 	%r1674, %f1242;
	mov.b32 	%r1675, %f1244;
	// begin inline asm
	div.full.f32 %r1673, %r1674, %r1675;
	// end inline asm
	mov.b32 	%f1250, %r1673;
	.loc	1 143 18
	mul.f32 	%f1251, %f1249, %f1246;
	mul.f32 	%f1252, %f1250, %f1245;
	.loc	1 144 54
	max.f32 	%f1253, %f1252, 0fBF800000;
	max.f32 	%f1254, %f1251, 0fBF800000;
	min.f32 	%f1255, %f1254, 0f3F800000;
	min.f32 	%f1256, %f1253, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1257, %f1256, 0f3F800000;
	add.f32 	%f1258, %f1255, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1259, %f1258, %f1248;
	mul.f32 	%f1260, %f1257, %f1247;
$L__tmp145:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs759, %f1260;
	cvt.rn.f16.f32 	%rs760, %f1259;
	mov.b32 	%r2374, {%rs760, %rs759};
	.loc	1 111 23
	add.f16x2 	%r2375, %r2437, %r1968;
$L__tmp146:
	.loc	1 152 33
	mul.f16x2 	%r2376, %r2375, %r1862;
	.loc	1 153 90
	mul.f16x2 	%r2377, %r2375, %r1864;
	.loc	1 153 94
	mul.f16x2 	%r2378, %r2375, %r2377;
	.loc	1 153 67
	fma.rn.f16x2 	%r2379, %r2375, %r2378, %r2375;
	.loc	1 153 63
	mul.f16x2 	%r2380, %r2379, %r1868;
	.loc	1 142 15
	mul.f16x2 	%r2381, %r2380, %r2380;
	mov.b32 	{%rs761, %rs762}, %r2381;
	.loc	1 143 45
	add.f16 	%rs763, %rs761, %rs5;
	add.f16 	%rs764, %rs762, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs765, %rs761, %rs8, %rs5;
	fma.rn.f16 	%rs766, %rs762, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1261, %rs763;
	cvt.f32.f16 	%f1262, %rs764;
	cvt.f32.f16 	%f1263, %rs765;
	cvt.f32.f16 	%f1264, %rs766;
	.loc	1 143 18
	mov.b32 	{%rs767, %rs768}, %r2380;
	cvt.f32.f16 	%f1265, %rs768;
	cvt.f32.f16 	%f1266, %rs767;
	.loc	1 153 12
	mov.b32 	{%rs769, %rs770}, %r2376;
	cvt.f32.f16 	%f1267, %rs770;
	cvt.f32.f16 	%f1268, %rs769;
	.loc	1 143 54
	mov.b32 	%r1677, %f1261;
	mov.b32 	%r1678, %f1263;
	// begin inline asm
	div.full.f32 %r1676, %r1677, %r1678;
	// end inline asm
	mov.b32 	%f1269, %r1676;
	mov.b32 	%r1680, %f1262;
	mov.b32 	%r1681, %f1264;
	// begin inline asm
	div.full.f32 %r1679, %r1680, %r1681;
	// end inline asm
	mov.b32 	%f1270, %r1679;
	.loc	1 143 18
	mul.f32 	%f1271, %f1269, %f1266;
	mul.f32 	%f1272, %f1270, %f1265;
	.loc	1 144 54
	max.f32 	%f1273, %f1272, 0fBF800000;
	max.f32 	%f1274, %f1271, 0fBF800000;
	min.f32 	%f1275, %f1274, 0f3F800000;
	min.f32 	%f1276, %f1273, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1277, %f1276, 0f3F800000;
	add.f32 	%f1278, %f1275, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1279, %f1278, %f1268;
	mul.f32 	%f1280, %f1277, %f1267;
$L__tmp147:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs771, %f1280;
	cvt.rn.f16.f32 	%rs772, %f1279;
	mov.b32 	%r2382, {%rs772, %rs771};
	bar.sync 	0;
	shr.u32 	%r2383, %r3, 2;
	shl.b32 	%r2384, %r22, 4;
	or.b32  	%r2385, %r2384, %r2383;
	mul.lo.s32 	%r2386, %r2385, 528;
	add.s32 	%r2387, %r1852, %r2386;
	st.shared.b32 	[%r2387], %r1976;
	st.shared.b32 	[%r2387+4224], %r1977;
	st.shared.b32 	[%r2387+64], %r1978;
	add.s32 	%r2388, %r1853, %r2386;
	st.shared.b32 	[%r2388+4224], %r1979;
	st.shared.b32 	[%r2387+128], %r1980;
	add.s32 	%r2389, %r1854, %r2386;
	st.shared.b32 	[%r2389+4224], %r1981;
	st.shared.b32 	[%r2387+192], %r1982;
	add.s32 	%r2390, %r1855, %r2386;
	st.shared.b32 	[%r2390+4224], %r1983;
	st.shared.b32 	[%r2387+256], %r1984;
	add.s32 	%r2391, %r1856, %r2386;
	st.shared.b32 	[%r2391+4224], %r1985;
	st.shared.b32 	[%r2387+320], %r1986;
	add.s32 	%r2392, %r1857, %r2386;
	st.shared.b32 	[%r2392+4224], %r1987;
	st.shared.b32 	[%r2387+384], %r1988;
	add.s32 	%r2393, %r1858, %r2386;
	st.shared.b32 	[%r2393+4224], %r1989;
	st.shared.b32 	[%r2387+448], %r1990;
	add.s32 	%r2394, %r1859, %r2386;
	st.shared.b32 	[%r2394+4224], %r1998;
	bar.sync 	0;
	shl.b32 	%r2395, %r3, 3;
	mad.lo.s32 	%r2396, %r4, 264, %r2395;
	shl.b32 	%r2397, %r2396, 1;
	add.s32 	%r2398, %r452, %r2397;
	ld.shared.v4.u32 	{%r1682, %r1683, %r1684, %r1685}, [%r2398];
	ld.shared.v4.u32 	{%r1686, %r1687, %r1688, %r1689}, [%r2398+4224];
	ld.shared.v4.u32 	{%r1690, %r1691, %r1692, %r1693}, [%r2398+8448];
	ld.shared.v4.u32 	{%r1694, %r1695, %r1696, %r1697}, [%r2398+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2387], %r2006;
	st.shared.b32 	[%r2387+4224], %r2014;
	st.shared.b32 	[%r2387+64], %r2022;
	st.shared.b32 	[%r2388+4224], %r2030;
	st.shared.b32 	[%r2387+128], %r2038;
	st.shared.b32 	[%r2389+4224], %r2046;
	st.shared.b32 	[%r2387+192], %r2054;
	st.shared.b32 	[%r2390+4224], %r2062;
	st.shared.b32 	[%r2387+256], %r2070;
	st.shared.b32 	[%r2391+4224], %r2078;
	st.shared.b32 	[%r2387+320], %r2086;
	st.shared.b32 	[%r2392+4224], %r2094;
	st.shared.b32 	[%r2387+384], %r2102;
	st.shared.b32 	[%r2393+4224], %r2110;
	st.shared.b32 	[%r2387+448], %r2118;
	st.shared.b32 	[%r2394+4224], %r2126;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1698, %r1699, %r1700, %r1701}, [%r2398];
	ld.shared.v4.u32 	{%r1702, %r1703, %r1704, %r1705}, [%r2398+4224];
	ld.shared.v4.u32 	{%r1706, %r1707, %r1708, %r1709}, [%r2398+8448];
	ld.shared.v4.u32 	{%r1710, %r1711, %r1712, %r1713}, [%r2398+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2387], %r2134;
	st.shared.b32 	[%r2387+4224], %r2142;
	st.shared.b32 	[%r2387+64], %r2150;
	st.shared.b32 	[%r2388+4224], %r2158;
	st.shared.b32 	[%r2387+128], %r2166;
	st.shared.b32 	[%r2389+4224], %r2174;
	st.shared.b32 	[%r2387+192], %r2182;
	st.shared.b32 	[%r2390+4224], %r2190;
	st.shared.b32 	[%r2387+256], %r2198;
	st.shared.b32 	[%r2391+4224], %r2206;
	st.shared.b32 	[%r2387+320], %r2214;
	st.shared.b32 	[%r2392+4224], %r2222;
	st.shared.b32 	[%r2387+384], %r2230;
	st.shared.b32 	[%r2393+4224], %r2238;
	st.shared.b32 	[%r2387+448], %r2246;
	st.shared.b32 	[%r2394+4224], %r2254;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1714, %r1715, %r1716, %r1717}, [%r2398];
	ld.shared.v4.u32 	{%r1718, %r1719, %r1720, %r1721}, [%r2398+4224];
	ld.shared.v4.u32 	{%r1722, %r1723, %r1724, %r1725}, [%r2398+8448];
	ld.shared.v4.u32 	{%r1726, %r1727, %r1728, %r1729}, [%r2398+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2387], %r2262;
	st.shared.b32 	[%r2387+4224], %r2270;
	st.shared.b32 	[%r2387+64], %r2278;
	st.shared.b32 	[%r2388+4224], %r2286;
	st.shared.b32 	[%r2387+128], %r2294;
	st.shared.b32 	[%r2389+4224], %r2302;
	st.shared.b32 	[%r2387+192], %r2310;
	st.shared.b32 	[%r2390+4224], %r2318;
	st.shared.b32 	[%r2387+256], %r2326;
	st.shared.b32 	[%r2391+4224], %r2334;
	st.shared.b32 	[%r2387+320], %r2342;
	st.shared.b32 	[%r2392+4224], %r2350;
	st.shared.b32 	[%r2387+384], %r2358;
	st.shared.b32 	[%r2393+4224], %r2366;
	st.shared.b32 	[%r2387+448], %r2374;
	st.shared.b32 	[%r2394+4224], %r2382;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1730, %r1731, %r1732, %r1733}, [%r2398];
	ld.shared.v4.u32 	{%r1734, %r1735, %r1736, %r1737}, [%r2398+4224];
	ld.shared.v4.u32 	{%r1738, %r1739, %r1740, %r1741}, [%r2398+8448];
	ld.shared.v4.u32 	{%r1742, %r1743, %r1744, %r1745}, [%r2398+12672];
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd54 + 0 ], { %r1682, %r1683, %r1684, %r1685 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd55 + 0 ], { %r1686, %r1687, %r1688, %r1689 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.v4.b32 [ %rd56 + 0 ], { %r1690, %r1691, %r1692, %r1693 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.v4.b32 [ %rd57 + 0 ], { %r1694, %r1695, %r1696, %r1697 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.v4.b32 [ %rd58 + 0 ], { %r1698, %r1699, %r1700, %r1701 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.v4.b32 [ %rd59 + 0 ], { %r1702, %r1703, %r1704, %r1705 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.v4.b32 [ %rd60 + 0 ], { %r1706, %r1707, %r1708, %r1709 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.v4.b32 [ %rd61 + 0 ], { %r1710, %r1711, %r1712, %r1713 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.v4.b32 [ %rd62 + 0 ], { %r1714, %r1715, %r1716, %r1717 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd63 + 0 ], { %r1718, %r1719, %r1720, %r1721 };
	// end inline asm
	// begin inline asm
	@%p56 st.global.v4.b32 [ %rd64 + 0 ], { %r1722, %r1723, %r1724, %r1725 };
	// end inline asm
	// begin inline asm
	@%p57 st.global.v4.b32 [ %rd65 + 0 ], { %r1726, %r1727, %r1728, %r1729 };
	// end inline asm
	// begin inline asm
	@%p58 st.global.v4.b32 [ %rd66 + 0 ], { %r1730, %r1731, %r1732, %r1733 };
	// end inline asm
	// begin inline asm
	@%p59 st.global.v4.b32 [ %rd67 + 0 ], { %r1734, %r1735, %r1736, %r1737 };
	// end inline asm
	// begin inline asm
	@%p60 st.global.v4.b32 [ %rd68 + 0 ], { %r1738, %r1739, %r1740, %r1741 };
	// end inline asm
	// begin inline asm
	@%p61 st.global.v4.b32 [ %rd69 + 0 ], { %r1742, %r1743, %r1744, %r1745 };
	// end inline asm
	.loc	1 129 21
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd70 + 0 ], { %r1682, %r1683, %r1684, %r1685 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd71 + 0 ], { %r1686, %r1687, %r1688, %r1689 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.v4.b32 [ %rd72 + 0 ], { %r1690, %r1691, %r1692, %r1693 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.v4.b32 [ %rd73 + 0 ], { %r1694, %r1695, %r1696, %r1697 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.v4.b32 [ %rd74 + 0 ], { %r1698, %r1699, %r1700, %r1701 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.v4.b32 [ %rd75 + 0 ], { %r1702, %r1703, %r1704, %r1705 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.v4.b32 [ %rd76 + 0 ], { %r1706, %r1707, %r1708, %r1709 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.v4.b32 [ %rd77 + 0 ], { %r1710, %r1711, %r1712, %r1713 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.v4.b32 [ %rd78 + 0 ], { %r1714, %r1715, %r1716, %r1717 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd79 + 0 ], { %r1718, %r1719, %r1720, %r1721 };
	// end inline asm
	// begin inline asm
	@%p56 st.global.v4.b32 [ %rd80 + 0 ], { %r1722, %r1723, %r1724, %r1725 };
	// end inline asm
	// begin inline asm
	@%p57 st.global.v4.b32 [ %rd81 + 0 ], { %r1726, %r1727, %r1728, %r1729 };
	// end inline asm
	// begin inline asm
	@%p58 st.global.v4.b32 [ %rd82 + 0 ], { %r1730, %r1731, %r1732, %r1733 };
	// end inline asm
	// begin inline asm
	@%p59 st.global.v4.b32 [ %rd83 + 0 ], { %r1734, %r1735, %r1736, %r1737 };
	// end inline asm
	// begin inline asm
	@%p60 st.global.v4.b32 [ %rd84 + 0 ], { %r1738, %r1739, %r1740, %r1741 };
	// end inline asm
	// begin inline asm
	@%p61 st.global.v4.b32 [ %rd85 + 0 ], { %r1742, %r1743, %r1744, %r1745 };
	// end inline asm
	.loc	1 129 4
	ret;
$L__tmp148:
$L__func_end0:

}
	.file	1 "/home/mike/PycharmProjects/tritontest/compile_matmul_kernel_bias_transpose_a_gelu.py"
	.file	2 "/home/mike/PycharmProjects/tritontest/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 235
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 111
.b8 109
.b8 112
.b8 105
.b8 108
.b8 101
.b8 95
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 105
.b8 107
.b8 101
.b8 47
.b8 80
.b8 121
.b8 99
.b8 104
.b8 97
.b8 114
.b8 109
.b8 80
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 116
.b8 101
.b8 115
.b8 116
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 104
.b8 4
.b32 104
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 58
.b8 27
.b8 4
.b32 104
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 59
.b8 27
.b8 4
.b32 104
.b64 $L__tmp4
.b64 $L__tmp5
.b8 1
.b8 93
.b8 33
.b8 4
.b32 104
.b64 $L__tmp6
.b64 $L__tmp147
.b8 1
.b8 114
.b8 34
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
)";

#define TRITON_MATMUL_KERNEL_26_SHARED_MEMORY_SIZE 49152
#define TRITON_MATMUL_KERNEL_26_BLOCK_SIZE_M 128
#define TRITON_MATMUL_KERNEL_26_BLOCK_SIZE_N 256
#define TRITON_MATMUL_KERNEL_26_NUM_WARPS 8
#define TRITON_MATMUL_KERNEL_26_FUNCTION_NAME "matmul_kernel_bias_transpose_a_gelu"
