/*
 * WARNING: This is an autogenerated file. DO NOT EDIT.
 * This file was generated by generate_kernels.sh which intern launches compile_matmul_kernel.py */
#pragma once

#include <string>

const std::string TRITON_MATMUL_KERNEL_14_SOURCE_PTX = R"(
//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	matmul_kernel_bias_transpose_a_transpose_b
.extern .shared .align 16 .b8 global_smem[];

.visible .entry matmul_kernel_bias_transpose_a_transpose_b(
	.param .u64 matmul_kernel_bias_transpose_a_transpose_b_param_0,
	.param .u64 matmul_kernel_bias_transpose_a_transpose_b_param_1,
	.param .u64 matmul_kernel_bias_transpose_a_transpose_b_param_2,
	.param .u64 matmul_kernel_bias_transpose_a_transpose_b_param_3,
	.param .u32 matmul_kernel_bias_transpose_a_transpose_b_param_4,
	.param .u32 matmul_kernel_bias_transpose_a_transpose_b_param_5,
	.param .u32 matmul_kernel_bias_transpose_a_transpose_b_param_6,
	.param .u32 matmul_kernel_bias_transpose_a_transpose_b_param_7,
	.param .u32 matmul_kernel_bias_transpose_a_transpose_b_param_8,
	.param .u32 matmul_kernel_bias_transpose_a_transpose_b_param_9
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<70>;
	.reg .b16 	%rs<789>;
	.reg .b32 	%r<1456>;
	.reg .b64 	%rd<104>;
	.loc	1 41 0
$L__func_begin0:
	.loc	1 41 0

	ld.param.u32 	%r143, [matmul_kernel_bias_transpose_a_transpose_b_param_9];
	ld.param.u32 	%r142, [matmul_kernel_bias_transpose_a_transpose_b_param_6];
	ld.param.u32 	%r141, [matmul_kernel_bias_transpose_a_transpose_b_param_5];
	ld.param.u32 	%r140, [matmul_kernel_bias_transpose_a_transpose_b_param_4];
	ld.param.u64 	%rd20, [matmul_kernel_bias_transpose_a_transpose_b_param_3];
	ld.param.u64 	%rd19, [matmul_kernel_bias_transpose_a_transpose_b_param_2];
	ld.param.u64 	%rd103, [matmul_kernel_bias_transpose_a_transpose_b_param_1];
	ld.param.u64 	%rd33, [matmul_kernel_bias_transpose_a_transpose_b_param_0];
$L__tmp0:
	.loc	1 57 24
	// begin inline asm
	mov.u32 %r144, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 40 22
	add.s32 	%r209, %r140, 127;
	.loc	2 40 28
	shr.s32 	%r210, %r209, 31;
	shr.u32 	%r211, %r210, 25;
	add.s32 	%r212, %r209, %r211;
	shr.s32 	%r213, %r212, 7;
$L__tmp2:
	.loc	2 40 22
	add.s32 	%r214, %r141, 255;
	.loc	2 40 28
	shr.s32 	%r215, %r214, 31;
	shr.u32 	%r216, %r215, 24;
	add.s32 	%r217, %r214, %r216;
	shr.s32 	%r218, %r217, 8;
$L__tmp3:
	.loc	1 60 38
	shl.b32 	%r220, %r218, 3;
	ld.param.u32 	%r221, [matmul_kernel_bias_transpose_a_transpose_b_param_7];
	ld.param.u32 	%r222, [matmul_kernel_bias_transpose_a_transpose_b_param_8];
	.loc	1 61 22
	div.s32 	%r223, %r144, %r220;
	.loc	1 62 29
	shl.b32 	%r224, %r223, 3;
	.loc	1 63 35
	sub.s32 	%r225, %r213, %r224;
	.loc	1 63 48
	min.s32 	%r226, %r225, 8;
	.loc	1 64 33
	rem.s32 	%r227, %r144, %r226;
	.loc	1 64 27
	add.s32 	%r228, %r224, %r227;
	mul.lo.s32 	%r229, %r223, %r220;
	sub.s32 	%r230, %r144, %r229;
	.loc	1 65 40
	div.s32 	%r231, %r230, %r226;
	.loc	1 74 23
	shl.b32 	%r1, %r228, 7;
	.loc	1 74 51
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 31;
	shl.b32 	%r4, %r2, 3;
	and.b32  	%r5, %r4, 24;
	and.b32  	%r232, %r4, 120;
	shr.u32 	%r6, %r2, 5;
	.loc	1 74 38
	or.b32  	%r233, %r1, %r232;
	.loc	1 74 68
	rem.s32 	%r234, %r233, %r140;
	.loc	1 75 23
	shl.b32 	%r7, %r231, 8;
	.loc	1 75 51
	shr.u32 	%r235, %r2, 2;
	bfe.u32 	%r236, %r2, 2, 6;
	or.b32  	%r237, %r236, 64;
	or.b32  	%r238, %r236, 128;
	or.b32  	%r239, %r236, 192;
	.loc	1 75 38
	or.b32  	%r240, %r7, %r236;
	or.b32  	%r241, %r7, %r237;
	or.b32  	%r242, %r7, %r238;
	or.b32  	%r243, %r7, %r239;
	.loc	1 75 68
	rem.s32 	%r244, %r240, %r141;
	rem.s32 	%r245, %r241, %r141;
	rem.s32 	%r246, %r242, %r141;
	rem.s32 	%r247, %r243, %r141;
	.loc	1 77 60
	bfe.u32 	%r8, %r2, 4, 4;
	or.b32  	%r248, %r8, 16;
	.loc	1 77 71
	shl.b32 	%r249, %r221, 4;
	.loc	1 77 53
	mad.lo.s32 	%r250, %r8, %r221, %r234;
	add.s32 	%r251, %r250, %r249;
	.loc	1 77 22
	mul.wide.s32 	%rd34, %r250, 2;
	add.s64 	%rd21, %rd33, %rd34;
	mul.wide.s32 	%rd35, %r251, 2;
	add.s64 	%rd22, %rd33, %rd35;
	.loc	1 78 52
	mad.lo.s32 	%r252, %r244, %r222, %r5;
	mad.lo.s32 	%r253, %r245, %r222, %r5;
	mad.lo.s32 	%r254, %r246, %r222, %r5;
	mad.lo.s32 	%r255, %r247, %r222, %r5;
	.loc	1 78 22
	mul.wide.s32 	%rd36, %r252, 2;
	add.s64 	%rd23, %rd103, %rd36;
	mul.wide.s32 	%rd37, %r253, 2;
	add.s64 	%rd24, %rd103, %rd37;
	mul.wide.s32 	%rd38, %r254, 2;
	add.s64 	%rd25, %rd103, %rd38;
	mul.wide.s32 	%rd39, %r255, 2;
	add.s64 	%rd26, %rd103, %rd39;
$L__tmp4:
	.loc	2 40 22
	add.s32 	%r256, %r142, 31;
$L__tmp5:
	.loc	1 102 33
	shl.b32 	%r260, %r221, 5;
	.loc	1 93 22
	setp.lt.s32 	%p13, %r256, 32;
	setp.gt.s32 	%p14, %r256, 31;
	.loc	1 96 72
	setp.lt.s32 	%p15, %r8, %r142;
	setp.lt.s32 	%p16, %r248, %r142;
	.loc	1 96 20
	shr.u32 	%r261, %r2, 1;
	and.b32  	%r262, %r261, 56;
	xor.b32  	%r263, %r262, %r232;
	shl.b32 	%r264, %r8, 7;
	or.b32  	%r10, %r263, %r264;
	shl.b32 	%r265, %r10, 1;
	mov.u32 	%r266, global_smem;
	add.s32 	%r145, %r266, %r265;
	shl.b32 	%r267, %r248, 7;
	or.b32  	%r11, %r267, %r263;
	shl.b32 	%r268, %r11, 1;
	add.s32 	%r147, %r266, %r268;
	selp.b32 	%r269, 16, 0, %p14;
	selp.b32 	%r146, %r269, 0, %p15;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r145 + 0 ], [ %rd21 + 0 ], 0x10, %r146;
	// end inline asm
	selp.b32 	%r148, %r269, 0, %p16;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r147 + 0 ], [ %rd22 + 0 ], 0x10, %r148;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 72
	setp.lt.s32 	%p17, %r5, %r142;
	.loc	1 97 20
	xor.b32  	%r270, %r4, %r2;
	and.b32  	%r271, %r270, 24;
	shl.b32 	%r272, %r236, 5;
	or.b32  	%r12, %r272, %r271;
	shl.b32 	%r273, %r12, 1;
	add.s32 	%r274, %r266, 16384;
	add.s32 	%r149, %r274, %r273;
	shl.b32 	%r275, %r237, 5;
	or.b32  	%r13, %r275, %r271;
	shl.b32 	%r276, %r13, 1;
	add.s32 	%r151, %r274, %r276;
	shl.b32 	%r277, %r238, 5;
	or.b32  	%r14, %r277, %r271;
	shl.b32 	%r278, %r14, 1;
	add.s32 	%r153, %r274, %r278;
	shl.b32 	%r279, %r239, 5;
	or.b32  	%r15, %r279, %r271;
	shl.b32 	%r280, %r15, 1;
	add.s32 	%r155, %r274, %r280;
	selp.b32 	%r152, %r269, 0, %p17;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r149 + 0 ], [ %rd23 + 0 ], 0x10, %r152;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r151 + 0 ], [ %rd24 + 0 ], 0x10, %r152;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r153 + 0 ], [ %rd25 + 0 ], 0x10, %r152;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r155 + 0 ], [ %rd26 + 0 ], 0x10, %r152;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	setp.gt.s32 	%p18, %r256, 63;
	.loc	1 102 18
	mul.wide.s32 	%rd40, %r260, 2;
	add.s64 	%rd27, %rd21, %rd40;
	add.s64 	%rd28, %rd22, %rd40;
	.loc	1 103 18
	add.s64 	%rd29, %rd23, 64;
	add.s64 	%rd30, %rd24, 64;
	add.s64 	%rd31, %rd25, 64;
	add.s64 	%rd32, %rd26, 64;
	.loc	1 96 53
	or.b32  	%r281, %r8, 32;
	or.b32  	%r282, %r8, 48;
	.loc	1 96 72
	setp.lt.s32 	%p19, %r281, %r142;
	setp.lt.s32 	%p20, %r282, %r142;
	.loc	1 96 20
	bar.sync 	0;
	add.s32 	%r283, %r266, 8192;
	add.s32 	%r157, %r283, %r265;
	add.s32 	%r159, %r283, %r268;
	selp.b32 	%r284, 16, 0, %p18;
	selp.b32 	%r158, %r284, 0, %p19;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r157 + 0 ], [ %rd27 + 0 ], 0x10, %r158;
	// end inline asm
	selp.b32 	%r160, %r284, 0, %p20;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r159 + 0 ], [ %rd28 + 0 ], 0x10, %r160;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 53
	or.b32  	%r285, %r5, 32;
	.loc	1 97 72
	setp.lt.s32 	%p21, %r285, %r142;
	.loc	1 97 20
	add.s32 	%r286, %r266, 32768;
	add.s32 	%r161, %r286, %r273;
	add.s32 	%r163, %r286, %r276;
	add.s32 	%r165, %r286, %r278;
	add.s32 	%r167, %r286, %r280;
	selp.b32 	%r164, %r284, 0, %p21;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r161 + 0 ], [ %rd29 + 0 ], 0x10, %r164;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r163 + 0 ], [ %rd30 + 0 ], 0x10, %r164;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r165 + 0 ], [ %rd31 + 0 ], 0x10, %r164;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r167 + 0 ], [ %rd32 + 0 ], 0x10, %r164;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 96 20
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r16, %r2, 7, 1;
	and.b32  	%r287, %r2, 7;
	bfe.u32 	%r17, %r2, 3, 1;
	bfe.u32 	%r288, %r2, 4, 1;
	shl.b32 	%r289, %r16, 1;
	or.b32  	%r290, %r289, %r17;
	xor.b32  	%r291, %r290, %r287;
	shl.b32 	%r292, %r291, 3;
	shl.b32 	%r293, %r287, 7;
	shl.b32 	%r294, %r288, 10;
	or.b32  	%r295, %r294, %r293;
	or.b32  	%r18, %r292, %r295;
	shl.b32 	%r296, %r18, 1;
	add.s32 	%r173, %r266, %r296;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1447, %r1448, %r1449, %r1450 }, [ %r173 + 0 ];
	// end inline asm
	or.b32  	%r297, %r290, 4;
	xor.b32  	%r298, %r297, %r287;
	shl.b32 	%r299, %r298, 3;
	or.b32  	%r23, %r299, %r295;
	shl.b32 	%r300, %r23, 1;
	add.s32 	%r178, %r266, %r300;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1443, %r1444, %r1445, %r1446 }, [ %r178 + 0 ];
	// end inline asm
	or.b32  	%r301, %r290, 8;
	xor.b32  	%r302, %r301, %r287;
	shl.b32 	%r303, %r302, 3;
	or.b32  	%r28, %r303, %r295;
	shl.b32 	%r304, %r28, 1;
	add.s32 	%r183, %r266, %r304;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1439, %r1440, %r1441, %r1442 }, [ %r183 + 0 ];
	// end inline asm
	or.b32  	%r305, %r290, 12;
	xor.b32  	%r306, %r305, %r287;
	shl.b32 	%r307, %r306, 3;
	or.b32  	%r33, %r307, %r295;
	shl.b32 	%r308, %r33, 1;
	add.s32 	%r188, %r266, %r308;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1435, %r1436, %r1437, %r1438 }, [ %r188 + 0 ];
	// end inline asm
	.loc	1 97 20
	bfe.u32 	%r38, %r2, 1, 2;
	shl.b32 	%r309, %r288, 5;
	and.b32  	%r39, %r235, 24;
	or.b32  	%r310, %r309, %r39;
	or.b32  	%r311, %r310, %r287;
	xor.b32  	%r312, %r17, %r38;
	shl.b32 	%r313, %r312, 3;
	shl.b32 	%r40, %r311, 5;
	or.b32  	%r41, %r40, %r313;
	shl.b32 	%r314, %r41, 1;
	add.s32 	%r193, %r274, %r314;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1431, %r1432, %r1433, %r1434 }, [ %r193 + 0 ];
	// end inline asm
	add.s32 	%r198, %r193, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1427, %r1428, %r1429, %r1430 }, [ %r198 + 0 ];
	// end inline asm
	add.s32 	%r203, %r193, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1423, %r1424, %r1425, %r1426 }, [ %r203 + 0 ];
	// end inline asm
	add.s32 	%r208, %r193, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1419, %r1420, %r1421, %r1422 }, [ %r208 + 0 ];
	// end inline asm
	mov.b16 	%rs661, 0x0000;
	mov.u16 	%rs662, %rs661;
	mov.u16 	%rs663, %rs661;
	mov.u16 	%rs664, %rs661;
	mov.u16 	%rs665, %rs661;
	mov.u16 	%rs666, %rs661;
	mov.u16 	%rs667, %rs661;
	mov.u16 	%rs668, %rs661;
	mov.u16 	%rs669, %rs661;
	mov.u16 	%rs670, %rs661;
	mov.u16 	%rs671, %rs661;
	mov.u16 	%rs672, %rs661;
	mov.u16 	%rs673, %rs661;
	mov.u16 	%rs674, %rs661;
	mov.u16 	%rs675, %rs661;
	mov.u16 	%rs676, %rs661;
	mov.u16 	%rs677, %rs661;
	mov.u16 	%rs678, %rs661;
	mov.u16 	%rs679, %rs661;
	mov.u16 	%rs680, %rs661;
	mov.u16 	%rs681, %rs661;
	mov.u16 	%rs682, %rs661;
	mov.u16 	%rs683, %rs661;
	mov.u16 	%rs684, %rs661;
	mov.u16 	%rs685, %rs661;
	mov.u16 	%rs686, %rs661;
	mov.u16 	%rs687, %rs661;
	mov.u16 	%rs688, %rs661;
	mov.u16 	%rs689, %rs661;
	mov.u16 	%rs690, %rs661;
	mov.u16 	%rs691, %rs661;
	mov.u16 	%rs692, %rs661;
	mov.u16 	%rs693, %rs661;
	mov.u16 	%rs694, %rs661;
	mov.u16 	%rs695, %rs661;
	mov.u16 	%rs696, %rs661;
	mov.u16 	%rs697, %rs661;
	mov.u16 	%rs698, %rs661;
	mov.u16 	%rs699, %rs661;
	mov.u16 	%rs700, %rs661;
	mov.u16 	%rs701, %rs661;
	mov.u16 	%rs702, %rs661;
	mov.u16 	%rs703, %rs661;
	mov.u16 	%rs704, %rs661;
	mov.u16 	%rs705, %rs661;
	mov.u16 	%rs706, %rs661;
	mov.u16 	%rs707, %rs661;
	mov.u16 	%rs708, %rs661;
	mov.u16 	%rs709, %rs661;
	mov.u16 	%rs710, %rs661;
	mov.u16 	%rs711, %rs661;
	mov.u16 	%rs712, %rs661;
	mov.u16 	%rs713, %rs661;
	mov.u16 	%rs714, %rs661;
	mov.u16 	%rs715, %rs661;
	mov.u16 	%rs716, %rs661;
	mov.u16 	%rs717, %rs661;
	mov.u16 	%rs718, %rs661;
	mov.u16 	%rs719, %rs661;
	mov.u16 	%rs720, %rs661;
	mov.u16 	%rs721, %rs661;
	mov.u16 	%rs722, %rs661;
	mov.u16 	%rs723, %rs661;
	mov.u16 	%rs724, %rs661;
	mov.u16 	%rs725, %rs661;
	mov.u16 	%rs726, %rs661;
	mov.u16 	%rs727, %rs661;
	mov.u16 	%rs728, %rs661;
	mov.u16 	%rs729, %rs661;
	mov.u16 	%rs730, %rs661;
	mov.u16 	%rs731, %rs661;
	mov.u16 	%rs732, %rs661;
	mov.u16 	%rs733, %rs661;
	mov.u16 	%rs734, %rs661;
	mov.u16 	%rs735, %rs661;
	mov.u16 	%rs736, %rs661;
	mov.u16 	%rs737, %rs661;
	mov.u16 	%rs738, %rs661;
	mov.u16 	%rs739, %rs661;
	mov.u16 	%rs740, %rs661;
	mov.u16 	%rs741, %rs661;
	mov.u16 	%rs742, %rs661;
	mov.u16 	%rs743, %rs661;
	mov.u16 	%rs744, %rs661;
	mov.u16 	%rs745, %rs661;
	mov.u16 	%rs746, %rs661;
	mov.u16 	%rs747, %rs661;
	mov.u16 	%rs748, %rs661;
	mov.u16 	%rs749, %rs661;
	mov.u16 	%rs750, %rs661;
	mov.u16 	%rs751, %rs661;
	mov.u16 	%rs752, %rs661;
	mov.u16 	%rs753, %rs661;
	mov.u16 	%rs754, %rs661;
	mov.u16 	%rs755, %rs661;
	mov.u16 	%rs756, %rs661;
	mov.u16 	%rs757, %rs661;
	mov.u16 	%rs758, %rs661;
	mov.u16 	%rs759, %rs661;
	mov.u16 	%rs760, %rs661;
	mov.u16 	%rs761, %rs661;
	mov.u16 	%rs762, %rs661;
	mov.u16 	%rs763, %rs661;
	mov.u16 	%rs764, %rs661;
	mov.u16 	%rs765, %rs661;
	mov.u16 	%rs766, %rs661;
	mov.u16 	%rs767, %rs661;
	mov.u16 	%rs768, %rs661;
	mov.u16 	%rs769, %rs661;
	mov.u16 	%rs770, %rs661;
	mov.u16 	%rs771, %rs661;
	mov.u16 	%rs772, %rs661;
	mov.u16 	%rs773, %rs661;
	mov.u16 	%rs774, %rs661;
	mov.u16 	%rs775, %rs661;
	mov.u16 	%rs776, %rs661;
	mov.u16 	%rs777, %rs661;
	mov.u16 	%rs778, %rs661;
	mov.u16 	%rs779, %rs661;
	mov.u16 	%rs780, %rs661;
	mov.u16 	%rs781, %rs661;
	mov.u16 	%rs782, %rs661;
	mov.u16 	%rs783, %rs661;
	mov.u16 	%rs784, %rs661;
	mov.u16 	%rs785, %rs661;
	mov.u16 	%rs786, %rs661;
	mov.u16 	%rs787, %rs661;
	mov.u16 	%rs788, %rs661;
	.loc	1 93 22
	@%p13 bra 	$L__BB0_3;
	.loc	1 0 22
	cvt.s64.s32 	%rd3, %r252;
	cvt.s64.s32 	%rd4, %r253;
	cvt.s64.s32 	%rd5, %r254;
	cvt.s64.s32 	%rd6, %r255;
	shr.s32 	%r257, %r256, 31;
	shr.u32 	%r258, %r257, 27;
	add.s32 	%r259, %r256, %r258;
	shr.s32 	%r9, %r259, 5;
	cvt.s64.s32 	%rd7, %r260;
	add.s32 	%r58, %r9, -2;
	or.b32  	%r319, %r17, 2;
	xor.b32  	%r320, %r319, %r38;
	shl.b32 	%r321, %r320, 3;
	or.b32  	%r59, %r40, %r321;
	.loc	1 93 22
	shl.b64 	%rd41, %rd6, 1;
	add.s64 	%rd8, %rd41, 128;
	shl.b64 	%rd42, %rd5, 1;
	add.s64 	%rd9, %rd42, 128;
	shl.b64 	%rd43, %rd4, 1;
	add.s64 	%rd10, %rd43, 128;
	shl.b64 	%rd44, %rd3, 1;
	add.s64 	%rd11, %rd44, 128;
	shl.b64 	%rd102, %rd7, 2;
	shl.b64 	%rd13, %rd7, 1;
	or.b32  	%r1418, %r5, 64;
	or.b32  	%r1417, %r8, 80;
	mov.b16 	%rs661, 0x0000;
	mov.b32 	%r1454, 1;
	mov.b32 	%r1453, 0;
	shl.b32 	%r1062, %r59, 1;
	mov.u32 	%r1451, %r274;
	mov.u32 	%r1452, %r266;
	mov.u16 	%rs662, %rs661;
	mov.u16 	%rs663, %rs661;
	mov.u16 	%rs664, %rs661;
	mov.u16 	%rs665, %rs661;
	mov.u16 	%rs666, %rs661;
	mov.u16 	%rs667, %rs661;
	mov.u16 	%rs668, %rs661;
	mov.u16 	%rs669, %rs661;
	mov.u16 	%rs670, %rs661;
	mov.u16 	%rs671, %rs661;
	mov.u16 	%rs672, %rs661;
	mov.u16 	%rs673, %rs661;
	mov.u16 	%rs674, %rs661;
	mov.u16 	%rs675, %rs661;
	mov.u16 	%rs676, %rs661;
	mov.u16 	%rs677, %rs661;
	mov.u16 	%rs678, %rs661;
	mov.u16 	%rs679, %rs661;
	mov.u16 	%rs680, %rs661;
	mov.u16 	%rs681, %rs661;
	mov.u16 	%rs682, %rs661;
	mov.u16 	%rs683, %rs661;
	mov.u16 	%rs684, %rs661;
	mov.u16 	%rs685, %rs661;
	mov.u16 	%rs686, %rs661;
	mov.u16 	%rs687, %rs661;
	mov.u16 	%rs688, %rs661;
	mov.u16 	%rs689, %rs661;
	mov.u16 	%rs690, %rs661;
	mov.u16 	%rs691, %rs661;
	mov.u16 	%rs692, %rs661;
	mov.u16 	%rs693, %rs661;
	mov.u16 	%rs694, %rs661;
	mov.u16 	%rs695, %rs661;
	mov.u16 	%rs696, %rs661;
	mov.u16 	%rs697, %rs661;
	mov.u16 	%rs698, %rs661;
	mov.u16 	%rs699, %rs661;
	mov.u16 	%rs700, %rs661;
	mov.u16 	%rs701, %rs661;
	mov.u16 	%rs702, %rs661;
	mov.u16 	%rs703, %rs661;
	mov.u16 	%rs704, %rs661;
	mov.u16 	%rs705, %rs661;
	mov.u16 	%rs706, %rs661;
	mov.u16 	%rs707, %rs661;
	mov.u16 	%rs708, %rs661;
	mov.u16 	%rs709, %rs661;
	mov.u16 	%rs710, %rs661;
	mov.u16 	%rs711, %rs661;
	mov.u16 	%rs712, %rs661;
	mov.u16 	%rs713, %rs661;
	mov.u16 	%rs714, %rs661;
	mov.u16 	%rs715, %rs661;
	mov.u16 	%rs716, %rs661;
	mov.u16 	%rs717, %rs661;
	mov.u16 	%rs718, %rs661;
	mov.u16 	%rs719, %rs661;
	mov.u16 	%rs720, %rs661;
	mov.u16 	%rs721, %rs661;
	mov.u16 	%rs722, %rs661;
	mov.u16 	%rs723, %rs661;
	mov.u16 	%rs724, %rs661;
	mov.u16 	%rs725, %rs661;
	mov.u16 	%rs726, %rs661;
	mov.u16 	%rs727, %rs661;
	mov.u16 	%rs728, %rs661;
	mov.u16 	%rs729, %rs661;
	mov.u16 	%rs730, %rs661;
	mov.u16 	%rs731, %rs661;
	mov.u16 	%rs732, %rs661;
	mov.u16 	%rs733, %rs661;
	mov.u16 	%rs734, %rs661;
	mov.u16 	%rs735, %rs661;
	mov.u16 	%rs736, %rs661;
	mov.u16 	%rs737, %rs661;
	mov.u16 	%rs738, %rs661;
	mov.u16 	%rs739, %rs661;
	mov.u16 	%rs740, %rs661;
	mov.u16 	%rs741, %rs661;
	mov.u16 	%rs742, %rs661;
	mov.u16 	%rs743, %rs661;
	mov.u16 	%rs744, %rs661;
	mov.u16 	%rs745, %rs661;
	mov.u16 	%rs746, %rs661;
	mov.u16 	%rs747, %rs661;
	mov.u16 	%rs748, %rs661;
	mov.u16 	%rs749, %rs661;
	mov.u16 	%rs750, %rs661;
	mov.u16 	%rs751, %rs661;
	mov.u16 	%rs752, %rs661;
	mov.u16 	%rs753, %rs661;
	mov.u16 	%rs754, %rs661;
	mov.u16 	%rs755, %rs661;
	mov.u16 	%rs756, %rs661;
	mov.u16 	%rs757, %rs661;
	mov.u16 	%rs758, %rs661;
	mov.u16 	%rs759, %rs661;
	mov.u16 	%rs760, %rs661;
	mov.u16 	%rs761, %rs661;
	mov.u16 	%rs762, %rs661;
	mov.u16 	%rs763, %rs661;
	mov.u16 	%rs764, %rs661;
	mov.u16 	%rs765, %rs661;
	mov.u16 	%rs766, %rs661;
	mov.u16 	%rs767, %rs661;
	mov.u16 	%rs768, %rs661;
	mov.u16 	%rs769, %rs661;
	mov.u16 	%rs770, %rs661;
	mov.u16 	%rs771, %rs661;
	mov.u16 	%rs772, %rs661;
	mov.u16 	%rs773, %rs661;
	mov.u16 	%rs774, %rs661;
	mov.u16 	%rs775, %rs661;
	mov.u16 	%rs776, %rs661;
	mov.u16 	%rs777, %rs661;
	mov.u16 	%rs778, %rs661;
	mov.u16 	%rs779, %rs661;
	mov.u16 	%rs780, %rs661;
	mov.u16 	%rs781, %rs661;
	mov.u16 	%rs782, %rs661;
	mov.u16 	%rs783, %rs661;
	mov.u16 	%rs784, %rs661;
	mov.u16 	%rs785, %rs661;
	mov.u16 	%rs786, %rs661;
	mov.u16 	%rs787, %rs661;
	mov.u16 	%rs788, %rs661;
	mov.u32 	%r1455, %r1453;
$L__BB0_2:
	setp.lt.s32 	%p28, %r1455, %r58;
	.loc	1 96 20
	add.s32 	%r1055, %r1452, %r296;
	add.s32 	%r326, %r1055, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r738, %r739, %r740, %r741 }, [ %r326 + 0 ];
	// end inline asm
	add.s32 	%r1057, %r1452, %r300;
	add.s32 	%r331, %r1057, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r818, %r819, %r820, %r821 }, [ %r331 + 0 ];
	// end inline asm
	add.s32 	%r1059, %r1452, %r304;
	add.s32 	%r336, %r1059, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r898, %r899, %r900, %r901 }, [ %r336 + 0 ];
	// end inline asm
	add.s32 	%r1061, %r1452, %r308;
	add.s32 	%r341, %r1061, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r978, %r979, %r980, %r981 }, [ %r341 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r346, %r1451, %r1062;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r742, %r743, %r752, %r753 }, [ %r346 + 0 ];
	// end inline asm
	add.s32 	%r351, %r346, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r762, %r763, %r772, %r773 }, [ %r351 + 0 ];
	// end inline asm
	add.s32 	%r356, %r346, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r782, %r783, %r792, %r793 }, [ %r356 + 0 ];
	// end inline asm
	add.s32 	%r361, %r346, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r802, %r803, %r812, %r813 }, [ %r361 + 0 ];
	// end inline asm
	.loc	1 100 35
	mov.b32 	%r734, {%rs661, %rs662};
	mov.b32 	%r735, {%rs663, %rs664};
	mov.b32 	%r744, {%rs665, %rs666};
	mov.b32 	%r745, {%rs667, %rs668};
	mov.b32 	%r754, {%rs669, %rs670};
	mov.b32 	%r755, {%rs671, %rs672};
	mov.b32 	%r764, {%rs673, %rs674};
	mov.b32 	%r765, {%rs675, %rs676};
	mov.b32 	%r774, {%rs677, %rs678};
	mov.b32 	%r775, {%rs679, %rs680};
	mov.b32 	%r784, {%rs681, %rs682};
	mov.b32 	%r785, {%rs683, %rs684};
	mov.b32 	%r794, {%rs685, %rs686};
	mov.b32 	%r795, {%rs687, %rs688};
	mov.b32 	%r804, {%rs689, %rs690};
	mov.b32 	%r805, {%rs691, %rs692};
	mov.b32 	%r814, {%rs693, %rs694};
	mov.b32 	%r815, {%rs695, %rs696};
	mov.b32 	%r824, {%rs697, %rs698};
	mov.b32 	%r825, {%rs699, %rs700};
	mov.b32 	%r834, {%rs701, %rs702};
	mov.b32 	%r835, {%rs703, %rs704};
	mov.b32 	%r844, {%rs705, %rs706};
	mov.b32 	%r845, {%rs707, %rs708};
	mov.b32 	%r854, {%rs709, %rs710};
	mov.b32 	%r855, {%rs711, %rs712};
	mov.b32 	%r864, {%rs713, %rs714};
	mov.b32 	%r865, {%rs715, %rs716};
	mov.b32 	%r874, {%rs717, %rs718};
	mov.b32 	%r875, {%rs719, %rs720};
	mov.b32 	%r884, {%rs721, %rs722};
	mov.b32 	%r885, {%rs723, %rs724};
	mov.b32 	%r894, {%rs725, %rs726};
	mov.b32 	%r895, {%rs727, %rs728};
	mov.b32 	%r904, {%rs729, %rs730};
	mov.b32 	%r905, {%rs731, %rs732};
	mov.b32 	%r914, {%rs733, %rs734};
	mov.b32 	%r915, {%rs735, %rs736};
	mov.b32 	%r924, {%rs737, %rs738};
	mov.b32 	%r925, {%rs739, %rs740};
	mov.b32 	%r934, {%rs741, %rs742};
	mov.b32 	%r935, {%rs743, %rs744};
	mov.b32 	%r944, {%rs745, %rs746};
	mov.b32 	%r945, {%rs747, %rs748};
	mov.b32 	%r954, {%rs749, %rs750};
	mov.b32 	%r955, {%rs751, %rs752};
	mov.b32 	%r964, {%rs753, %rs754};
	mov.b32 	%r965, {%rs755, %rs756};
	mov.b32 	%r974, {%rs757, %rs758};
	mov.b32 	%r975, {%rs759, %rs760};
	mov.b32 	%r984, {%rs761, %rs762};
	mov.b32 	%r985, {%rs763, %rs764};
	mov.b32 	%r994, {%rs765, %rs766};
	mov.b32 	%r995, {%rs767, %rs768};
	mov.b32 	%r1004, {%rs769, %rs770};
	mov.b32 	%r1005, {%rs771, %rs772};
	mov.b32 	%r1014, {%rs773, %rs774};
	mov.b32 	%r1015, {%rs775, %rs776};
	mov.b32 	%r1024, {%rs777, %rs778};
	mov.b32 	%r1025, {%rs779, %rs780};
	mov.b32 	%r1034, {%rs781, %rs782};
	mov.b32 	%r1035, {%rs783, %rs784};
	mov.b32 	%r1044, {%rs785, %rs786};
	mov.b32 	%r1045, {%rs787, %rs788};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r734, %r735 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1431, %r1432 }, { %r734, %r735 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r744, %r745 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1433, %r1434 }, { %r744, %r745 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r754, %r755 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1427, %r1428 }, { %r754, %r755 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r764, %r765 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1429, %r1430 }, { %r764, %r765 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r774, %r775 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1423, %r1424 }, { %r774, %r775 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r784, %r785 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1425, %r1426 }, { %r784, %r785 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r794, %r795 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1419, %r1420 }, { %r794, %r795 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r804, %r805 }, { %r1447, %r1448, %r1449, %r1450 }, { %r1421, %r1422 }, { %r804, %r805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r814, %r815 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1431, %r1432 }, { %r814, %r815 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r824, %r825 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1433, %r1434 }, { %r824, %r825 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r834, %r835 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1427, %r1428 }, { %r834, %r835 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r844, %r845 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1429, %r1430 }, { %r844, %r845 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r854, %r855 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1423, %r1424 }, { %r854, %r855 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r864, %r865 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1425, %r1426 }, { %r864, %r865 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r874, %r875 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1419, %r1420 }, { %r874, %r875 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r884, %r885 }, { %r1443, %r1444, %r1445, %r1446 }, { %r1421, %r1422 }, { %r884, %r885 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r894, %r895 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1431, %r1432 }, { %r894, %r895 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r904, %r905 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1433, %r1434 }, { %r904, %r905 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r914, %r915 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1427, %r1428 }, { %r914, %r915 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r924, %r925 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1429, %r1430 }, { %r924, %r925 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r934, %r935 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1423, %r1424 }, { %r934, %r935 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r944, %r945 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1425, %r1426 }, { %r944, %r945 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r954, %r955 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1419, %r1420 }, { %r954, %r955 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r964, %r965 }, { %r1439, %r1440, %r1441, %r1442 }, { %r1421, %r1422 }, { %r964, %r965 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r974, %r975 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1431, %r1432 }, { %r974, %r975 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r984, %r985 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1433, %r1434 }, { %r984, %r985 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r994, %r995 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1427, %r1428 }, { %r994, %r995 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1004, %r1005 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1429, %r1430 }, { %r1004, %r1005 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1014, %r1015 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1423, %r1424 }, { %r1014, %r1015 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1024, %r1025 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1425, %r1426 }, { %r1024, %r1025 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1034, %r1035 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1419, %r1420 }, { %r1034, %r1035 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1044, %r1045 }, { %r1435, %r1436, %r1437, %r1438 }, { %r1421, %r1422 }, { %r1044, %r1045 };
	// end inline asm
	.loc	1 102 18
	add.s64 	%rd45, %rd21, %rd102;
	.loc	1 103 18
	add.s64 	%rd46, %rd22, %rd102;
	add.s64 	%rd47, %rd103, %rd11;
	add.s64 	%rd48, %rd103, %rd10;
	add.s64 	%rd49, %rd103, %rd9;
	.loc	1 93 22
	add.s64 	%rd50, %rd103, %rd8;
	add.s32 	%r1127, %r1454, 1;
	setp.lt.s32 	%p29, %r1127, 2;
	selp.b32 	%r1454, %r1127, 0, %p29;
	.loc	1 96 53
	add.s32 	%r1128, %r1417, -16;
	.loc	1 96 72
	setp.lt.s32 	%p30, %r1128, %r142;
	setp.lt.s32 	%p31, %r1417, %r142;
	.loc	1 96 20
	shl.b32 	%r1129, %r1454, 13;
	add.s32 	%r1131, %r266, %r1129;
	bar.sync 	0;
	add.s32 	%r682, %r1131, %r265;
	add.s32 	%r684, %r1131, %r268;
	selp.b32 	%r1134, 16, 0, %p30;
	selp.b32 	%r683, %r1134, 0, %p28;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r682 + 0 ], [ %rd45 + 0 ], 0x10, %r683;
	// end inline asm
	selp.b32 	%r1135, 16, 0, %p31;
	selp.b32 	%r685, %r1135, 0, %p28;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r684 + 0 ], [ %rd46 + 0 ], 0x10, %r685;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 72
	setp.lt.s32 	%p32, %r1418, %r142;
	.loc	1 97 20
	shl.b32 	%r1136, %r1454, 14;
	add.s32 	%r1138, %r274, %r1136;
	add.s32 	%r686, %r1138, %r273;
	add.s32 	%r688, %r1138, %r276;
	add.s32 	%r690, %r1138, %r278;
	add.s32 	%r692, %r1138, %r280;
	selp.b32 	%r1143, 16, 0, %p32;
	selp.b32 	%r689, %r1143, 0, %p28;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r686 + 0 ], [ %rd47 + 0 ], 0x10, %r689;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r688 + 0 ], [ %rd48 + 0 ], 0x10, %r689;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r690 + 0 ], [ %rd49 + 0 ], 0x10, %r689;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r692 + 0 ], [ %rd50 + 0 ], 0x10, %r689;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	add.s32 	%r1144, %r1453, 1;
	setp.lt.s32 	%p33, %r1144, 2;
	selp.b32 	%r1453, %r1144, 0, %p33;
	.loc	1 96 20
	shl.b32 	%r1145, %r1453, 13;
	add.s32 	%r1452, %r266, %r1145;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 97 20
	shl.b32 	%r1146, %r1453, 14;
	add.s32 	%r1451, %r274, %r1146;
	.loc	1 96 20
	add.s32 	%r698, %r1452, %r296;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1447, %r1448, %r1449, %r1450 }, [ %r698 + 0 ];
	// end inline asm
	add.s32 	%r703, %r1452, %r300;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1443, %r1444, %r1445, %r1446 }, [ %r703 + 0 ];
	// end inline asm
	add.s32 	%r708, %r1452, %r304;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1439, %r1440, %r1441, %r1442 }, [ %r708 + 0 ];
	// end inline asm
	add.s32 	%r713, %r1452, %r308;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1435, %r1436, %r1437, %r1438 }, [ %r713 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r718, %r1451, %r314;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1431, %r1432, %r1433, %r1434 }, [ %r718 + 0 ];
	// end inline asm
	add.s32 	%r723, %r718, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1427, %r1428, %r1429, %r1430 }, [ %r723 + 0 ];
	// end inline asm
	add.s32 	%r728, %r718, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1423, %r1424, %r1425, %r1426 }, [ %r728 + 0 ];
	// end inline asm
	add.s32 	%r733, %r718, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1419, %r1420, %r1421, %r1422 }, [ %r733 + 0 ];
	// end inline asm
	.loc	1 100 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r734, %r735 }, { %r738, %r739, %r740, %r741 }, { %r742, %r743 }, { %r734, %r735 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r744, %r745 }, { %r738, %r739, %r740, %r741 }, { %r752, %r753 }, { %r744, %r745 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r754, %r755 }, { %r738, %r739, %r740, %r741 }, { %r762, %r763 }, { %r754, %r755 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r764, %r765 }, { %r738, %r739, %r740, %r741 }, { %r772, %r773 }, { %r764, %r765 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r774, %r775 }, { %r738, %r739, %r740, %r741 }, { %r782, %r783 }, { %r774, %r775 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r784, %r785 }, { %r738, %r739, %r740, %r741 }, { %r792, %r793 }, { %r784, %r785 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r794, %r795 }, { %r738, %r739, %r740, %r741 }, { %r802, %r803 }, { %r794, %r795 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r804, %r805 }, { %r738, %r739, %r740, %r741 }, { %r812, %r813 }, { %r804, %r805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r814, %r815 }, { %r818, %r819, %r820, %r821 }, { %r742, %r743 }, { %r814, %r815 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r824, %r825 }, { %r818, %r819, %r820, %r821 }, { %r752, %r753 }, { %r824, %r825 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r834, %r835 }, { %r818, %r819, %r820, %r821 }, { %r762, %r763 }, { %r834, %r835 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r844, %r845 }, { %r818, %r819, %r820, %r821 }, { %r772, %r773 }, { %r844, %r845 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r854, %r855 }, { %r818, %r819, %r820, %r821 }, { %r782, %r783 }, { %r854, %r855 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r864, %r865 }, { %r818, %r819, %r820, %r821 }, { %r792, %r793 }, { %r864, %r865 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r874, %r875 }, { %r818, %r819, %r820, %r821 }, { %r802, %r803 }, { %r874, %r875 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r884, %r885 }, { %r818, %r819, %r820, %r821 }, { %r812, %r813 }, { %r884, %r885 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r894, %r895 }, { %r898, %r899, %r900, %r901 }, { %r742, %r743 }, { %r894, %r895 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r904, %r905 }, { %r898, %r899, %r900, %r901 }, { %r752, %r753 }, { %r904, %r905 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r914, %r915 }, { %r898, %r899, %r900, %r901 }, { %r762, %r763 }, { %r914, %r915 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r924, %r925 }, { %r898, %r899, %r900, %r901 }, { %r772, %r773 }, { %r924, %r925 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r934, %r935 }, { %r898, %r899, %r900, %r901 }, { %r782, %r783 }, { %r934, %r935 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r944, %r945 }, { %r898, %r899, %r900, %r901 }, { %r792, %r793 }, { %r944, %r945 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r954, %r955 }, { %r898, %r899, %r900, %r901 }, { %r802, %r803 }, { %r954, %r955 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r964, %r965 }, { %r898, %r899, %r900, %r901 }, { %r812, %r813 }, { %r964, %r965 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r974, %r975 }, { %r978, %r979, %r980, %r981 }, { %r742, %r743 }, { %r974, %r975 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r984, %r985 }, { %r978, %r979, %r980, %r981 }, { %r752, %r753 }, { %r984, %r985 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r994, %r995 }, { %r978, %r979, %r980, %r981 }, { %r762, %r763 }, { %r994, %r995 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1004, %r1005 }, { %r978, %r979, %r980, %r981 }, { %r772, %r773 }, { %r1004, %r1005 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1014, %r1015 }, { %r978, %r979, %r980, %r981 }, { %r782, %r783 }, { %r1014, %r1015 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1024, %r1025 }, { %r978, %r979, %r980, %r981 }, { %r792, %r793 }, { %r1024, %r1025 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1034, %r1035 }, { %r978, %r979, %r980, %r981 }, { %r802, %r803 }, { %r1034, %r1035 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r1044, %r1045 }, { %r978, %r979, %r980, %r981 }, { %r812, %r813 }, { %r1044, %r1045 };
	// end inline asm
	mov.b32 	{%rs661, %rs662}, %r734;
	mov.b32 	{%rs663, %rs664}, %r735;
	mov.b32 	{%rs665, %rs666}, %r744;
	mov.b32 	{%rs667, %rs668}, %r745;
	mov.b32 	{%rs669, %rs670}, %r754;
	mov.b32 	{%rs671, %rs672}, %r755;
	mov.b32 	{%rs673, %rs674}, %r764;
	mov.b32 	{%rs675, %rs676}, %r765;
	mov.b32 	{%rs677, %rs678}, %r774;
	mov.b32 	{%rs679, %rs680}, %r775;
	mov.b32 	{%rs681, %rs682}, %r784;
	mov.b32 	{%rs683, %rs684}, %r785;
	mov.b32 	{%rs685, %rs686}, %r794;
	mov.b32 	{%rs687, %rs688}, %r795;
	mov.b32 	{%rs689, %rs690}, %r804;
	mov.b32 	{%rs691, %rs692}, %r805;
	mov.b32 	{%rs693, %rs694}, %r814;
	mov.b32 	{%rs695, %rs696}, %r815;
	mov.b32 	{%rs697, %rs698}, %r824;
	mov.b32 	{%rs699, %rs700}, %r825;
	mov.b32 	{%rs701, %rs702}, %r834;
	mov.b32 	{%rs703, %rs704}, %r835;
	mov.b32 	{%rs705, %rs706}, %r844;
	mov.b32 	{%rs707, %rs708}, %r845;
	mov.b32 	{%rs709, %rs710}, %r854;
	mov.b32 	{%rs711, %rs712}, %r855;
	mov.b32 	{%rs713, %rs714}, %r864;
	mov.b32 	{%rs715, %rs716}, %r865;
	mov.b32 	{%rs717, %rs718}, %r874;
	mov.b32 	{%rs719, %rs720}, %r875;
	mov.b32 	{%rs721, %rs722}, %r884;
	mov.b32 	{%rs723, %rs724}, %r885;
	mov.b32 	{%rs725, %rs726}, %r894;
	mov.b32 	{%rs727, %rs728}, %r895;
	mov.b32 	{%rs729, %rs730}, %r904;
	mov.b32 	{%rs731, %rs732}, %r905;
	mov.b32 	{%rs733, %rs734}, %r914;
	mov.b32 	{%rs735, %rs736}, %r915;
	mov.b32 	{%rs737, %rs738}, %r924;
	mov.b32 	{%rs739, %rs740}, %r925;
	mov.b32 	{%rs741, %rs742}, %r934;
	mov.b32 	{%rs743, %rs744}, %r935;
	mov.b32 	{%rs745, %rs746}, %r944;
	mov.b32 	{%rs747, %rs748}, %r945;
	mov.b32 	{%rs749, %rs750}, %r954;
	mov.b32 	{%rs751, %rs752}, %r955;
	mov.b32 	{%rs753, %rs754}, %r964;
	mov.b32 	{%rs755, %rs756}, %r965;
	mov.b32 	{%rs757, %rs758}, %r974;
	mov.b32 	{%rs759, %rs760}, %r975;
	mov.b32 	{%rs761, %rs762}, %r984;
	mov.b32 	{%rs763, %rs764}, %r985;
	mov.b32 	{%rs765, %rs766}, %r994;
	mov.b32 	{%rs767, %rs768}, %r995;
	mov.b32 	{%rs769, %rs770}, %r1004;
	mov.b32 	{%rs771, %rs772}, %r1005;
	mov.b32 	{%rs773, %rs774}, %r1014;
	mov.b32 	{%rs775, %rs776}, %r1015;
	mov.b32 	{%rs777, %rs778}, %r1024;
	mov.b32 	{%rs779, %rs780}, %r1025;
	mov.b32 	{%rs781, %rs782}, %r1034;
	mov.b32 	{%rs783, %rs784}, %r1035;
	mov.b32 	{%rs785, %rs786}, %r1044;
	mov.b32 	{%rs787, %rs788}, %r1045;
	.loc	1 93 22
	add.s32 	%r1455, %r1455, 1;
	add.s64 	%rd103, %rd103, 64;
	add.s64 	%rd102, %rd102, %rd13;
	add.s32 	%r1418, %r1418, 32;
	add.s32 	%r1417, %r1417, 32;
	setp.lt.s32 	%p34, %r1455, %r9;
	@%p34 bra 	$L__BB0_2;
$L__BB0_3:
	.loc	1 74 51
	and.b32  	%r1276, %r6, 7;
	.loc	1 74 38
	or.b32  	%r1277, %r1276, %r1;
	or.b32  	%r1278, %r1277, 120;
	.loc	1 83 33
	setp.lt.s32 	%p53, %r1278, %r140;
	.loc	1 75 51
	and.b32  	%r1279, %r4, 248;
	.loc	1 75 38
	or.b32  	%r1280, %r7, %r1279;
	.loc	1 83 58
	setp.lt.s32 	%p54, %r1280, %r141;
	.loc	1 83 39
	and.pred  	%p52, %p53, %p54;
	.loc	1 74 38
	or.b32  	%r1281, %r1277, 112;
	.loc	1 83 33
	setp.lt.s32 	%p55, %r1281, %r140;
	.loc	1 83 39
	and.pred  	%p51, %p55, %p54;
	.loc	1 74 38
	or.b32  	%r1282, %r1277, 104;
	.loc	1 83 33
	setp.lt.s32 	%p56, %r1282, %r140;
	.loc	1 83 39
	and.pred  	%p50, %p56, %p54;
	.loc	1 74 38
	or.b32  	%r1283, %r1277, 96;
	.loc	1 83 33
	setp.lt.s32 	%p57, %r1283, %r140;
	.loc	1 83 39
	and.pred  	%p49, %p57, %p54;
	.loc	1 74 38
	or.b32  	%r1284, %r1277, 88;
	.loc	1 83 33
	setp.lt.s32 	%p58, %r1284, %r140;
	.loc	1 83 39
	and.pred  	%p48, %p58, %p54;
	.loc	1 74 38
	or.b32  	%r1285, %r1277, 80;
	.loc	1 83 33
	setp.lt.s32 	%p59, %r1285, %r140;
	.loc	1 83 39
	and.pred  	%p47, %p59, %p54;
	.loc	1 74 38
	or.b32  	%r1286, %r1277, 72;
	.loc	1 83 33
	setp.lt.s32 	%p60, %r1286, %r140;
	.loc	1 83 39
	and.pred  	%p46, %p60, %p54;
	.loc	1 74 38
	or.b32  	%r1287, %r1277, 64;
	.loc	1 83 33
	setp.lt.s32 	%p61, %r1287, %r140;
	.loc	1 83 39
	and.pred  	%p45, %p61, %p54;
	.loc	1 74 38
	or.b32  	%r1288, %r1277, 56;
	.loc	1 83 33
	setp.lt.s32 	%p62, %r1288, %r140;
	.loc	1 83 39
	and.pred  	%p44, %p62, %p54;
	.loc	1 74 38
	or.b32  	%r1289, %r1277, 48;
	.loc	1 83 33
	setp.lt.s32 	%p63, %r1289, %r140;
	.loc	1 83 39
	and.pred  	%p43, %p63, %p54;
	.loc	1 74 38
	or.b32  	%r1290, %r1277, 40;
	.loc	1 83 33
	setp.lt.s32 	%p64, %r1290, %r140;
	.loc	1 83 39
	and.pred  	%p42, %p64, %p54;
	.loc	1 74 38
	or.b32  	%r1291, %r1277, 32;
	.loc	1 83 33
	setp.lt.s32 	%p65, %r1291, %r140;
	.loc	1 83 39
	and.pred  	%p41, %p65, %p54;
	.loc	1 74 38
	or.b32  	%r1292, %r1277, 24;
	.loc	1 83 33
	setp.lt.s32 	%p66, %r1292, %r140;
	.loc	1 83 39
	and.pred  	%p40, %p66, %p54;
	.loc	1 74 38
	or.b32  	%r1293, %r1277, 16;
	.loc	1 83 33
	setp.lt.s32 	%p67, %r1293, %r140;
	.loc	1 83 39
	and.pred  	%p39, %p67, %p54;
	.loc	1 74 38
	or.b32  	%r1294, %r1277, 8;
	.loc	1 83 33
	setp.lt.s32 	%p68, %r1294, %r140;
	.loc	1 83 39
	and.pred  	%p38, %p68, %p54;
	.loc	1 83 33
	setp.lt.s32 	%p69, %r1277, %r140;
	.loc	1 83 39
	and.pred  	%p37, %p69, %p54;
	.loc	1 82 33
	mul.lo.s32 	%r1295, %r1278, %r143;
	.loc	1 82 21
	mul.wide.s32 	%rd68, %r1295, 2;
	add.s64 	%rd69, %rd19, %rd68;
	.loc	1 82 52
	mul.wide.s32 	%rd70, %r1280, 2;
	add.s64 	%rd67, %rd69, %rd70;
	.loc	1 82 33
	shl.b32 	%r1296, %r143, 3;
	sub.s32 	%r1297, %r1295, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd71, %r1297, 2;
	add.s64 	%rd72, %rd19, %rd71;
	.loc	1 82 52
	add.s64 	%rd66, %rd72, %rd70;
	.loc	1 82 33
	sub.s32 	%r1298, %r1297, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd73, %r1298, 2;
	add.s64 	%rd74, %rd19, %rd73;
	.loc	1 82 52
	add.s64 	%rd65, %rd74, %rd70;
	.loc	1 82 33
	sub.s32 	%r1299, %r1298, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd75, %r1299, 2;
	add.s64 	%rd76, %rd19, %rd75;
	.loc	1 82 52
	add.s64 	%rd64, %rd76, %rd70;
	.loc	1 82 33
	sub.s32 	%r1300, %r1299, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd77, %r1300, 2;
	add.s64 	%rd78, %rd19, %rd77;
	.loc	1 82 52
	add.s64 	%rd63, %rd78, %rd70;
	.loc	1 82 33
	sub.s32 	%r1301, %r1300, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd79, %r1301, 2;
	add.s64 	%rd80, %rd19, %rd79;
	.loc	1 82 52
	add.s64 	%rd62, %rd80, %rd70;
	.loc	1 82 33
	sub.s32 	%r1302, %r1301, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd81, %r1302, 2;
	add.s64 	%rd82, %rd19, %rd81;
	.loc	1 82 52
	add.s64 	%rd61, %rd82, %rd70;
	.loc	1 82 33
	sub.s32 	%r1303, %r1302, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd83, %r1303, 2;
	add.s64 	%rd84, %rd19, %rd83;
	.loc	1 82 52
	add.s64 	%rd60, %rd84, %rd70;
	.loc	1 82 33
	sub.s32 	%r1304, %r1303, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd85, %r1304, 2;
	add.s64 	%rd86, %rd19, %rd85;
	.loc	1 82 52
	add.s64 	%rd59, %rd86, %rd70;
	.loc	1 82 33
	sub.s32 	%r1305, %r1304, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd87, %r1305, 2;
	add.s64 	%rd88, %rd19, %rd87;
	.loc	1 82 52
	add.s64 	%rd58, %rd88, %rd70;
	.loc	1 82 33
	sub.s32 	%r1306, %r1305, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd89, %r1306, 2;
	add.s64 	%rd90, %rd19, %rd89;
	.loc	1 82 52
	add.s64 	%rd57, %rd90, %rd70;
	.loc	1 82 33
	sub.s32 	%r1307, %r1306, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd91, %r1307, 2;
	add.s64 	%rd92, %rd19, %rd91;
	.loc	1 82 52
	add.s64 	%rd56, %rd92, %rd70;
	.loc	1 82 33
	sub.s32 	%r1308, %r1307, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd93, %r1308, 2;
	add.s64 	%rd94, %rd19, %rd93;
	.loc	1 82 52
	add.s64 	%rd55, %rd94, %rd70;
	.loc	1 82 33
	sub.s32 	%r1309, %r1308, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd95, %r1309, 2;
	add.s64 	%rd96, %rd19, %rd95;
	.loc	1 82 52
	add.s64 	%rd54, %rd96, %rd70;
	.loc	1 82 33
	sub.s32 	%r1310, %r1309, %r1296;
	.loc	1 82 21
	mul.wide.s32 	%rd97, %r1310, 2;
	add.s64 	%rd98, %rd19, %rd97;
	.loc	1 82 52
	add.s64 	%rd53, %rd98, %rd70;
	.loc	1 82 33
	mul.lo.s32 	%r1311, %r1277, %r143;
	.loc	1 82 21
	mul.wide.s32 	%rd99, %r1311, 2;
	add.s64 	%rd100, %rd19, %rd99;
	.loc	1 82 52
	add.s64 	%rd52, %rd100, %rd70;
	.loc	1 75 51
	and.b32  	%r1312, %r2, 255;
	.loc	1 75 38
	or.b32  	%r1313, %r7, %r1312;
	.loc	1 93 22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 107 31
	mul.wide.s32 	%rd101, %r1313, 2;
	add.s64 	%rd51, %rd20, %rd101;
	.loc	1 108 32
	setp.lt.s32 	%p35, %r1313, %r141;
	mov.u16 	%rs388, 0;
	.loc	1 109 23
	// begin inline asm
	mov.u16 %rs387, 0x0;
	@%p35 ld.global.b16 { %rs387 }, [ %rd51 + 0 ];
	@!%p35 mov.u16 %rs387, %rs388;
	// end inline asm
	.loc	1 110 30
	shl.b32 	%r1314, %r1312, 1;
	add.s32 	%r1316, %r266, %r1314;
	st.shared.u16 	[%r1316], %rs387;
	bar.sync 	0;
	shl.b32 	%r1317, %r2, 1;
	and.b32  	%r1318, %r1317, 6;
	or.b32  	%r1319, %r39, %r1318;
	shl.b32 	%r1320, %r1319, 1;
	add.s32 	%r1321, %r266, %r1320;
	ld.shared.b32 	%r1322, [%r1321];
	mov.b32 	{%rs389, %rs390}, %r1322;
	add.s32 	%r1323, %r1321, 64;
	ld.shared.b32 	%r1324, [%r1321+64];
	mov.b32 	{%rs391, %rs392}, %r1324;
	add.s32 	%r1325, %r1321, 128;
	ld.shared.b32 	%r1326, [%r1321+128];
	mov.b32 	{%rs393, %rs394}, %r1326;
	add.s32 	%r1327, %r1321, 192;
	ld.shared.b32 	%r1328, [%r1321+192];
	mov.b32 	{%rs395, %rs396}, %r1328;
	add.s32 	%r1329, %r1321, 256;
	ld.shared.b32 	%r1330, [%r1321+256];
	mov.b32 	{%rs397, %rs398}, %r1330;
	add.s32 	%r1331, %r1321, 320;
	ld.shared.b32 	%r1332, [%r1321+320];
	mov.b32 	{%rs399, %rs400}, %r1332;
	add.s32 	%r1333, %r1321, 384;
	ld.shared.b32 	%r1334, [%r1321+384];
	mov.b32 	{%rs401, %rs402}, %r1334;
	add.s32 	%r1335, %r1321, 448;
	ld.shared.b32 	%r1336, [%r1321+448];
	mov.b32 	{%rs403, %rs404}, %r1336;
	.loc	1 111 23
	add.f16 	%rs405, %rs661, %rs389;
	add.f16 	%rs406, %rs662, %rs390;
	add.f16 	%rs407, %rs663, %rs389;
	add.f16 	%rs408, %rs664, %rs390;
	add.f16 	%rs409, %rs665, %rs391;
	add.f16 	%rs410, %rs666, %rs392;
	add.f16 	%rs411, %rs667, %rs391;
	add.f16 	%rs412, %rs668, %rs392;
	add.f16 	%rs413, %rs669, %rs393;
	add.f16 	%rs414, %rs670, %rs394;
	add.f16 	%rs415, %rs671, %rs393;
	add.f16 	%rs416, %rs672, %rs394;
	add.f16 	%rs417, %rs673, %rs395;
	add.f16 	%rs418, %rs674, %rs396;
	add.f16 	%rs419, %rs675, %rs395;
	add.f16 	%rs420, %rs676, %rs396;
	add.f16 	%rs421, %rs677, %rs397;
	add.f16 	%rs422, %rs678, %rs398;
	add.f16 	%rs423, %rs679, %rs397;
	add.f16 	%rs424, %rs680, %rs398;
	add.f16 	%rs425, %rs681, %rs399;
	add.f16 	%rs426, %rs682, %rs400;
	add.f16 	%rs427, %rs683, %rs399;
	add.f16 	%rs428, %rs684, %rs400;
	add.f16 	%rs429, %rs685, %rs401;
	add.f16 	%rs430, %rs686, %rs402;
	add.f16 	%rs431, %rs687, %rs401;
	add.f16 	%rs432, %rs688, %rs402;
	add.f16 	%rs433, %rs689, %rs403;
	add.f16 	%rs434, %rs690, %rs404;
	add.f16 	%rs435, %rs691, %rs403;
	add.f16 	%rs436, %rs692, %rs404;
	add.f16 	%rs437, %rs693, %rs389;
	add.f16 	%rs438, %rs694, %rs390;
	add.f16 	%rs439, %rs695, %rs389;
	add.f16 	%rs440, %rs696, %rs390;
	add.f16 	%rs441, %rs697, %rs391;
	add.f16 	%rs442, %rs698, %rs392;
	add.f16 	%rs443, %rs699, %rs391;
	add.f16 	%rs444, %rs700, %rs392;
	add.f16 	%rs445, %rs701, %rs393;
	add.f16 	%rs446, %rs702, %rs394;
	add.f16 	%rs447, %rs703, %rs393;
	add.f16 	%rs448, %rs704, %rs394;
	add.f16 	%rs449, %rs705, %rs395;
	add.f16 	%rs450, %rs706, %rs396;
	add.f16 	%rs451, %rs707, %rs395;
	add.f16 	%rs452, %rs708, %rs396;
	add.f16 	%rs453, %rs709, %rs397;
	add.f16 	%rs454, %rs710, %rs398;
	add.f16 	%rs455, %rs711, %rs397;
	add.f16 	%rs456, %rs712, %rs398;
	add.f16 	%rs457, %rs713, %rs399;
	add.f16 	%rs458, %rs714, %rs400;
	add.f16 	%rs459, %rs715, %rs399;
	add.f16 	%rs460, %rs716, %rs400;
	add.f16 	%rs461, %rs717, %rs401;
	add.f16 	%rs462, %rs718, %rs402;
	add.f16 	%rs463, %rs719, %rs401;
	add.f16 	%rs464, %rs720, %rs402;
	add.f16 	%rs465, %rs721, %rs403;
	add.f16 	%rs466, %rs722, %rs404;
	add.f16 	%rs467, %rs723, %rs403;
	add.f16 	%rs468, %rs724, %rs404;
	add.f16 	%rs469, %rs725, %rs389;
	add.f16 	%rs470, %rs726, %rs390;
	add.f16 	%rs471, %rs727, %rs389;
	add.f16 	%rs472, %rs728, %rs390;
	add.f16 	%rs473, %rs729, %rs391;
	add.f16 	%rs474, %rs730, %rs392;
	add.f16 	%rs475, %rs731, %rs391;
	add.f16 	%rs476, %rs732, %rs392;
	add.f16 	%rs477, %rs733, %rs393;
	add.f16 	%rs478, %rs734, %rs394;
	add.f16 	%rs479, %rs735, %rs393;
	add.f16 	%rs480, %rs736, %rs394;
	add.f16 	%rs481, %rs737, %rs395;
	add.f16 	%rs482, %rs738, %rs396;
	add.f16 	%rs483, %rs739, %rs395;
	add.f16 	%rs484, %rs740, %rs396;
	add.f16 	%rs485, %rs741, %rs397;
	add.f16 	%rs486, %rs742, %rs398;
	add.f16 	%rs487, %rs743, %rs397;
	add.f16 	%rs488, %rs744, %rs398;
	add.f16 	%rs489, %rs745, %rs399;
	add.f16 	%rs490, %rs746, %rs400;
	add.f16 	%rs491, %rs747, %rs399;
	add.f16 	%rs492, %rs748, %rs400;
	add.f16 	%rs493, %rs749, %rs401;
	add.f16 	%rs494, %rs750, %rs402;
	add.f16 	%rs495, %rs751, %rs401;
	add.f16 	%rs496, %rs752, %rs402;
	add.f16 	%rs497, %rs753, %rs403;
	add.f16 	%rs498, %rs754, %rs404;
	add.f16 	%rs499, %rs755, %rs403;
	add.f16 	%rs500, %rs756, %rs404;
	add.f16 	%rs501, %rs757, %rs389;
	add.f16 	%rs502, %rs758, %rs390;
	add.f16 	%rs503, %rs759, %rs389;
	add.f16 	%rs504, %rs760, %rs390;
	add.f16 	%rs505, %rs761, %rs391;
	add.f16 	%rs506, %rs762, %rs392;
	add.f16 	%rs507, %rs763, %rs391;
	add.f16 	%rs508, %rs764, %rs392;
	add.f16 	%rs509, %rs765, %rs393;
	add.f16 	%rs510, %rs766, %rs394;
	add.f16 	%rs511, %rs767, %rs393;
	add.f16 	%rs512, %rs768, %rs394;
	add.f16 	%rs513, %rs769, %rs395;
	add.f16 	%rs514, %rs770, %rs396;
	add.f16 	%rs515, %rs771, %rs395;
	add.f16 	%rs516, %rs772, %rs396;
	add.f16 	%rs517, %rs773, %rs397;
	add.f16 	%rs518, %rs774, %rs398;
	add.f16 	%rs519, %rs775, %rs397;
	add.f16 	%rs520, %rs776, %rs398;
	add.f16 	%rs521, %rs777, %rs399;
	add.f16 	%rs522, %rs778, %rs400;
	add.f16 	%rs523, %rs779, %rs399;
	add.f16 	%rs524, %rs780, %rs400;
	add.f16 	%rs525, %rs781, %rs401;
	add.f16 	%rs526, %rs782, %rs402;
	add.f16 	%rs527, %rs783, %rs401;
	add.f16 	%rs528, %rs784, %rs402;
	add.f16 	%rs529, %rs785, %rs403;
	add.f16 	%rs530, %rs786, %rs404;
	add.f16 	%rs531, %rs787, %rs403;
	add.f16 	%rs532, %rs788, %rs404;
	.loc	1 129 21
	bar.sync 	0;
	shr.u32 	%r1337, %r3, 2;
	shl.b32 	%r1338, %r16, 4;
	or.b32  	%r1339, %r1338, %r1337;
	mul.lo.s32 	%r1340, %r1339, 528;
	add.s32 	%r1341, %r1321, %r1340;
	mov.b32 	%r1342, {%rs405, %rs406};
	st.shared.b32 	[%r1341], %r1342;
	mov.b32 	%r1343, {%rs407, %rs408};
	st.shared.b32 	[%r1341+4224], %r1343;
	mov.b32 	%r1344, {%rs409, %rs410};
	st.shared.b32 	[%r1341+64], %r1344;
	add.s32 	%r1345, %r1323, %r1340;
	mov.b32 	%r1346, {%rs411, %rs412};
	st.shared.b32 	[%r1345+4224], %r1346;
	mov.b32 	%r1347, {%rs413, %rs414};
	st.shared.b32 	[%r1341+128], %r1347;
	add.s32 	%r1348, %r1325, %r1340;
	mov.b32 	%r1349, {%rs415, %rs416};
	st.shared.b32 	[%r1348+4224], %r1349;
	mov.b32 	%r1350, {%rs417, %rs418};
	st.shared.b32 	[%r1341+192], %r1350;
	add.s32 	%r1351, %r1327, %r1340;
	mov.b32 	%r1352, {%rs419, %rs420};
	st.shared.b32 	[%r1351+4224], %r1352;
	mov.b32 	%r1353, {%rs421, %rs422};
	st.shared.b32 	[%r1341+256], %r1353;
	add.s32 	%r1354, %r1329, %r1340;
	mov.b32 	%r1355, {%rs423, %rs424};
	st.shared.b32 	[%r1354+4224], %r1355;
	mov.b32 	%r1356, {%rs425, %rs426};
	st.shared.b32 	[%r1341+320], %r1356;
	add.s32 	%r1357, %r1331, %r1340;
	mov.b32 	%r1358, {%rs427, %rs428};
	st.shared.b32 	[%r1357+4224], %r1358;
	mov.b32 	%r1359, {%rs429, %rs430};
	st.shared.b32 	[%r1341+384], %r1359;
	add.s32 	%r1360, %r1333, %r1340;
	mov.b32 	%r1361, {%rs431, %rs432};
	st.shared.b32 	[%r1360+4224], %r1361;
	mov.b32 	%r1362, {%rs433, %rs434};
	st.shared.b32 	[%r1341+448], %r1362;
	add.s32 	%r1363, %r1335, %r1340;
	mov.b32 	%r1364, {%rs435, %rs436};
	st.shared.b32 	[%r1363+4224], %r1364;
	bar.sync 	0;
	shl.b32 	%r1365, %r3, 3;
	mad.lo.s32 	%r1366, %r1276, 264, %r1365;
	shl.b32 	%r1367, %r1366, 1;
	add.s32 	%r1368, %r266, %r1367;
	ld.shared.v4.u32 	{%r1212, %r1213, %r1214, %r1215}, [%r1368];
	ld.shared.v4.u32 	{%r1216, %r1217, %r1218, %r1219}, [%r1368+4224];
	ld.shared.v4.u32 	{%r1220, %r1221, %r1222, %r1223}, [%r1368+8448];
	ld.shared.v4.u32 	{%r1224, %r1225, %r1226, %r1227}, [%r1368+12672];
	bar.sync 	0;
	mov.b32 	%r1369, {%rs437, %rs438};
	st.shared.b32 	[%r1341], %r1369;
	mov.b32 	%r1370, {%rs439, %rs440};
	st.shared.b32 	[%r1341+4224], %r1370;
	mov.b32 	%r1371, {%rs441, %rs442};
	st.shared.b32 	[%r1341+64], %r1371;
	mov.b32 	%r1372, {%rs443, %rs444};
	st.shared.b32 	[%r1345+4224], %r1372;
	mov.b32 	%r1373, {%rs445, %rs446};
	st.shared.b32 	[%r1341+128], %r1373;
	mov.b32 	%r1374, {%rs447, %rs448};
	st.shared.b32 	[%r1348+4224], %r1374;
	mov.b32 	%r1375, {%rs449, %rs450};
	st.shared.b32 	[%r1341+192], %r1375;
	mov.b32 	%r1376, {%rs451, %rs452};
	st.shared.b32 	[%r1351+4224], %r1376;
	mov.b32 	%r1377, {%rs453, %rs454};
	st.shared.b32 	[%r1341+256], %r1377;
	mov.b32 	%r1378, {%rs455, %rs456};
	st.shared.b32 	[%r1354+4224], %r1378;
	mov.b32 	%r1379, {%rs457, %rs458};
	st.shared.b32 	[%r1341+320], %r1379;
	mov.b32 	%r1380, {%rs459, %rs460};
	st.shared.b32 	[%r1357+4224], %r1380;
	mov.b32 	%r1381, {%rs461, %rs462};
	st.shared.b32 	[%r1341+384], %r1381;
	mov.b32 	%r1382, {%rs463, %rs464};
	st.shared.b32 	[%r1360+4224], %r1382;
	mov.b32 	%r1383, {%rs465, %rs466};
	st.shared.b32 	[%r1341+448], %r1383;
	mov.b32 	%r1384, {%rs467, %rs468};
	st.shared.b32 	[%r1363+4224], %r1384;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1228, %r1229, %r1230, %r1231}, [%r1368];
	ld.shared.v4.u32 	{%r1232, %r1233, %r1234, %r1235}, [%r1368+4224];
	ld.shared.v4.u32 	{%r1236, %r1237, %r1238, %r1239}, [%r1368+8448];
	ld.shared.v4.u32 	{%r1240, %r1241, %r1242, %r1243}, [%r1368+12672];
	bar.sync 	0;
	mov.b32 	%r1385, {%rs469, %rs470};
	st.shared.b32 	[%r1341], %r1385;
	mov.b32 	%r1386, {%rs471, %rs472};
	st.shared.b32 	[%r1341+4224], %r1386;
	mov.b32 	%r1387, {%rs473, %rs474};
	st.shared.b32 	[%r1341+64], %r1387;
	mov.b32 	%r1388, {%rs475, %rs476};
	st.shared.b32 	[%r1345+4224], %r1388;
	mov.b32 	%r1389, {%rs477, %rs478};
	st.shared.b32 	[%r1341+128], %r1389;
	mov.b32 	%r1390, {%rs479, %rs480};
	st.shared.b32 	[%r1348+4224], %r1390;
	mov.b32 	%r1391, {%rs481, %rs482};
	st.shared.b32 	[%r1341+192], %r1391;
	mov.b32 	%r1392, {%rs483, %rs484};
	st.shared.b32 	[%r1351+4224], %r1392;
	mov.b32 	%r1393, {%rs485, %rs486};
	st.shared.b32 	[%r1341+256], %r1393;
	mov.b32 	%r1394, {%rs487, %rs488};
	st.shared.b32 	[%r1354+4224], %r1394;
	mov.b32 	%r1395, {%rs489, %rs490};
	st.shared.b32 	[%r1341+320], %r1395;
	mov.b32 	%r1396, {%rs491, %rs492};
	st.shared.b32 	[%r1357+4224], %r1396;
	mov.b32 	%r1397, {%rs493, %rs494};
	st.shared.b32 	[%r1341+384], %r1397;
	mov.b32 	%r1398, {%rs495, %rs496};
	st.shared.b32 	[%r1360+4224], %r1398;
	mov.b32 	%r1399, {%rs497, %rs498};
	st.shared.b32 	[%r1341+448], %r1399;
	mov.b32 	%r1400, {%rs499, %rs500};
	st.shared.b32 	[%r1363+4224], %r1400;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1244, %r1245, %r1246, %r1247}, [%r1368];
	ld.shared.v4.u32 	{%r1248, %r1249, %r1250, %r1251}, [%r1368+4224];
	ld.shared.v4.u32 	{%r1252, %r1253, %r1254, %r1255}, [%r1368+8448];
	ld.shared.v4.u32 	{%r1256, %r1257, %r1258, %r1259}, [%r1368+12672];
	bar.sync 	0;
	mov.b32 	%r1401, {%rs501, %rs502};
	st.shared.b32 	[%r1341], %r1401;
	mov.b32 	%r1402, {%rs503, %rs504};
	st.shared.b32 	[%r1341+4224], %r1402;
	mov.b32 	%r1403, {%rs505, %rs506};
	st.shared.b32 	[%r1341+64], %r1403;
	mov.b32 	%r1404, {%rs507, %rs508};
	st.shared.b32 	[%r1345+4224], %r1404;
	mov.b32 	%r1405, {%rs509, %rs510};
	st.shared.b32 	[%r1341+128], %r1405;
	mov.b32 	%r1406, {%rs511, %rs512};
	st.shared.b32 	[%r1348+4224], %r1406;
	mov.b32 	%r1407, {%rs513, %rs514};
	st.shared.b32 	[%r1341+192], %r1407;
	mov.b32 	%r1408, {%rs515, %rs516};
	st.shared.b32 	[%r1351+4224], %r1408;
	mov.b32 	%r1409, {%rs517, %rs518};
	st.shared.b32 	[%r1341+256], %r1409;
	mov.b32 	%r1410, {%rs519, %rs520};
	st.shared.b32 	[%r1354+4224], %r1410;
	mov.b32 	%r1411, {%rs521, %rs522};
	st.shared.b32 	[%r1341+320], %r1411;
	mov.b32 	%r1412, {%rs523, %rs524};
	st.shared.b32 	[%r1357+4224], %r1412;
	mov.b32 	%r1413, {%rs525, %rs526};
	st.shared.b32 	[%r1341+384], %r1413;
	mov.b32 	%r1414, {%rs527, %rs528};
	st.shared.b32 	[%r1360+4224], %r1414;
	mov.b32 	%r1415, {%rs529, %rs530};
	st.shared.b32 	[%r1341+448], %r1415;
	mov.b32 	%r1416, {%rs531, %rs532};
	st.shared.b32 	[%r1363+4224], %r1416;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1260, %r1261, %r1262, %r1263}, [%r1368];
	ld.shared.v4.u32 	{%r1264, %r1265, %r1266, %r1267}, [%r1368+4224];
	ld.shared.v4.u32 	{%r1268, %r1269, %r1270, %r1271}, [%r1368+8448];
	ld.shared.v4.u32 	{%r1272, %r1273, %r1274, %r1275}, [%r1368+12672];
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd52 + 0 ], { %r1212, %r1213, %r1214, %r1215 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.v4.b32 [ %rd53 + 0 ], { %r1216, %r1217, %r1218, %r1219 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd54 + 0 ], { %r1220, %r1221, %r1222, %r1223 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd55 + 0 ], { %r1224, %r1225, %r1226, %r1227 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd56 + 0 ], { %r1228, %r1229, %r1230, %r1231 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd57 + 0 ], { %r1232, %r1233, %r1234, %r1235 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd58 + 0 ], { %r1236, %r1237, %r1238, %r1239 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd59 + 0 ], { %r1240, %r1241, %r1242, %r1243 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.v4.b32 [ %rd60 + 0 ], { %r1244, %r1245, %r1246, %r1247 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd61 + 0 ], { %r1248, %r1249, %r1250, %r1251 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd62 + 0 ], { %r1252, %r1253, %r1254, %r1255 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.v4.b32 [ %rd63 + 0 ], { %r1256, %r1257, %r1258, %r1259 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.v4.b32 [ %rd64 + 0 ], { %r1260, %r1261, %r1262, %r1263 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.v4.b32 [ %rd65 + 0 ], { %r1264, %r1265, %r1266, %r1267 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.v4.b32 [ %rd66 + 0 ], { %r1268, %r1269, %r1270, %r1271 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.v4.b32 [ %rd67 + 0 ], { %r1272, %r1273, %r1274, %r1275 };
	// end inline asm
	.loc	1 129 4
	ret;
$L__tmp6:
$L__func_end0:

}
	.file	1 "/home/mike/PycharmProjects/tritontest/compile_matmul_kernel_bias_transpose_a_transpose_b.py"
	.file	2 "/home/mike/PycharmProjects/tritontest/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 211
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 111
.b8 109
.b8 112
.b8 105
.b8 108
.b8 101
.b8 95
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 105
.b8 107
.b8 101
.b8 47
.b8 80
.b8 121
.b8 99
.b8 104
.b8 97
.b8 114
.b8 109
.b8 80
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 116
.b8 101
.b8 115
.b8 116
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 104
.b8 4
.b32 104
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 58
.b8 27
.b8 4
.b32 104
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 59
.b8 27
.b8 4
.b32 104
.b64 $L__tmp4
.b64 $L__tmp5
.b8 1
.b8 93
.b8 33
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
)";

#define TRITON_MATMUL_KERNEL_14_SHARED_MEMORY_SIZE 49152
#define TRITON_MATMUL_KERNEL_14_BLOCK_SIZE_M 128
#define TRITON_MATMUL_KERNEL_14_BLOCK_SIZE_N 256
#define TRITON_MATMUL_KERNEL_14_NUM_WARPS 8
#define TRITON_MATMUL_KERNEL_14_FUNCTION_NAME "matmul_kernel_bias_transpose_a_transpose_b"
