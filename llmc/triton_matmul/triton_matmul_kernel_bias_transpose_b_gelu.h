/*
 * WARNING: This is an autogenerated file. DO NOT EDIT.
 * This file was generated by generate_kernels.sh which intern launches compile_matmul_kernel.py */
#pragma once

#include <string>

const std::string TRITON_MATMUL_KERNEL_28_SOURCE_PTX = R"(
//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	matmul_kernel_bias_transpose_b_gelu
.extern .shared .align 16 .b8 global_smem[];

.visible .entry matmul_kernel_bias_transpose_b_gelu(
	.param .u64 matmul_kernel_bias_transpose_b_gelu_param_0,
	.param .u64 matmul_kernel_bias_transpose_b_gelu_param_1,
	.param .u64 matmul_kernel_bias_transpose_b_gelu_param_2,
	.param .u64 matmul_kernel_bias_transpose_b_gelu_param_3,
	.param .u64 matmul_kernel_bias_transpose_b_gelu_param_4,
	.param .u32 matmul_kernel_bias_transpose_b_gelu_param_5,
	.param .u32 matmul_kernel_bias_transpose_b_gelu_param_6,
	.param .u32 matmul_kernel_bias_transpose_b_gelu_param_7,
	.param .u32 matmul_kernel_bias_transpose_b_gelu_param_8,
	.param .u32 matmul_kernel_bias_transpose_b_gelu_param_9,
	.param .u32 matmul_kernel_bias_transpose_b_gelu_param_10
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<80>;
	.reg .b16 	%rs<773>;
	.reg .b32 	%r<2508>;
	.reg .f32 	%f<1281>;
	.reg .b64 	%rd<141>;
	.loc	1 41 0
$L__func_begin0:
	.loc	1 41 0

	ld.param.u32 	%r329, [matmul_kernel_bias_transpose_b_gelu_param_10];
	ld.param.u32 	%r328, [matmul_kernel_bias_transpose_b_gelu_param_7];
	ld.param.u32 	%r327, [matmul_kernel_bias_transpose_b_gelu_param_6];
	ld.param.u32 	%r326, [matmul_kernel_bias_transpose_b_gelu_param_5];
	ld.param.u64 	%rd19, [matmul_kernel_bias_transpose_b_gelu_param_4];
	ld.param.u64 	%rd18, [matmul_kernel_bias_transpose_b_gelu_param_3];
	ld.param.u64 	%rd17, [matmul_kernel_bias_transpose_b_gelu_param_2];
	ld.param.u64 	%rd16, [matmul_kernel_bias_transpose_b_gelu_param_1];
	ld.param.u64 	%rd15, [matmul_kernel_bias_transpose_b_gelu_param_0];
$L__tmp0:
	.loc	1 57 24
	// begin inline asm
	mov.u32 %r330, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 40 22
	add.s32 	%r396, %r326, 127;
	.loc	2 40 28
	shr.s32 	%r397, %r396, 31;
	shr.u32 	%r398, %r397, 25;
	add.s32 	%r399, %r396, %r398;
	shr.s32 	%r400, %r399, 7;
$L__tmp2:
	.loc	2 40 22
	add.s32 	%r401, %r327, 255;
	.loc	2 40 28
	shr.s32 	%r402, %r401, 31;
	shr.u32 	%r403, %r402, 24;
	add.s32 	%r404, %r401, %r403;
	shr.s32 	%r405, %r404, 8;
$L__tmp3:
	.loc	1 60 38
	shl.b32 	%r407, %r405, 3;
	ld.param.u32 	%r408, [matmul_kernel_bias_transpose_b_gelu_param_8];
	.loc	1 61 22
	div.s32 	%r409, %r330, %r407;
	ld.param.u32 	%r410, [matmul_kernel_bias_transpose_b_gelu_param_9];
	.loc	1 62 29
	shl.b32 	%r411, %r409, 3;
	.loc	1 63 35
	sub.s32 	%r412, %r400, %r411;
	.loc	1 63 48
	min.s32 	%r413, %r412, 8;
	.loc	1 64 33
	rem.s32 	%r414, %r330, %r413;
	.loc	1 64 27
	add.s32 	%r415, %r411, %r414;
	mul.lo.s32 	%r416, %r409, %r407;
	sub.s32 	%r417, %r330, %r416;
	.loc	1 65 40
	div.s32 	%r418, %r417, %r413;
	.loc	1 74 23
	shl.b32 	%r1, %r415, 7;
	.loc	1 74 51
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 31;
	shr.u32 	%r4, %r2, 5;
	shr.u32 	%r419, %r2, 2;
	bfe.u32 	%r420, %r2, 2, 6;
	or.b32  	%r421, %r420, 64;
	.loc	1 74 38
	or.b32  	%r422, %r1, %r420;
	or.b32  	%r423, %r1, %r421;
	.loc	1 74 68
	rem.s32 	%r424, %r422, %r326;
	rem.s32 	%r425, %r423, %r326;
	.loc	1 75 23
	shl.b32 	%r5, %r418, 8;
	.loc	1 75 51
	or.b32  	%r426, %r420, 128;
	or.b32  	%r427, %r420, 192;
	shl.b32 	%r6, %r2, 3;
	and.b32  	%r7, %r6, 24;
	.loc	1 75 38
	or.b32  	%r428, %r5, %r420;
	or.b32  	%r429, %r5, %r421;
	or.b32  	%r430, %r5, %r426;
	or.b32  	%r431, %r5, %r427;
	.loc	1 75 68
	rem.s32 	%r432, %r428, %r327;
	rem.s32 	%r433, %r429, %r327;
	rem.s32 	%r434, %r430, %r327;
	rem.s32 	%r435, %r431, %r327;
	.loc	1 77 53
	mad.lo.s32 	%r436, %r424, %r408, %r7;
	mad.lo.s32 	%r437, %r425, %r408, %r7;
	.loc	1 77 22
	mul.wide.s32 	%rd32, %r436, 2;
	add.s64 	%rd20, %rd15, %rd32;
	mul.wide.s32 	%rd33, %r437, 2;
	add.s64 	%rd21, %rd15, %rd33;
	.loc	1 78 52
	mad.lo.s32 	%r438, %r432, %r410, %r7;
	mad.lo.s32 	%r439, %r433, %r410, %r7;
	mad.lo.s32 	%r440, %r434, %r410, %r7;
	mad.lo.s32 	%r441, %r435, %r410, %r7;
	.loc	1 78 22
	mul.wide.s32 	%rd34, %r438, 2;
	add.s64 	%rd22, %rd16, %rd34;
	mul.wide.s32 	%rd35, %r439, 2;
	add.s64 	%rd23, %rd16, %rd35;
	mul.wide.s32 	%rd36, %r440, 2;
	add.s64 	%rd24, %rd16, %rd36;
	mul.wide.s32 	%rd37, %r441, 2;
	add.s64 	%rd25, %rd16, %rd37;
$L__tmp4:
	.loc	2 40 22
	add.s32 	%r442, %r328, 31;
$L__tmp5:
	.loc	1 93 22
	setp.lt.s32 	%p13, %r442, 32;
	setp.gt.s32 	%p14, %r442, 31;
	.loc	1 96 72
	setp.lt.s32 	%p15, %r7, %r328;
	.loc	1 96 20
	xor.b32  	%r446, %r6, %r2;
	and.b32  	%r447, %r446, 24;
	shl.b32 	%r448, %r420, 5;
	or.b32  	%r9, %r448, %r447;
	shl.b32 	%r449, %r9, 1;
	mov.u32 	%r450, global_smem;
	add.s32 	%r331, %r450, %r449;
	shl.b32 	%r451, %r421, 5;
	or.b32  	%r10, %r451, %r447;
	shl.b32 	%r452, %r10, 1;
	add.s32 	%r333, %r450, %r452;
	selp.b32 	%r453, 16, 0, %p14;
	selp.b32 	%r334, %r453, 0, %p15;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r331 + 0 ], [ %rd20 + 0 ], 0x10, %r334;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r333 + 0 ], [ %rd21 + 0 ], 0x10, %r334;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 20
	add.s32 	%r454, %r450, 16384;
	add.s32 	%r335, %r454, %r449;
	add.s32 	%r337, %r454, %r452;
	shl.b32 	%r455, %r426, 5;
	or.b32  	%r11, %r455, %r447;
	shl.b32 	%r456, %r11, 1;
	add.s32 	%r339, %r454, %r456;
	shl.b32 	%r457, %r427, 5;
	or.b32  	%r12, %r457, %r447;
	shl.b32 	%r458, %r12, 1;
	add.s32 	%r341, %r454, %r458;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r335 + 0 ], [ %rd22 + 0 ], 0x10, %r334;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r337 + 0 ], [ %rd23 + 0 ], 0x10, %r334;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r339 + 0 ], [ %rd24 + 0 ], 0x10, %r334;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r341 + 0 ], [ %rd25 + 0 ], 0x10, %r334;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	setp.gt.s32 	%p16, %r442, 63;
	.loc	1 102 18
	add.s64 	%rd26, %rd20, 64;
	add.s64 	%rd27, %rd21, 64;
	.loc	1 103 18
	add.s64 	%rd28, %rd22, 64;
	add.s64 	%rd29, %rd23, 64;
	add.s64 	%rd30, %rd24, 64;
	add.s64 	%rd31, %rd25, 64;
	.loc	1 96 53
	or.b32  	%r459, %r7, 32;
	.loc	1 96 72
	setp.lt.s32 	%p17, %r459, %r328;
	.loc	1 96 20
	bar.sync 	0;
	add.s32 	%r460, %r450, 8192;
	add.s32 	%r343, %r460, %r449;
	add.s32 	%r345, %r460, %r452;
	selp.b32 	%r461, 16, 0, %p16;
	selp.b32 	%r346, %r461, 0, %p17;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r343 + 0 ], [ %rd26 + 0 ], 0x10, %r346;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r345 + 0 ], [ %rd27 + 0 ], 0x10, %r346;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 20
	add.s32 	%r462, %r450, 32768;
	add.s32 	%r347, %r462, %r449;
	add.s32 	%r349, %r462, %r452;
	add.s32 	%r351, %r462, %r456;
	add.s32 	%r353, %r462, %r458;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r347 + 0 ], [ %rd28 + 0 ], 0x10, %r346;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r349 + 0 ], [ %rd29 + 0 ], 0x10, %r346;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r351 + 0 ], [ %rd30 + 0 ], 0x10, %r346;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r353 + 0 ], [ %rd31 + 0 ], 0x10, %r346;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 96 20
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r463, %r2, 7;
	shr.u32 	%r464, %r2, 3;
	bfe.u32 	%r13, %r2, 3, 1;
	bfe.u32 	%r14, %r2, 4, 1;
	bfe.u32 	%r15, %r2, 1, 2;
	and.b32  	%r16, %r464, 16;
	shl.b32 	%r465, %r13, 3;
	or.b32  	%r466, %r465, %r16;
	or.b32  	%r467, %r466, %r463;
	xor.b32  	%r468, %r14, %r15;
	shl.b32 	%r469, %r468, 3;
	shl.b32 	%r17, %r467, 5;
	or.b32  	%r18, %r17, %r469;
	shl.b32 	%r470, %r18, 1;
	add.s32 	%r359, %r450, %r470;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2371, %r2372, %r2373, %r2374 }, [ %r359 + 0 ];
	// end inline asm
	add.s32 	%r364, %r359, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2367, %r2368, %r2369, %r2370 }, [ %r364 + 0 ];
	// end inline asm
	add.s32 	%r369, %r359, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2363, %r2364, %r2365, %r2366 }, [ %r369 + 0 ];
	// end inline asm
	add.s32 	%r374, %r359, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2359, %r2360, %r2361, %r2362 }, [ %r374 + 0 ];
	// end inline asm
	.loc	1 97 20
	shl.b32 	%r471, %r14, 5;
	and.b32  	%r35, %r419, 24;
	or.b32  	%r472, %r471, %r35;
	or.b32  	%r473, %r472, %r463;
	xor.b32  	%r474, %r13, %r15;
	shl.b32 	%r475, %r474, 3;
	shl.b32 	%r36, %r473, 5;
	or.b32  	%r37, %r36, %r475;
	shl.b32 	%r476, %r37, 1;
	add.s32 	%r379, %r454, %r476;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2355, %r2356, %r2357, %r2358 }, [ %r379 + 0 ];
	// end inline asm
	add.s32 	%r384, %r379, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2351, %r2352, %r2353, %r2354 }, [ %r384 + 0 ];
	// end inline asm
	add.s32 	%r389, %r379, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2347, %r2348, %r2349, %r2350 }, [ %r389 + 0 ];
	// end inline asm
	add.s32 	%r394, %r379, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2343, %r2344, %r2345, %r2346 }, [ %r394 + 0 ];
	// end inline asm
	mov.b32 	%r2443, 0;
	mov.u32 	%r2442, %r2443;
	mov.u32 	%r2441, %r2443;
	mov.u32 	%r2440, %r2443;
	mov.u32 	%r2439, %r2443;
	mov.u32 	%r2438, %r2443;
	mov.u32 	%r2437, %r2443;
	mov.u32 	%r2436, %r2443;
	mov.u32 	%r2435, %r2443;
	mov.u32 	%r2434, %r2443;
	mov.u32 	%r2433, %r2443;
	mov.u32 	%r2432, %r2443;
	mov.u32 	%r2431, %r2443;
	mov.u32 	%r2430, %r2443;
	mov.u32 	%r2429, %r2443;
	mov.u32 	%r2428, %r2443;
	mov.u32 	%r2427, %r2443;
	mov.u32 	%r2426, %r2443;
	mov.u32 	%r2425, %r2443;
	mov.u32 	%r2424, %r2443;
	mov.u32 	%r2423, %r2443;
	mov.u32 	%r2422, %r2443;
	mov.u32 	%r2421, %r2443;
	mov.u32 	%r2420, %r2443;
	mov.u32 	%r2419, %r2443;
	mov.u32 	%r2418, %r2443;
	mov.u32 	%r2417, %r2443;
	mov.u32 	%r2416, %r2443;
	mov.u32 	%r2415, %r2443;
	mov.u32 	%r2414, %r2443;
	mov.u32 	%r2413, %r2443;
	mov.u32 	%r2412, %r2443;
	mov.u32 	%r2411, %r2443;
	mov.u32 	%r2410, %r2443;
	mov.u32 	%r2409, %r2443;
	mov.u32 	%r2408, %r2443;
	mov.u32 	%r2407, %r2443;
	mov.u32 	%r2406, %r2443;
	mov.u32 	%r2405, %r2443;
	mov.u32 	%r2404, %r2443;
	mov.u32 	%r2403, %r2443;
	mov.u32 	%r2402, %r2443;
	mov.u32 	%r2401, %r2443;
	mov.u32 	%r2400, %r2443;
	mov.u32 	%r2399, %r2443;
	mov.u32 	%r2398, %r2443;
	mov.u32 	%r2397, %r2443;
	mov.u32 	%r2396, %r2443;
	mov.u32 	%r2395, %r2443;
	mov.u32 	%r2394, %r2443;
	mov.u32 	%r2393, %r2443;
	mov.u32 	%r2392, %r2443;
	mov.u32 	%r2391, %r2443;
	mov.u32 	%r2390, %r2443;
	mov.u32 	%r2389, %r2443;
	mov.u32 	%r2388, %r2443;
	mov.u32 	%r2387, %r2443;
	mov.u32 	%r2386, %r2443;
	mov.u32 	%r2385, %r2443;
	mov.u32 	%r2384, %r2443;
	mov.u32 	%r2383, %r2443;
	mov.u32 	%r2382, %r2443;
	mov.u32 	%r2381, %r2443;
	mov.u32 	%r2380, %r2443;
	.loc	1 93 22
	@%p13 bra 	$L__BB0_3;
	.loc	1 0 22
	cvt.s64.s32 	%rd1, %r436;
	cvt.s64.s32 	%rd2, %r437;
	cvt.s64.s32 	%rd3, %r438;
	cvt.s64.s32 	%rd4, %r439;
	cvt.s64.s32 	%rd5, %r440;
	cvt.s64.s32 	%rd6, %r441;
	shr.s32 	%r443, %r442, 31;
	shr.u32 	%r444, %r443, 27;
	add.s32 	%r445, %r442, %r444;
	shr.s32 	%r8, %r445, 5;
	add.s32 	%r54, %r8, -2;
	or.b32  	%r482, %r14, 2;
	xor.b32  	%r483, %r482, %r15;
	shl.b32 	%r484, %r483, 3;
	or.b32  	%r485, %r13, 2;
	xor.b32  	%r486, %r485, %r15;
	shl.b32 	%r487, %r486, 3;
	or.b32  	%r55, %r17, %r484;
	or.b32  	%r56, %r36, %r487;
	.loc	1 93 22
	shl.b64 	%rd39, %rd6, 1;
	add.s64 	%rd40, %rd39, %rd16;
	add.s64 	%rd7, %rd40, 128;
	shl.b64 	%rd41, %rd5, 1;
	add.s64 	%rd42, %rd41, %rd16;
	add.s64 	%rd8, %rd42, 128;
	shl.b64 	%rd43, %rd4, 1;
	add.s64 	%rd44, %rd43, %rd16;
	add.s64 	%rd9, %rd44, 128;
	shl.b64 	%rd45, %rd3, 1;
	add.s64 	%rd46, %rd45, %rd16;
	add.s64 	%rd10, %rd46, 128;
	shl.b64 	%rd47, %rd2, 1;
	add.s64 	%rd48, %rd47, %rd15;
	add.s64 	%rd11, %rd48, 128;
	shl.b64 	%rd49, %rd1, 1;
	add.s64 	%rd50, %rd49, %rd15;
	add.s64 	%rd12, %rd50, 128;
	or.b32  	%r2342, %r7, 64;
	mov.b32 	%r2380, 0;
	mov.b32 	%r2378, 1;
	mov.b32 	%r2377, 0;
	mov.u64 	%rd140, 0;
	shl.b32 	%r1220, %r55, 1;
	shl.b32 	%r1221, %r56, 1;
	mov.u32 	%r2375, %r454;
	mov.u32 	%r2376, %r450;
	mov.u32 	%r2379, %r2377;
	mov.u32 	%r2381, %r2380;
	mov.u32 	%r2382, %r2380;
	mov.u32 	%r2383, %r2380;
	mov.u32 	%r2384, %r2380;
	mov.u32 	%r2385, %r2380;
	mov.u32 	%r2386, %r2380;
	mov.u32 	%r2387, %r2380;
	mov.u32 	%r2388, %r2380;
	mov.u32 	%r2389, %r2380;
	mov.u32 	%r2390, %r2380;
	mov.u32 	%r2391, %r2380;
	mov.u32 	%r2392, %r2380;
	mov.u32 	%r2393, %r2380;
	mov.u32 	%r2394, %r2380;
	mov.u32 	%r2395, %r2380;
	mov.u32 	%r2396, %r2380;
	mov.u32 	%r2397, %r2380;
	mov.u32 	%r2398, %r2380;
	mov.u32 	%r2399, %r2380;
	mov.u32 	%r2400, %r2380;
	mov.u32 	%r2401, %r2380;
	mov.u32 	%r2402, %r2380;
	mov.u32 	%r2403, %r2380;
	mov.u32 	%r2404, %r2380;
	mov.u32 	%r2405, %r2380;
	mov.u32 	%r2406, %r2380;
	mov.u32 	%r2407, %r2380;
	mov.u32 	%r2408, %r2380;
	mov.u32 	%r2409, %r2380;
	mov.u32 	%r2410, %r2380;
	mov.u32 	%r2411, %r2380;
	mov.u32 	%r2412, %r2380;
	mov.u32 	%r2413, %r2380;
	mov.u32 	%r2414, %r2380;
	mov.u32 	%r2415, %r2380;
	mov.u32 	%r2416, %r2380;
	mov.u32 	%r2417, %r2380;
	mov.u32 	%r2418, %r2380;
	mov.u32 	%r2419, %r2380;
	mov.u32 	%r2420, %r2380;
	mov.u32 	%r2421, %r2380;
	mov.u32 	%r2422, %r2380;
	mov.u32 	%r2423, %r2380;
	mov.u32 	%r2424, %r2380;
	mov.u32 	%r2425, %r2380;
	mov.u32 	%r2426, %r2380;
	mov.u32 	%r2427, %r2380;
	mov.u32 	%r2428, %r2380;
	mov.u32 	%r2429, %r2380;
	mov.u32 	%r2430, %r2380;
	mov.u32 	%r2431, %r2380;
	mov.u32 	%r2432, %r2380;
	mov.u32 	%r2433, %r2380;
	mov.u32 	%r2434, %r2380;
	mov.u32 	%r2435, %r2380;
	mov.u32 	%r2436, %r2380;
	mov.u32 	%r2437, %r2380;
	mov.u32 	%r2438, %r2380;
	mov.u32 	%r2439, %r2380;
	mov.u32 	%r2440, %r2380;
	mov.u32 	%r2441, %r2380;
	mov.u32 	%r2442, %r2380;
	mov.u32 	%r2443, %r2380;
$L__BB0_2:
	setp.lt.s32 	%p24, %r2379, %r54;
	.loc	1 96 20
	add.s32 	%r492, %r2376, %r1220;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r904, %r905, %r906, %r907 }, [ %r492 + 0 ];
	// end inline asm
	add.s32 	%r497, %r492, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r984, %r985, %r986, %r987 }, [ %r497 + 0 ];
	// end inline asm
	add.s32 	%r502, %r492, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1064, %r1065, %r1066, %r1067 }, [ %r502 + 0 ];
	// end inline asm
	add.s32 	%r507, %r492, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1144, %r1145, %r1146, %r1147 }, [ %r507 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r512, %r2375, %r1221;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r908, %r909, %r918, %r919 }, [ %r512 + 0 ];
	// end inline asm
	add.s32 	%r517, %r512, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r928, %r929, %r938, %r939 }, [ %r517 + 0 ];
	// end inline asm
	add.s32 	%r522, %r512, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r948, %r949, %r958, %r959 }, [ %r522 + 0 ];
	// end inline asm
	add.s32 	%r527, %r512, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r968, %r969, %r978, %r979 }, [ %r527 + 0 ];
	// end inline asm
	.loc	1 100 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2443, %r2442 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2355, %r2356 }, { %r2443, %r2442 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2441, %r2440 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2357, %r2358 }, { %r2441, %r2440 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2439, %r2438 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2351, %r2352 }, { %r2439, %r2438 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2437, %r2436 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2353, %r2354 }, { %r2437, %r2436 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2435, %r2434 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2347, %r2348 }, { %r2435, %r2434 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2433, %r2432 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2349, %r2350 }, { %r2433, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2431, %r2430 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2343, %r2344 }, { %r2431, %r2430 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2429, %r2428 }, { %r2371, %r2372, %r2373, %r2374 }, { %r2345, %r2346 }, { %r2429, %r2428 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2427, %r2426 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2355, %r2356 }, { %r2427, %r2426 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2425, %r2424 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2357, %r2358 }, { %r2425, %r2424 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2423, %r2422 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2351, %r2352 }, { %r2423, %r2422 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2421, %r2420 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2353, %r2354 }, { %r2421, %r2420 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2419, %r2418 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2347, %r2348 }, { %r2419, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2417, %r2416 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2349, %r2350 }, { %r2417, %r2416 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2415, %r2414 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2343, %r2344 }, { %r2415, %r2414 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2413, %r2412 }, { %r2367, %r2368, %r2369, %r2370 }, { %r2345, %r2346 }, { %r2413, %r2412 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2411, %r2410 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2355, %r2356 }, { %r2411, %r2410 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2409, %r2408 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2357, %r2358 }, { %r2409, %r2408 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2407, %r2406 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2351, %r2352 }, { %r2407, %r2406 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2405, %r2404 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2353, %r2354 }, { %r2405, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2403, %r2402 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2347, %r2348 }, { %r2403, %r2402 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2401, %r2400 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2349, %r2350 }, { %r2401, %r2400 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2399, %r2398 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2343, %r2344 }, { %r2399, %r2398 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2397, %r2396 }, { %r2363, %r2364, %r2365, %r2366 }, { %r2345, %r2346 }, { %r2397, %r2396 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2395, %r2394 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2355, %r2356 }, { %r2395, %r2394 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2393, %r2392 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2357, %r2358 }, { %r2393, %r2392 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2391, %r2390 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2351, %r2352 }, { %r2391, %r2390 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2389, %r2388 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2353, %r2354 }, { %r2389, %r2388 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2387, %r2386 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2347, %r2348 }, { %r2387, %r2386 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2385, %r2384 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2349, %r2350 }, { %r2385, %r2384 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2383, %r2382 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2343, %r2344 }, { %r2383, %r2382 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2381, %r2380 }, { %r2359, %r2360, %r2361, %r2362 }, { %r2345, %r2346 }, { %r2381, %r2380 };
	// end inline asm
	.loc	1 102 18
	add.s64 	%rd51, %rd12, %rd140;
	.loc	1 103 18
	add.s64 	%rd52, %rd11, %rd140;
	add.s64 	%rd53, %rd10, %rd140;
	add.s64 	%rd54, %rd9, %rd140;
	add.s64 	%rd55, %rd8, %rd140;
	.loc	1 93 22
	add.s64 	%rd56, %rd7, %rd140;
	add.s32 	%r1222, %r2378, 1;
	setp.lt.s32 	%p25, %r1222, 2;
	selp.b32 	%r2378, %r1222, 0, %p25;
	.loc	1 96 72
	setp.lt.s32 	%p26, %r2342, %r328;
	.loc	1 96 20
	shl.b32 	%r1223, %r2378, 13;
	add.s32 	%r1225, %r450, %r1223;
	bar.sync 	0;
	add.s32 	%r848, %r1225, %r449;
	add.s32 	%r850, %r1225, %r452;
	selp.b32 	%r1228, 16, 0, %p26;
	selp.b32 	%r851, %r1228, 0, %p24;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r848 + 0 ], [ %rd51 + 0 ], 0x10, %r851;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r850 + 0 ], [ %rd52 + 0 ], 0x10, %r851;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 97 20
	shl.b32 	%r1229, %r2378, 14;
	add.s32 	%r1231, %r454, %r1229;
	add.s32 	%r852, %r1231, %r449;
	add.s32 	%r854, %r1231, %r452;
	add.s32 	%r856, %r1231, %r456;
	add.s32 	%r858, %r1231, %r458;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r852 + 0 ], [ %rd53 + 0 ], 0x10, %r851;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r854 + 0 ], [ %rd54 + 0 ], 0x10, %r851;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r856 + 0 ], [ %rd55 + 0 ], 0x10, %r851;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r858 + 0 ], [ %rd56 + 0 ], 0x10, %r851;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 93 22
	add.s32 	%r1234, %r2377, 1;
	setp.lt.s32 	%p27, %r1234, 2;
	selp.b32 	%r2377, %r1234, 0, %p27;
	.loc	1 96 20
	shl.b32 	%r1235, %r2377, 13;
	add.s32 	%r2376, %r450, %r1235;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 97 20
	shl.b32 	%r1236, %r2377, 14;
	add.s32 	%r2375, %r454, %r1236;
	.loc	1 96 20
	add.s32 	%r864, %r2376, %r470;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2371, %r2372, %r2373, %r2374 }, [ %r864 + 0 ];
	// end inline asm
	add.s32 	%r869, %r864, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2367, %r2368, %r2369, %r2370 }, [ %r869 + 0 ];
	// end inline asm
	add.s32 	%r874, %r864, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2363, %r2364, %r2365, %r2366 }, [ %r874 + 0 ];
	// end inline asm
	add.s32 	%r879, %r864, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2359, %r2360, %r2361, %r2362 }, [ %r879 + 0 ];
	// end inline asm
	.loc	1 97 20
	add.s32 	%r884, %r2375, %r476;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2355, %r2356, %r2357, %r2358 }, [ %r884 + 0 ];
	// end inline asm
	add.s32 	%r889, %r884, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2351, %r2352, %r2353, %r2354 }, [ %r889 + 0 ];
	// end inline asm
	add.s32 	%r894, %r884, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2347, %r2348, %r2349, %r2350 }, [ %r894 + 0 ];
	// end inline asm
	add.s32 	%r899, %r884, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2343, %r2344, %r2345, %r2346 }, [ %r899 + 0 ];
	// end inline asm
	.loc	1 100 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2443, %r2442 }, { %r904, %r905, %r906, %r907 }, { %r908, %r909 }, { %r2443, %r2442 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2441, %r2440 }, { %r904, %r905, %r906, %r907 }, { %r918, %r919 }, { %r2441, %r2440 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2439, %r2438 }, { %r904, %r905, %r906, %r907 }, { %r928, %r929 }, { %r2439, %r2438 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2437, %r2436 }, { %r904, %r905, %r906, %r907 }, { %r938, %r939 }, { %r2437, %r2436 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2435, %r2434 }, { %r904, %r905, %r906, %r907 }, { %r948, %r949 }, { %r2435, %r2434 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2433, %r2432 }, { %r904, %r905, %r906, %r907 }, { %r958, %r959 }, { %r2433, %r2432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2431, %r2430 }, { %r904, %r905, %r906, %r907 }, { %r968, %r969 }, { %r2431, %r2430 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2429, %r2428 }, { %r904, %r905, %r906, %r907 }, { %r978, %r979 }, { %r2429, %r2428 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2427, %r2426 }, { %r984, %r985, %r986, %r987 }, { %r908, %r909 }, { %r2427, %r2426 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2425, %r2424 }, { %r984, %r985, %r986, %r987 }, { %r918, %r919 }, { %r2425, %r2424 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2423, %r2422 }, { %r984, %r985, %r986, %r987 }, { %r928, %r929 }, { %r2423, %r2422 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2421, %r2420 }, { %r984, %r985, %r986, %r987 }, { %r938, %r939 }, { %r2421, %r2420 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2419, %r2418 }, { %r984, %r985, %r986, %r987 }, { %r948, %r949 }, { %r2419, %r2418 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2417, %r2416 }, { %r984, %r985, %r986, %r987 }, { %r958, %r959 }, { %r2417, %r2416 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2415, %r2414 }, { %r984, %r985, %r986, %r987 }, { %r968, %r969 }, { %r2415, %r2414 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2413, %r2412 }, { %r984, %r985, %r986, %r987 }, { %r978, %r979 }, { %r2413, %r2412 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2411, %r2410 }, { %r1064, %r1065, %r1066, %r1067 }, { %r908, %r909 }, { %r2411, %r2410 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2409, %r2408 }, { %r1064, %r1065, %r1066, %r1067 }, { %r918, %r919 }, { %r2409, %r2408 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2407, %r2406 }, { %r1064, %r1065, %r1066, %r1067 }, { %r928, %r929 }, { %r2407, %r2406 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2405, %r2404 }, { %r1064, %r1065, %r1066, %r1067 }, { %r938, %r939 }, { %r2405, %r2404 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2403, %r2402 }, { %r1064, %r1065, %r1066, %r1067 }, { %r948, %r949 }, { %r2403, %r2402 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2401, %r2400 }, { %r1064, %r1065, %r1066, %r1067 }, { %r958, %r959 }, { %r2401, %r2400 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2399, %r2398 }, { %r1064, %r1065, %r1066, %r1067 }, { %r968, %r969 }, { %r2399, %r2398 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2397, %r2396 }, { %r1064, %r1065, %r1066, %r1067 }, { %r978, %r979 }, { %r2397, %r2396 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2395, %r2394 }, { %r1144, %r1145, %r1146, %r1147 }, { %r908, %r909 }, { %r2395, %r2394 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2393, %r2392 }, { %r1144, %r1145, %r1146, %r1147 }, { %r918, %r919 }, { %r2393, %r2392 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2391, %r2390 }, { %r1144, %r1145, %r1146, %r1147 }, { %r928, %r929 }, { %r2391, %r2390 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2389, %r2388 }, { %r1144, %r1145, %r1146, %r1147 }, { %r938, %r939 }, { %r2389, %r2388 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2387, %r2386 }, { %r1144, %r1145, %r1146, %r1147 }, { %r948, %r949 }, { %r2387, %r2386 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2385, %r2384 }, { %r1144, %r1145, %r1146, %r1147 }, { %r958, %r959 }, { %r2385, %r2384 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2383, %r2382 }, { %r1144, %r1145, %r1146, %r1147 }, { %r968, %r969 }, { %r2383, %r2382 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r2381, %r2380 }, { %r1144, %r1145, %r1146, %r1147 }, { %r978, %r979 }, { %r2381, %r2380 };
	// end inline asm
	.loc	1 93 22
	add.s32 	%r2379, %r2379, 1;
	add.s64 	%rd140, %rd140, 64;
	add.s32 	%r2342, %r2342, 32;
	setp.lt.s32 	%p28, %r2379, %r8;
	@%p28 bra 	$L__BB0_2;
$L__BB0_3:
	.loc	1 74 51
	and.b32  	%r1751, %r4, 7;
	.loc	1 74 38
	or.b32  	%r1752, %r1751, %r1;
	or.b32  	%r1753, %r1752, 120;
	.loc	1 83 33
	setp.lt.s32 	%p63, %r1753, %r326;
	.loc	1 75 51
	and.b32  	%r1754, %r6, 248;
	.loc	1 75 38
	or.b32  	%r1755, %r5, %r1754;
	.loc	1 83 58
	setp.lt.s32 	%p64, %r1755, %r327;
	.loc	1 83 39
	and.pred  	%p46, %p63, %p64;
	.loc	1 74 38
	or.b32  	%r1756, %r1752, 112;
	.loc	1 83 33
	setp.lt.s32 	%p65, %r1756, %r326;
	.loc	1 83 39
	and.pred  	%p45, %p65, %p64;
	.loc	1 74 38
	or.b32  	%r1757, %r1752, 104;
	.loc	1 83 33
	setp.lt.s32 	%p66, %r1757, %r326;
	.loc	1 83 39
	and.pred  	%p44, %p66, %p64;
	.loc	1 74 38
	or.b32  	%r1758, %r1752, 96;
	.loc	1 83 33
	setp.lt.s32 	%p67, %r1758, %r326;
	.loc	1 83 39
	and.pred  	%p43, %p67, %p64;
	.loc	1 74 38
	or.b32  	%r1759, %r1752, 88;
	.loc	1 83 33
	setp.lt.s32 	%p68, %r1759, %r326;
	.loc	1 83 39
	and.pred  	%p42, %p68, %p64;
	.loc	1 74 38
	or.b32  	%r1760, %r1752, 80;
	.loc	1 83 33
	setp.lt.s32 	%p69, %r1760, %r326;
	.loc	1 83 39
	and.pred  	%p41, %p69, %p64;
	.loc	1 74 38
	or.b32  	%r1761, %r1752, 72;
	.loc	1 83 33
	setp.lt.s32 	%p70, %r1761, %r326;
	.loc	1 83 39
	and.pred  	%p40, %p70, %p64;
	.loc	1 74 38
	or.b32  	%r1762, %r1752, 64;
	.loc	1 83 33
	setp.lt.s32 	%p71, %r1762, %r326;
	.loc	1 83 39
	and.pred  	%p39, %p71, %p64;
	.loc	1 74 38
	or.b32  	%r1763, %r1752, 56;
	.loc	1 83 33
	setp.lt.s32 	%p72, %r1763, %r326;
	.loc	1 83 39
	and.pred  	%p38, %p72, %p64;
	.loc	1 74 38
	or.b32  	%r1764, %r1752, 48;
	.loc	1 83 33
	setp.lt.s32 	%p73, %r1764, %r326;
	.loc	1 83 39
	and.pred  	%p37, %p73, %p64;
	.loc	1 74 38
	or.b32  	%r1765, %r1752, 40;
	.loc	1 83 33
	setp.lt.s32 	%p74, %r1765, %r326;
	.loc	1 83 39
	and.pred  	%p36, %p74, %p64;
	.loc	1 74 38
	or.b32  	%r1766, %r1752, 32;
	.loc	1 83 33
	setp.lt.s32 	%p75, %r1766, %r326;
	.loc	1 83 39
	and.pred  	%p35, %p75, %p64;
	.loc	1 74 38
	or.b32  	%r1767, %r1752, 24;
	.loc	1 83 33
	setp.lt.s32 	%p76, %r1767, %r326;
	.loc	1 83 39
	and.pred  	%p34, %p76, %p64;
	.loc	1 74 38
	or.b32  	%r1768, %r1752, 16;
	.loc	1 83 33
	setp.lt.s32 	%p77, %r1768, %r326;
	.loc	1 83 39
	and.pred  	%p33, %p77, %p64;
	.loc	1 74 38
	or.b32  	%r1769, %r1752, 8;
	.loc	1 83 33
	setp.lt.s32 	%p78, %r1769, %r326;
	.loc	1 83 39
	and.pred  	%p32, %p78, %p64;
	.loc	1 83 33
	setp.lt.s32 	%p79, %r1752, %r326;
	.loc	1 83 39
	and.pred  	%p31, %p79, %p64;
	.loc	1 82 33
	mul.lo.s32 	%r1770, %r1753, %r329;
	.loc	1 82 21
	mul.wide.s32 	%rd90, %r1770, 2;
	add.s64 	%rd91, %rd17, %rd90;
	.loc	1 82 52
	mul.wide.s32 	%rd92, %r1755, 2;
	add.s64 	%rd89, %rd91, %rd92;
	.loc	1 82 33
	shl.b32 	%r1771, %r329, 3;
	sub.s32 	%r1772, %r1770, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd93, %r1772, 2;
	add.s64 	%rd94, %rd17, %rd93;
	.loc	1 82 52
	add.s64 	%rd88, %rd94, %rd92;
	.loc	1 82 33
	sub.s32 	%r1773, %r1772, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd95, %r1773, 2;
	add.s64 	%rd96, %rd17, %rd95;
	.loc	1 82 52
	add.s64 	%rd87, %rd96, %rd92;
	.loc	1 82 33
	sub.s32 	%r1774, %r1773, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd97, %r1774, 2;
	add.s64 	%rd98, %rd17, %rd97;
	.loc	1 82 52
	add.s64 	%rd86, %rd98, %rd92;
	.loc	1 82 33
	sub.s32 	%r1775, %r1774, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd99, %r1775, 2;
	add.s64 	%rd100, %rd17, %rd99;
	.loc	1 82 52
	add.s64 	%rd85, %rd100, %rd92;
	.loc	1 82 33
	sub.s32 	%r1776, %r1775, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd101, %r1776, 2;
	add.s64 	%rd102, %rd17, %rd101;
	.loc	1 82 52
	add.s64 	%rd84, %rd102, %rd92;
	.loc	1 82 33
	sub.s32 	%r1777, %r1776, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd103, %r1777, 2;
	add.s64 	%rd104, %rd17, %rd103;
	.loc	1 82 52
	add.s64 	%rd83, %rd104, %rd92;
	.loc	1 82 33
	sub.s32 	%r1778, %r1777, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd105, %r1778, 2;
	add.s64 	%rd106, %rd17, %rd105;
	.loc	1 82 52
	add.s64 	%rd82, %rd106, %rd92;
	.loc	1 82 33
	sub.s32 	%r1779, %r1778, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd107, %r1779, 2;
	add.s64 	%rd108, %rd17, %rd107;
	.loc	1 82 52
	add.s64 	%rd81, %rd108, %rd92;
	.loc	1 82 33
	sub.s32 	%r1780, %r1779, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd109, %r1780, 2;
	add.s64 	%rd110, %rd17, %rd109;
	.loc	1 82 52
	add.s64 	%rd80, %rd110, %rd92;
	.loc	1 82 33
	sub.s32 	%r1781, %r1780, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd111, %r1781, 2;
	add.s64 	%rd112, %rd17, %rd111;
	.loc	1 82 52
	add.s64 	%rd79, %rd112, %rd92;
	.loc	1 82 33
	sub.s32 	%r1782, %r1781, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd113, %r1782, 2;
	add.s64 	%rd114, %rd17, %rd113;
	.loc	1 82 52
	add.s64 	%rd78, %rd114, %rd92;
	.loc	1 82 33
	sub.s32 	%r1783, %r1782, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd115, %r1783, 2;
	add.s64 	%rd116, %rd17, %rd115;
	.loc	1 82 52
	add.s64 	%rd77, %rd116, %rd92;
	.loc	1 82 33
	sub.s32 	%r1784, %r1783, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd117, %r1784, 2;
	add.s64 	%rd118, %rd17, %rd117;
	.loc	1 82 52
	add.s64 	%rd76, %rd118, %rd92;
	.loc	1 82 33
	sub.s32 	%r1785, %r1784, %r1771;
	.loc	1 82 21
	mul.wide.s32 	%rd119, %r1785, 2;
	add.s64 	%rd120, %rd17, %rd119;
	.loc	1 82 52
	add.s64 	%rd75, %rd120, %rd92;
	.loc	1 82 33
	mul.lo.s32 	%r1786, %r1752, %r329;
	.loc	1 82 21
	mul.wide.s32 	%rd121, %r1786, 2;
	add.s64 	%rd122, %rd17, %rd121;
	.loc	1 82 52
	add.s64 	%rd74, %rd122, %rd92;
	.loc	1 75 51
	and.b32  	%r1787, %r2, 255;
	.loc	1 75 38
	or.b32  	%r1788, %r5, %r1787;
	.loc	1 93 22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 107 31
	mul.wide.s32 	%rd123, %r1788, 2;
	add.s64 	%rd57, %rd18, %rd123;
	.loc	1 108 32
	setp.lt.s32 	%p29, %r1788, %r327;
	mov.u16 	%rs2, 0;
	.loc	1 109 23
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p29 ld.global.b16 { %rs1 }, [ %rd57 + 0 ];
	@!%p29 mov.u16 %rs1, %rs2;
	// end inline asm
	.loc	1 110 30
	shl.b32 	%r1789, %r1787, 1;
	add.s32 	%r1791, %r450, %r1789;
	st.shared.u16 	[%r1791], %rs1;
	bar.sync 	0;
	shl.b32 	%r1792, %r2, 1;
	and.b32  	%r1793, %r1792, 6;
	or.b32  	%r1794, %r35, %r1793;
	shl.b32 	%r1795, %r1794, 1;
	add.s32 	%r1796, %r450, %r1795;
	add.s32 	%r1797, %r1796, 64;
	add.s32 	%r1798, %r1796, 128;
	add.s32 	%r1799, %r1796, 192;
	add.s32 	%r1800, %r1796, 256;
	add.s32 	%r1801, %r1796, 320;
	add.s32 	%r1802, %r1796, 384;
	add.s32 	%r1803, %r1796, 448;
	.loc	1 117 32
	add.s64 	%rd124, %rd19, %rd121;
	add.s64 	%rd125, %rd19, %rd119;
	add.s64 	%rd126, %rd19, %rd117;
	add.s64 	%rd127, %rd19, %rd115;
	add.s64 	%rd128, %rd19, %rd113;
	add.s64 	%rd129, %rd19, %rd111;
	add.s64 	%rd130, %rd19, %rd109;
	add.s64 	%rd131, %rd19, %rd107;
	add.s64 	%rd132, %rd19, %rd105;
	add.s64 	%rd133, %rd19, %rd103;
	add.s64 	%rd134, %rd19, %rd101;
	add.s64 	%rd135, %rd19, %rd99;
	add.s64 	%rd136, %rd19, %rd97;
	add.s64 	%rd137, %rd19, %rd95;
	add.s64 	%rd138, %rd19, %rd93;
	add.s64 	%rd139, %rd19, %rd90;
	.loc	1 117 63
	add.s64 	%rd58, %rd124, %rd92;
	add.s64 	%rd59, %rd125, %rd92;
	add.s64 	%rd60, %rd126, %rd92;
	add.s64 	%rd61, %rd127, %rd92;
	add.s64 	%rd62, %rd128, %rd92;
	add.s64 	%rd63, %rd129, %rd92;
	add.s64 	%rd64, %rd130, %rd92;
	add.s64 	%rd65, %rd131, %rd92;
	add.s64 	%rd66, %rd132, %rd92;
	add.s64 	%rd67, %rd133, %rd92;
	add.s64 	%rd68, %rd134, %rd92;
	add.s64 	%rd69, %rd135, %rd92;
	add.s64 	%rd70, %rd136, %rd92;
	add.s64 	%rd71, %rd137, %rd92;
	add.s64 	%rd72, %rd138, %rd92;
	add.s64 	%rd73, %rd139, %rd92;
	.loc	1 110 30
	ld.shared.b32 	%r1804, [%r1796];
	.loc	1 111 23
	add.f16x2 	%r1805, %r2443, %r1804;
$L__tmp6:
	.loc	1 152 33
	mov.b32 	%r1806, 939538432;
	mul.f16x2 	%r1807, %r1805, %r1806;
	.loc	1 153 90
	mov.b32 	%r1808, 615457967;
	mul.f16x2 	%r1809, %r1805, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1810, %r1805, %r1809;
	.loc	1 153 67
	fma.rn.f16x2 	%r1811, %r1805, %r1810, %r1805;
	.loc	1 153 63
	mov.b32 	%r1812, 980302446;
	mul.f16x2 	%r1813, %r1811, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1814, %r1813, %r1813;
	mov.b32 	{%rs3, %rs4}, %r1814;
	mov.b16 	%rs5, 0x4E32;
	.loc	1 143 45
	add.f16 	%rs6, %rs3, %rs5;
	add.f16 	%rs7, %rs4, %rs5;
	mov.b16 	%rs8, 0x4843;
	.loc	1 143 81
	fma.rn.f16 	%rs9, %rs3, %rs8, %rs5;
	fma.rn.f16 	%rs10, %rs4, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1, %rs6;
	cvt.f32.f16 	%f2, %rs7;
	cvt.f32.f16 	%f3, %rs9;
	cvt.f32.f16 	%f4, %rs10;
	.loc	1 143 18
	mov.b32 	{%rs11, %rs12}, %r1813;
	cvt.f32.f16 	%f5, %rs12;
	cvt.f32.f16 	%f6, %rs11;
	.loc	1 153 12
	mov.b32 	{%rs13, %rs14}, %r1807;
	cvt.f32.f16 	%f7, %rs14;
	cvt.f32.f16 	%f8, %rs13;
$L__tmp7:
	.loc	1 111 23
	add.f16x2 	%r1815, %r2442, %r1804;
$L__tmp8:
	.loc	1 152 33
	mul.f16x2 	%r1816, %r1815, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1817, %r1815, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1818, %r1815, %r1817;
	.loc	1 153 67
	fma.rn.f16x2 	%r1819, %r1815, %r1818, %r1815;
	.loc	1 153 63
	mul.f16x2 	%r1820, %r1819, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1821, %r1820, %r1820;
	mov.b32 	{%rs15, %rs16}, %r1821;
	.loc	1 143 45
	add.f16 	%rs17, %rs15, %rs5;
	add.f16 	%rs18, %rs16, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs19, %rs15, %rs8, %rs5;
	fma.rn.f16 	%rs20, %rs16, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f9, %rs17;
	cvt.f32.f16 	%f10, %rs18;
	cvt.f32.f16 	%f11, %rs19;
	cvt.f32.f16 	%f12, %rs20;
	.loc	1 143 18
	mov.b32 	{%rs21, %rs22}, %r1820;
	cvt.f32.f16 	%f13, %rs22;
	cvt.f32.f16 	%f14, %rs21;
	.loc	1 153 12
	mov.b32 	{%rs23, %rs24}, %r1816;
	cvt.f32.f16 	%f15, %rs24;
	cvt.f32.f16 	%f16, %rs23;
$L__tmp9:
	.loc	1 110 30
	ld.shared.b32 	%r1822, [%r1796+64];
	.loc	1 111 23
	add.f16x2 	%r1823, %r2441, %r1822;
$L__tmp10:
	.loc	1 152 33
	mul.f16x2 	%r1824, %r1823, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1825, %r1823, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1826, %r1823, %r1825;
	.loc	1 153 67
	fma.rn.f16x2 	%r1827, %r1823, %r1826, %r1823;
	.loc	1 153 63
	mul.f16x2 	%r1828, %r1827, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1829, %r1828, %r1828;
	mov.b32 	{%rs25, %rs26}, %r1829;
	.loc	1 143 45
	add.f16 	%rs27, %rs25, %rs5;
	add.f16 	%rs28, %rs26, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs29, %rs25, %rs8, %rs5;
	fma.rn.f16 	%rs30, %rs26, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f17, %rs27;
	cvt.f32.f16 	%f18, %rs28;
	cvt.f32.f16 	%f19, %rs29;
	cvt.f32.f16 	%f20, %rs30;
	.loc	1 143 18
	mov.b32 	{%rs31, %rs32}, %r1828;
	cvt.f32.f16 	%f21, %rs32;
	cvt.f32.f16 	%f22, %rs31;
	.loc	1 153 12
	mov.b32 	{%rs33, %rs34}, %r1824;
	cvt.f32.f16 	%f23, %rs34;
	cvt.f32.f16 	%f24, %rs33;
$L__tmp11:
	.loc	1 111 23
	add.f16x2 	%r1830, %r2440, %r1822;
$L__tmp12:
	.loc	1 152 33
	mul.f16x2 	%r1831, %r1830, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1832, %r1830, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1833, %r1830, %r1832;
	.loc	1 153 67
	fma.rn.f16x2 	%r1834, %r1830, %r1833, %r1830;
	.loc	1 153 63
	mul.f16x2 	%r1835, %r1834, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1836, %r1835, %r1835;
	mov.b32 	{%rs35, %rs36}, %r1836;
	.loc	1 143 45
	add.f16 	%rs37, %rs35, %rs5;
	add.f16 	%rs38, %rs36, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs39, %rs35, %rs8, %rs5;
	fma.rn.f16 	%rs40, %rs36, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f25, %rs37;
	cvt.f32.f16 	%f26, %rs38;
	cvt.f32.f16 	%f27, %rs39;
	cvt.f32.f16 	%f28, %rs40;
	.loc	1 143 18
	mov.b32 	{%rs41, %rs42}, %r1835;
	cvt.f32.f16 	%f29, %rs42;
	cvt.f32.f16 	%f30, %rs41;
	.loc	1 153 12
	mov.b32 	{%rs43, %rs44}, %r1831;
	cvt.f32.f16 	%f31, %rs44;
	cvt.f32.f16 	%f32, %rs43;
$L__tmp13:
	.loc	1 110 30
	ld.shared.b32 	%r1837, [%r1796+128];
	.loc	1 111 23
	add.f16x2 	%r1838, %r2439, %r1837;
$L__tmp14:
	.loc	1 152 33
	mul.f16x2 	%r1839, %r1838, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1840, %r1838, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1841, %r1838, %r1840;
	.loc	1 153 67
	fma.rn.f16x2 	%r1842, %r1838, %r1841, %r1838;
	.loc	1 153 63
	mul.f16x2 	%r1843, %r1842, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1844, %r1843, %r1843;
	mov.b32 	{%rs45, %rs46}, %r1844;
	.loc	1 143 45
	add.f16 	%rs47, %rs45, %rs5;
	add.f16 	%rs48, %rs46, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs49, %rs45, %rs8, %rs5;
	fma.rn.f16 	%rs50, %rs46, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f33, %rs47;
	cvt.f32.f16 	%f34, %rs48;
	cvt.f32.f16 	%f35, %rs49;
	cvt.f32.f16 	%f36, %rs50;
	.loc	1 143 18
	mov.b32 	{%rs51, %rs52}, %r1843;
	cvt.f32.f16 	%f37, %rs52;
	cvt.f32.f16 	%f38, %rs51;
	.loc	1 153 12
	mov.b32 	{%rs53, %rs54}, %r1839;
	cvt.f32.f16 	%f39, %rs54;
	cvt.f32.f16 	%f40, %rs53;
$L__tmp15:
	.loc	1 111 23
	add.f16x2 	%r1845, %r2438, %r1837;
$L__tmp16:
	.loc	1 152 33
	mul.f16x2 	%r1846, %r1845, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1847, %r1845, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1848, %r1845, %r1847;
	.loc	1 153 67
	fma.rn.f16x2 	%r1849, %r1845, %r1848, %r1845;
	.loc	1 153 63
	mul.f16x2 	%r1850, %r1849, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1851, %r1850, %r1850;
	mov.b32 	{%rs55, %rs56}, %r1851;
	.loc	1 143 45
	add.f16 	%rs57, %rs55, %rs5;
	add.f16 	%rs58, %rs56, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs59, %rs55, %rs8, %rs5;
	fma.rn.f16 	%rs60, %rs56, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f41, %rs57;
	cvt.f32.f16 	%f42, %rs58;
	cvt.f32.f16 	%f43, %rs59;
	cvt.f32.f16 	%f44, %rs60;
	.loc	1 143 18
	mov.b32 	{%rs61, %rs62}, %r1850;
	cvt.f32.f16 	%f45, %rs62;
	cvt.f32.f16 	%f46, %rs61;
	.loc	1 153 12
	mov.b32 	{%rs63, %rs64}, %r1846;
	cvt.f32.f16 	%f47, %rs64;
	cvt.f32.f16 	%f48, %rs63;
$L__tmp17:
	.loc	1 110 30
	ld.shared.b32 	%r1852, [%r1796+192];
	.loc	1 111 23
	add.f16x2 	%r1853, %r2437, %r1852;
$L__tmp18:
	.loc	1 152 33
	mul.f16x2 	%r1854, %r1853, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1855, %r1853, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1856, %r1853, %r1855;
	.loc	1 153 67
	fma.rn.f16x2 	%r1857, %r1853, %r1856, %r1853;
	.loc	1 153 63
	mul.f16x2 	%r1858, %r1857, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1859, %r1858, %r1858;
	mov.b32 	{%rs65, %rs66}, %r1859;
	.loc	1 143 45
	add.f16 	%rs67, %rs65, %rs5;
	add.f16 	%rs68, %rs66, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs69, %rs65, %rs8, %rs5;
	fma.rn.f16 	%rs70, %rs66, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f49, %rs67;
	cvt.f32.f16 	%f50, %rs68;
	cvt.f32.f16 	%f51, %rs69;
	cvt.f32.f16 	%f52, %rs70;
	.loc	1 143 18
	mov.b32 	{%rs71, %rs72}, %r1858;
	cvt.f32.f16 	%f53, %rs72;
	cvt.f32.f16 	%f54, %rs71;
	.loc	1 153 12
	mov.b32 	{%rs73, %rs74}, %r1854;
	cvt.f32.f16 	%f55, %rs74;
	cvt.f32.f16 	%f56, %rs73;
$L__tmp19:
	.loc	1 111 23
	add.f16x2 	%r1860, %r2436, %r1852;
$L__tmp20:
	.loc	1 152 33
	mul.f16x2 	%r1861, %r1860, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1862, %r1860, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1863, %r1860, %r1862;
	.loc	1 153 67
	fma.rn.f16x2 	%r1864, %r1860, %r1863, %r1860;
	.loc	1 153 63
	mul.f16x2 	%r1865, %r1864, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1866, %r1865, %r1865;
	mov.b32 	{%rs75, %rs76}, %r1866;
	.loc	1 143 45
	add.f16 	%rs77, %rs75, %rs5;
	add.f16 	%rs78, %rs76, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs79, %rs75, %rs8, %rs5;
	fma.rn.f16 	%rs80, %rs76, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f57, %rs77;
	cvt.f32.f16 	%f58, %rs78;
	cvt.f32.f16 	%f59, %rs79;
	cvt.f32.f16 	%f60, %rs80;
	.loc	1 143 18
	mov.b32 	{%rs81, %rs82}, %r1865;
	cvt.f32.f16 	%f61, %rs82;
	cvt.f32.f16 	%f62, %rs81;
	.loc	1 153 12
	mov.b32 	{%rs83, %rs84}, %r1861;
	cvt.f32.f16 	%f63, %rs84;
	cvt.f32.f16 	%f64, %rs83;
$L__tmp21:
	.loc	1 110 30
	ld.shared.b32 	%r1867, [%r1796+256];
	.loc	1 111 23
	add.f16x2 	%r1868, %r2435, %r1867;
$L__tmp22:
	.loc	1 152 33
	mul.f16x2 	%r1869, %r1868, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1870, %r1868, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1871, %r1868, %r1870;
	.loc	1 153 67
	fma.rn.f16x2 	%r1872, %r1868, %r1871, %r1868;
	.loc	1 153 63
	mul.f16x2 	%r1873, %r1872, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1874, %r1873, %r1873;
	mov.b32 	{%rs85, %rs86}, %r1874;
	.loc	1 143 45
	add.f16 	%rs87, %rs85, %rs5;
	add.f16 	%rs88, %rs86, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs89, %rs85, %rs8, %rs5;
	fma.rn.f16 	%rs90, %rs86, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f65, %rs87;
	cvt.f32.f16 	%f66, %rs88;
	cvt.f32.f16 	%f67, %rs89;
	cvt.f32.f16 	%f68, %rs90;
	.loc	1 143 18
	mov.b32 	{%rs91, %rs92}, %r1873;
	cvt.f32.f16 	%f69, %rs92;
	cvt.f32.f16 	%f70, %rs91;
	.loc	1 153 12
	mov.b32 	{%rs93, %rs94}, %r1869;
	cvt.f32.f16 	%f71, %rs94;
	cvt.f32.f16 	%f72, %rs93;
$L__tmp23:
	.loc	1 111 23
	add.f16x2 	%r1875, %r2434, %r1867;
$L__tmp24:
	.loc	1 152 33
	mul.f16x2 	%r1876, %r1875, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1877, %r1875, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1878, %r1875, %r1877;
	.loc	1 153 67
	fma.rn.f16x2 	%r1879, %r1875, %r1878, %r1875;
	.loc	1 153 63
	mul.f16x2 	%r1880, %r1879, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1881, %r1880, %r1880;
	mov.b32 	{%rs95, %rs96}, %r1881;
	.loc	1 143 45
	add.f16 	%rs97, %rs95, %rs5;
	add.f16 	%rs98, %rs96, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs99, %rs95, %rs8, %rs5;
	fma.rn.f16 	%rs100, %rs96, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f73, %rs97;
	cvt.f32.f16 	%f74, %rs98;
	cvt.f32.f16 	%f75, %rs99;
	cvt.f32.f16 	%f76, %rs100;
	.loc	1 143 18
	mov.b32 	{%rs101, %rs102}, %r1880;
	cvt.f32.f16 	%f77, %rs102;
	cvt.f32.f16 	%f78, %rs101;
	.loc	1 153 12
	mov.b32 	{%rs103, %rs104}, %r1876;
	cvt.f32.f16 	%f79, %rs104;
	cvt.f32.f16 	%f80, %rs103;
$L__tmp25:
	.loc	1 110 30
	ld.shared.b32 	%r1882, [%r1796+320];
	.loc	1 111 23
	add.f16x2 	%r1883, %r2433, %r1882;
$L__tmp26:
	.loc	1 152 33
	mul.f16x2 	%r1884, %r1883, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1885, %r1883, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1886, %r1883, %r1885;
	.loc	1 153 67
	fma.rn.f16x2 	%r1887, %r1883, %r1886, %r1883;
	.loc	1 153 63
	mul.f16x2 	%r1888, %r1887, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1889, %r1888, %r1888;
	mov.b32 	{%rs105, %rs106}, %r1889;
	.loc	1 143 45
	add.f16 	%rs107, %rs105, %rs5;
	add.f16 	%rs108, %rs106, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs109, %rs105, %rs8, %rs5;
	fma.rn.f16 	%rs110, %rs106, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f81, %rs107;
	cvt.f32.f16 	%f82, %rs108;
	cvt.f32.f16 	%f83, %rs109;
	cvt.f32.f16 	%f84, %rs110;
	.loc	1 143 18
	mov.b32 	{%rs111, %rs112}, %r1888;
	cvt.f32.f16 	%f85, %rs112;
	cvt.f32.f16 	%f86, %rs111;
	.loc	1 153 12
	mov.b32 	{%rs113, %rs114}, %r1884;
	cvt.f32.f16 	%f87, %rs114;
	cvt.f32.f16 	%f88, %rs113;
$L__tmp27:
	.loc	1 111 23
	add.f16x2 	%r1890, %r2432, %r1882;
$L__tmp28:
	.loc	1 152 33
	mul.f16x2 	%r1891, %r1890, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1892, %r1890, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1893, %r1890, %r1892;
	.loc	1 153 67
	fma.rn.f16x2 	%r1894, %r1890, %r1893, %r1890;
	.loc	1 153 63
	mul.f16x2 	%r1895, %r1894, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1896, %r1895, %r1895;
	mov.b32 	{%rs115, %rs116}, %r1896;
	.loc	1 143 45
	add.f16 	%rs117, %rs115, %rs5;
	add.f16 	%rs118, %rs116, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs119, %rs115, %rs8, %rs5;
	fma.rn.f16 	%rs120, %rs116, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f89, %rs117;
	cvt.f32.f16 	%f90, %rs118;
	cvt.f32.f16 	%f91, %rs119;
	cvt.f32.f16 	%f92, %rs120;
	.loc	1 143 18
	mov.b32 	{%rs121, %rs122}, %r1895;
	cvt.f32.f16 	%f93, %rs122;
	cvt.f32.f16 	%f94, %rs121;
	.loc	1 153 12
	mov.b32 	{%rs123, %rs124}, %r1891;
	cvt.f32.f16 	%f95, %rs124;
	cvt.f32.f16 	%f96, %rs123;
$L__tmp29:
	.loc	1 110 30
	ld.shared.b32 	%r1897, [%r1796+384];
	.loc	1 111 23
	add.f16x2 	%r1898, %r2431, %r1897;
$L__tmp30:
	.loc	1 152 33
	mul.f16x2 	%r1899, %r1898, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1900, %r1898, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1901, %r1898, %r1900;
	.loc	1 153 67
	fma.rn.f16x2 	%r1902, %r1898, %r1901, %r1898;
	.loc	1 153 63
	mul.f16x2 	%r1903, %r1902, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1904, %r1903, %r1903;
	mov.b32 	{%rs125, %rs126}, %r1904;
	.loc	1 143 45
	add.f16 	%rs127, %rs125, %rs5;
	add.f16 	%rs128, %rs126, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs129, %rs125, %rs8, %rs5;
	fma.rn.f16 	%rs130, %rs126, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f97, %rs127;
	cvt.f32.f16 	%f98, %rs128;
	cvt.f32.f16 	%f99, %rs129;
	cvt.f32.f16 	%f100, %rs130;
	.loc	1 143 18
	mov.b32 	{%rs131, %rs132}, %r1903;
	cvt.f32.f16 	%f101, %rs132;
	cvt.f32.f16 	%f102, %rs131;
	.loc	1 153 12
	mov.b32 	{%rs133, %rs134}, %r1899;
	cvt.f32.f16 	%f103, %rs134;
	cvt.f32.f16 	%f104, %rs133;
$L__tmp31:
	.loc	1 111 23
	add.f16x2 	%r1905, %r2430, %r1897;
$L__tmp32:
	.loc	1 152 33
	mul.f16x2 	%r1906, %r1905, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1907, %r1905, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1908, %r1905, %r1907;
	.loc	1 153 67
	fma.rn.f16x2 	%r1909, %r1905, %r1908, %r1905;
	.loc	1 153 63
	mul.f16x2 	%r1910, %r1909, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1911, %r1910, %r1910;
	mov.b32 	{%rs135, %rs136}, %r1911;
	.loc	1 143 45
	add.f16 	%rs137, %rs135, %rs5;
	add.f16 	%rs138, %rs136, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs139, %rs135, %rs8, %rs5;
	fma.rn.f16 	%rs140, %rs136, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f105, %rs137;
	cvt.f32.f16 	%f106, %rs138;
	cvt.f32.f16 	%f107, %rs139;
	cvt.f32.f16 	%f108, %rs140;
	.loc	1 143 18
	mov.b32 	{%rs141, %rs142}, %r1910;
	cvt.f32.f16 	%f109, %rs142;
	cvt.f32.f16 	%f110, %rs141;
	.loc	1 153 12
	mov.b32 	{%rs143, %rs144}, %r1906;
	cvt.f32.f16 	%f111, %rs144;
	cvt.f32.f16 	%f112, %rs143;
$L__tmp33:
	.loc	1 110 30
	ld.shared.b32 	%r1912, [%r1796+448];
	.loc	1 111 23
	add.f16x2 	%r1913, %r2429, %r1912;
$L__tmp34:
	.loc	1 152 33
	mul.f16x2 	%r1914, %r1913, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1915, %r1913, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1916, %r1913, %r1915;
	.loc	1 153 67
	fma.rn.f16x2 	%r1917, %r1913, %r1916, %r1913;
	.loc	1 153 63
	mul.f16x2 	%r1918, %r1917, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1919, %r1918, %r1918;
	mov.b32 	{%rs145, %rs146}, %r1919;
	.loc	1 143 45
	add.f16 	%rs147, %rs145, %rs5;
	add.f16 	%rs148, %rs146, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs149, %rs145, %rs8, %rs5;
	fma.rn.f16 	%rs150, %rs146, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f113, %rs147;
	cvt.f32.f16 	%f114, %rs148;
	cvt.f32.f16 	%f115, %rs149;
	cvt.f32.f16 	%f116, %rs150;
	.loc	1 143 18
	mov.b32 	{%rs151, %rs152}, %r1918;
	cvt.f32.f16 	%f117, %rs152;
	cvt.f32.f16 	%f118, %rs151;
	.loc	1 153 12
	mov.b32 	{%rs153, %rs154}, %r1914;
	cvt.f32.f16 	%f119, %rs154;
	cvt.f32.f16 	%f120, %rs153;
	.loc	1 143 54
	mov.b32 	%r1240, %f1;
	mov.b32 	%r1241, %f3;
	// begin inline asm
	div.full.f32 %r1239, %r1240, %r1241;
	// end inline asm
	mov.b32 	%f121, %r1239;
	mov.b32 	%r1243, %f2;
	mov.b32 	%r1244, %f4;
	// begin inline asm
	div.full.f32 %r1242, %r1243, %r1244;
	// end inline asm
	mov.b32 	%f122, %r1242;
	.loc	1 143 18
	mul.f32 	%f123, %f121, %f6;
	mul.f32 	%f124, %f122, %f5;
	.loc	1 144 54
	max.f32 	%f125, %f124, 0fBF800000;
	max.f32 	%f126, %f123, 0fBF800000;
	min.f32 	%f127, %f126, 0f3F800000;
	min.f32 	%f128, %f125, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f129, %f128, 0f3F800000;
	add.f32 	%f130, %f127, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f131, %f130, %f8;
	mul.f32 	%f132, %f129, %f7;
$L__tmp35:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs155, %f132;
	cvt.rn.f16.f32 	%rs156, %f131;
	mov.b32 	%r1920, {%rs156, %rs155};
$L__tmp36:
	.loc	1 143 54
	mov.b32 	%r1246, %f9;
	mov.b32 	%r1247, %f11;
	// begin inline asm
	div.full.f32 %r1245, %r1246, %r1247;
	// end inline asm
	mov.b32 	%f133, %r1245;
	mov.b32 	%r1249, %f10;
	mov.b32 	%r1250, %f12;
	// begin inline asm
	div.full.f32 %r1248, %r1249, %r1250;
	// end inline asm
	mov.b32 	%f134, %r1248;
	mov.b32 	%r1252, %f17;
	mov.b32 	%r1253, %f19;
	// begin inline asm
	div.full.f32 %r1251, %r1252, %r1253;
	// end inline asm
	mov.b32 	%f135, %r1251;
	mov.b32 	%r1255, %f18;
	mov.b32 	%r1256, %f20;
	// begin inline asm
	div.full.f32 %r1254, %r1255, %r1256;
	// end inline asm
	mov.b32 	%f136, %r1254;
	.loc	1 143 18
	mul.f32 	%f137, %f133, %f14;
	mul.f32 	%f138, %f134, %f13;
	mul.f32 	%f139, %f135, %f22;
	mul.f32 	%f140, %f136, %f21;
	.loc	1 144 54
	max.f32 	%f141, %f138, 0fBF800000;
	max.f32 	%f142, %f137, 0fBF800000;
	min.f32 	%f143, %f142, 0f3F800000;
	min.f32 	%f144, %f141, 0f3F800000;
	max.f32 	%f145, %f140, 0fBF800000;
	max.f32 	%f146, %f139, 0fBF800000;
	min.f32 	%f147, %f146, 0f3F800000;
	min.f32 	%f148, %f145, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f149, %f144, 0f3F800000;
	add.f32 	%f150, %f143, 0f3F800000;
	add.f32 	%f151, %f148, 0f3F800000;
	add.f32 	%f152, %f147, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f153, %f150, %f16;
	mul.f32 	%f154, %f149, %f15;
	mul.f32 	%f155, %f152, %f24;
	mul.f32 	%f156, %f151, %f23;
$L__tmp37:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs157, %f154;
	cvt.rn.f16.f32 	%rs158, %f153;
	mov.b32 	%r1921, {%rs158, %rs157};
	cvt.rn.f16.f32 	%rs159, %f156;
	cvt.rn.f16.f32 	%rs160, %f155;
	mov.b32 	%r1922, {%rs160, %rs159};
$L__tmp38:
	.loc	1 143 54
	mov.b32 	%r1258, %f25;
	mov.b32 	%r1259, %f27;
	// begin inline asm
	div.full.f32 %r1257, %r1258, %r1259;
	// end inline asm
	mov.b32 	%f157, %r1257;
	mov.b32 	%r1261, %f26;
	mov.b32 	%r1262, %f28;
	// begin inline asm
	div.full.f32 %r1260, %r1261, %r1262;
	// end inline asm
	mov.b32 	%f158, %r1260;
	mov.b32 	%r1264, %f33;
	mov.b32 	%r1265, %f35;
	// begin inline asm
	div.full.f32 %r1263, %r1264, %r1265;
	// end inline asm
	mov.b32 	%f159, %r1263;
	mov.b32 	%r1267, %f34;
	mov.b32 	%r1268, %f36;
	// begin inline asm
	div.full.f32 %r1266, %r1267, %r1268;
	// end inline asm
	mov.b32 	%f160, %r1266;
	.loc	1 143 18
	mul.f32 	%f161, %f157, %f30;
	mul.f32 	%f162, %f158, %f29;
	mul.f32 	%f163, %f159, %f38;
	mul.f32 	%f164, %f160, %f37;
	.loc	1 144 54
	max.f32 	%f165, %f162, 0fBF800000;
	max.f32 	%f166, %f161, 0fBF800000;
	min.f32 	%f167, %f166, 0f3F800000;
	min.f32 	%f168, %f165, 0f3F800000;
	max.f32 	%f169, %f164, 0fBF800000;
	max.f32 	%f170, %f163, 0fBF800000;
	min.f32 	%f171, %f170, 0f3F800000;
	min.f32 	%f172, %f169, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f173, %f168, 0f3F800000;
	add.f32 	%f174, %f167, 0f3F800000;
	add.f32 	%f175, %f172, 0f3F800000;
	add.f32 	%f176, %f171, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f177, %f174, %f32;
	mul.f32 	%f178, %f173, %f31;
	mul.f32 	%f179, %f176, %f40;
	mul.f32 	%f180, %f175, %f39;
$L__tmp39:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs161, %f178;
	cvt.rn.f16.f32 	%rs162, %f177;
	mov.b32 	%r1923, {%rs162, %rs161};
	cvt.rn.f16.f32 	%rs163, %f180;
	cvt.rn.f16.f32 	%rs164, %f179;
	mov.b32 	%r1924, {%rs164, %rs163};
$L__tmp40:
	.loc	1 143 54
	mov.b32 	%r1270, %f41;
	mov.b32 	%r1271, %f43;
	// begin inline asm
	div.full.f32 %r1269, %r1270, %r1271;
	// end inline asm
	mov.b32 	%f181, %r1269;
	mov.b32 	%r1273, %f42;
	mov.b32 	%r1274, %f44;
	// begin inline asm
	div.full.f32 %r1272, %r1273, %r1274;
	// end inline asm
	mov.b32 	%f182, %r1272;
	mov.b32 	%r1276, %f49;
	mov.b32 	%r1277, %f51;
	// begin inline asm
	div.full.f32 %r1275, %r1276, %r1277;
	// end inline asm
	mov.b32 	%f183, %r1275;
	mov.b32 	%r1279, %f50;
	mov.b32 	%r1280, %f52;
	// begin inline asm
	div.full.f32 %r1278, %r1279, %r1280;
	// end inline asm
	mov.b32 	%f184, %r1278;
	.loc	1 143 18
	mul.f32 	%f185, %f181, %f46;
	mul.f32 	%f186, %f182, %f45;
	mul.f32 	%f187, %f183, %f54;
	mul.f32 	%f188, %f184, %f53;
	.loc	1 144 54
	max.f32 	%f189, %f186, 0fBF800000;
	max.f32 	%f190, %f185, 0fBF800000;
	min.f32 	%f191, %f190, 0f3F800000;
	min.f32 	%f192, %f189, 0f3F800000;
	max.f32 	%f193, %f188, 0fBF800000;
	max.f32 	%f194, %f187, 0fBF800000;
	min.f32 	%f195, %f194, 0f3F800000;
	min.f32 	%f196, %f193, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f197, %f192, 0f3F800000;
	add.f32 	%f198, %f191, 0f3F800000;
	add.f32 	%f199, %f196, 0f3F800000;
	add.f32 	%f200, %f195, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f201, %f198, %f48;
	mul.f32 	%f202, %f197, %f47;
	mul.f32 	%f203, %f200, %f56;
	mul.f32 	%f204, %f199, %f55;
$L__tmp41:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs165, %f202;
	cvt.rn.f16.f32 	%rs166, %f201;
	mov.b32 	%r1925, {%rs166, %rs165};
	cvt.rn.f16.f32 	%rs167, %f204;
	cvt.rn.f16.f32 	%rs168, %f203;
	mov.b32 	%r1926, {%rs168, %rs167};
$L__tmp42:
	.loc	1 143 54
	mov.b32 	%r1282, %f57;
	mov.b32 	%r1283, %f59;
	// begin inline asm
	div.full.f32 %r1281, %r1282, %r1283;
	// end inline asm
	mov.b32 	%f205, %r1281;
	mov.b32 	%r1285, %f58;
	mov.b32 	%r1286, %f60;
	// begin inline asm
	div.full.f32 %r1284, %r1285, %r1286;
	// end inline asm
	mov.b32 	%f206, %r1284;
	mov.b32 	%r1288, %f65;
	mov.b32 	%r1289, %f67;
	// begin inline asm
	div.full.f32 %r1287, %r1288, %r1289;
	// end inline asm
	mov.b32 	%f207, %r1287;
	mov.b32 	%r1291, %f66;
	mov.b32 	%r1292, %f68;
	// begin inline asm
	div.full.f32 %r1290, %r1291, %r1292;
	// end inline asm
	mov.b32 	%f208, %r1290;
	.loc	1 143 18
	mul.f32 	%f209, %f205, %f62;
	mul.f32 	%f210, %f206, %f61;
	mul.f32 	%f211, %f207, %f70;
	mul.f32 	%f212, %f208, %f69;
	.loc	1 144 54
	max.f32 	%f213, %f210, 0fBF800000;
	max.f32 	%f214, %f209, 0fBF800000;
	min.f32 	%f215, %f214, 0f3F800000;
	min.f32 	%f216, %f213, 0f3F800000;
	max.f32 	%f217, %f212, 0fBF800000;
	max.f32 	%f218, %f211, 0fBF800000;
	min.f32 	%f219, %f218, 0f3F800000;
	min.f32 	%f220, %f217, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f221, %f216, 0f3F800000;
	add.f32 	%f222, %f215, 0f3F800000;
	add.f32 	%f223, %f220, 0f3F800000;
	add.f32 	%f224, %f219, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f225, %f222, %f64;
	mul.f32 	%f226, %f221, %f63;
	mul.f32 	%f227, %f224, %f72;
	mul.f32 	%f228, %f223, %f71;
$L__tmp43:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs169, %f226;
	cvt.rn.f16.f32 	%rs170, %f225;
	mov.b32 	%r1927, {%rs170, %rs169};
	cvt.rn.f16.f32 	%rs171, %f228;
	cvt.rn.f16.f32 	%rs172, %f227;
	mov.b32 	%r1928, {%rs172, %rs171};
$L__tmp44:
	.loc	1 143 54
	mov.b32 	%r1294, %f73;
	mov.b32 	%r1295, %f75;
	// begin inline asm
	div.full.f32 %r1293, %r1294, %r1295;
	// end inline asm
	mov.b32 	%f229, %r1293;
	mov.b32 	%r1297, %f74;
	mov.b32 	%r1298, %f76;
	// begin inline asm
	div.full.f32 %r1296, %r1297, %r1298;
	// end inline asm
	mov.b32 	%f230, %r1296;
	mov.b32 	%r1300, %f81;
	mov.b32 	%r1301, %f83;
	// begin inline asm
	div.full.f32 %r1299, %r1300, %r1301;
	// end inline asm
	mov.b32 	%f231, %r1299;
	mov.b32 	%r1303, %f82;
	mov.b32 	%r1304, %f84;
	// begin inline asm
	div.full.f32 %r1302, %r1303, %r1304;
	// end inline asm
	mov.b32 	%f232, %r1302;
	.loc	1 143 18
	mul.f32 	%f233, %f229, %f78;
	mul.f32 	%f234, %f230, %f77;
	mul.f32 	%f235, %f231, %f86;
	mul.f32 	%f236, %f232, %f85;
	.loc	1 144 54
	max.f32 	%f237, %f234, 0fBF800000;
	max.f32 	%f238, %f233, 0fBF800000;
	min.f32 	%f239, %f238, 0f3F800000;
	min.f32 	%f240, %f237, 0f3F800000;
	max.f32 	%f241, %f236, 0fBF800000;
	max.f32 	%f242, %f235, 0fBF800000;
	min.f32 	%f243, %f242, 0f3F800000;
	min.f32 	%f244, %f241, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f245, %f240, 0f3F800000;
	add.f32 	%f246, %f239, 0f3F800000;
	add.f32 	%f247, %f244, 0f3F800000;
	add.f32 	%f248, %f243, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f249, %f246, %f80;
	mul.f32 	%f250, %f245, %f79;
	mul.f32 	%f251, %f248, %f88;
	mul.f32 	%f252, %f247, %f87;
$L__tmp45:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs173, %f250;
	cvt.rn.f16.f32 	%rs174, %f249;
	mov.b32 	%r1929, {%rs174, %rs173};
	cvt.rn.f16.f32 	%rs175, %f252;
	cvt.rn.f16.f32 	%rs176, %f251;
	mov.b32 	%r1930, {%rs176, %rs175};
$L__tmp46:
	.loc	1 143 54
	mov.b32 	%r1306, %f89;
	mov.b32 	%r1307, %f91;
	// begin inline asm
	div.full.f32 %r1305, %r1306, %r1307;
	// end inline asm
	mov.b32 	%f253, %r1305;
	mov.b32 	%r1309, %f90;
	mov.b32 	%r1310, %f92;
	// begin inline asm
	div.full.f32 %r1308, %r1309, %r1310;
	// end inline asm
	mov.b32 	%f254, %r1308;
	mov.b32 	%r1312, %f97;
	mov.b32 	%r1313, %f99;
	// begin inline asm
	div.full.f32 %r1311, %r1312, %r1313;
	// end inline asm
	mov.b32 	%f255, %r1311;
	mov.b32 	%r1315, %f98;
	mov.b32 	%r1316, %f100;
	// begin inline asm
	div.full.f32 %r1314, %r1315, %r1316;
	// end inline asm
	mov.b32 	%f256, %r1314;
	.loc	1 143 18
	mul.f32 	%f257, %f253, %f94;
	mul.f32 	%f258, %f254, %f93;
	mul.f32 	%f259, %f255, %f102;
	mul.f32 	%f260, %f256, %f101;
	.loc	1 144 54
	max.f32 	%f261, %f258, 0fBF800000;
	max.f32 	%f262, %f257, 0fBF800000;
	min.f32 	%f263, %f262, 0f3F800000;
	min.f32 	%f264, %f261, 0f3F800000;
	max.f32 	%f265, %f260, 0fBF800000;
	max.f32 	%f266, %f259, 0fBF800000;
	min.f32 	%f267, %f266, 0f3F800000;
	min.f32 	%f268, %f265, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f269, %f264, 0f3F800000;
	add.f32 	%f270, %f263, 0f3F800000;
	add.f32 	%f271, %f268, 0f3F800000;
	add.f32 	%f272, %f267, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f273, %f270, %f96;
	mul.f32 	%f274, %f269, %f95;
	mul.f32 	%f275, %f272, %f104;
	mul.f32 	%f276, %f271, %f103;
$L__tmp47:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs177, %f274;
	cvt.rn.f16.f32 	%rs178, %f273;
	mov.b32 	%r1931, {%rs178, %rs177};
	cvt.rn.f16.f32 	%rs179, %f276;
	cvt.rn.f16.f32 	%rs180, %f275;
	mov.b32 	%r1932, {%rs180, %rs179};
$L__tmp48:
	.loc	1 143 54
	mov.b32 	%r1318, %f105;
	mov.b32 	%r1319, %f107;
	// begin inline asm
	div.full.f32 %r1317, %r1318, %r1319;
	// end inline asm
	mov.b32 	%f277, %r1317;
	mov.b32 	%r1321, %f106;
	mov.b32 	%r1322, %f108;
	// begin inline asm
	div.full.f32 %r1320, %r1321, %r1322;
	// end inline asm
	mov.b32 	%f278, %r1320;
	mov.b32 	%r1324, %f113;
	mov.b32 	%r1325, %f115;
	// begin inline asm
	div.full.f32 %r1323, %r1324, %r1325;
	// end inline asm
	mov.b32 	%f279, %r1323;
	mov.b32 	%r1327, %f114;
	mov.b32 	%r1328, %f116;
	// begin inline asm
	div.full.f32 %r1326, %r1327, %r1328;
	// end inline asm
	mov.b32 	%f280, %r1326;
	.loc	1 143 18
	mul.f32 	%f281, %f277, %f110;
	mul.f32 	%f282, %f278, %f109;
	mul.f32 	%f283, %f279, %f118;
	mul.f32 	%f284, %f280, %f117;
	.loc	1 144 54
	max.f32 	%f285, %f282, 0fBF800000;
	max.f32 	%f286, %f281, 0fBF800000;
	min.f32 	%f287, %f286, 0f3F800000;
	min.f32 	%f288, %f285, 0f3F800000;
	max.f32 	%f289, %f284, 0fBF800000;
	max.f32 	%f290, %f283, 0fBF800000;
	min.f32 	%f291, %f290, 0f3F800000;
	min.f32 	%f292, %f289, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f293, %f288, 0f3F800000;
	add.f32 	%f294, %f287, 0f3F800000;
	add.f32 	%f295, %f292, 0f3F800000;
	add.f32 	%f296, %f291, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f297, %f294, %f112;
	mul.f32 	%f298, %f293, %f111;
	mul.f32 	%f299, %f296, %f120;
	mul.f32 	%f300, %f295, %f119;
$L__tmp49:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs181, %f298;
	cvt.rn.f16.f32 	%rs182, %f297;
	mov.b32 	%r1933, {%rs182, %rs181};
	cvt.rn.f16.f32 	%rs183, %f300;
	cvt.rn.f16.f32 	%rs184, %f299;
	mov.b32 	%r1934, {%rs184, %rs183};
	.loc	1 111 23
	add.f16x2 	%r1935, %r2428, %r1912;
$L__tmp50:
	.loc	1 152 33
	mul.f16x2 	%r1936, %r1935, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1937, %r1935, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1938, %r1935, %r1937;
	.loc	1 153 67
	fma.rn.f16x2 	%r1939, %r1935, %r1938, %r1935;
	.loc	1 153 63
	mul.f16x2 	%r1940, %r1939, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1941, %r1940, %r1940;
	mov.b32 	{%rs185, %rs186}, %r1941;
	.loc	1 143 45
	add.f16 	%rs187, %rs185, %rs5;
	add.f16 	%rs188, %rs186, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs189, %rs185, %rs8, %rs5;
	fma.rn.f16 	%rs190, %rs186, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f301, %rs187;
	cvt.f32.f16 	%f302, %rs188;
	cvt.f32.f16 	%f303, %rs189;
	cvt.f32.f16 	%f304, %rs190;
	.loc	1 143 18
	mov.b32 	{%rs191, %rs192}, %r1940;
	cvt.f32.f16 	%f305, %rs192;
	cvt.f32.f16 	%f306, %rs191;
	.loc	1 153 12
	mov.b32 	{%rs193, %rs194}, %r1936;
	cvt.f32.f16 	%f307, %rs194;
	cvt.f32.f16 	%f308, %rs193;
	.loc	1 143 54
	mov.b32 	%r1330, %f301;
	mov.b32 	%r1331, %f303;
	// begin inline asm
	div.full.f32 %r1329, %r1330, %r1331;
	// end inline asm
	mov.b32 	%f309, %r1329;
	mov.b32 	%r1333, %f302;
	mov.b32 	%r1334, %f304;
	// begin inline asm
	div.full.f32 %r1332, %r1333, %r1334;
	// end inline asm
	mov.b32 	%f310, %r1332;
	.loc	1 143 18
	mul.f32 	%f311, %f309, %f306;
	mul.f32 	%f312, %f310, %f305;
	.loc	1 144 54
	max.f32 	%f313, %f312, 0fBF800000;
	max.f32 	%f314, %f311, 0fBF800000;
	min.f32 	%f315, %f314, 0f3F800000;
	min.f32 	%f316, %f313, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f317, %f316, 0f3F800000;
	add.f32 	%f318, %f315, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f319, %f318, %f308;
	mul.f32 	%f320, %f317, %f307;
$L__tmp51:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs195, %f320;
	cvt.rn.f16.f32 	%rs196, %f319;
	mov.b32 	%r1942, {%rs196, %rs195};
	.loc	1 111 23
	add.f16x2 	%r1943, %r2427, %r1804;
$L__tmp52:
	.loc	1 152 33
	mul.f16x2 	%r1944, %r1943, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1945, %r1943, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1946, %r1943, %r1945;
	.loc	1 153 67
	fma.rn.f16x2 	%r1947, %r1943, %r1946, %r1943;
	.loc	1 153 63
	mul.f16x2 	%r1948, %r1947, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1949, %r1948, %r1948;
	mov.b32 	{%rs197, %rs198}, %r1949;
	.loc	1 143 45
	add.f16 	%rs199, %rs197, %rs5;
	add.f16 	%rs200, %rs198, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs201, %rs197, %rs8, %rs5;
	fma.rn.f16 	%rs202, %rs198, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f321, %rs199;
	cvt.f32.f16 	%f322, %rs200;
	cvt.f32.f16 	%f323, %rs201;
	cvt.f32.f16 	%f324, %rs202;
	.loc	1 143 18
	mov.b32 	{%rs203, %rs204}, %r1948;
	cvt.f32.f16 	%f325, %rs204;
	cvt.f32.f16 	%f326, %rs203;
	.loc	1 153 12
	mov.b32 	{%rs205, %rs206}, %r1944;
	cvt.f32.f16 	%f327, %rs206;
	cvt.f32.f16 	%f328, %rs205;
	.loc	1 143 54
	mov.b32 	%r1336, %f321;
	mov.b32 	%r1337, %f323;
	// begin inline asm
	div.full.f32 %r1335, %r1336, %r1337;
	// end inline asm
	mov.b32 	%f329, %r1335;
	mov.b32 	%r1339, %f322;
	mov.b32 	%r1340, %f324;
	// begin inline asm
	div.full.f32 %r1338, %r1339, %r1340;
	// end inline asm
	mov.b32 	%f330, %r1338;
	.loc	1 143 18
	mul.f32 	%f331, %f329, %f326;
	mul.f32 	%f332, %f330, %f325;
	.loc	1 144 54
	max.f32 	%f333, %f332, 0fBF800000;
	max.f32 	%f334, %f331, 0fBF800000;
	min.f32 	%f335, %f334, 0f3F800000;
	min.f32 	%f336, %f333, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f337, %f336, 0f3F800000;
	add.f32 	%f338, %f335, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f339, %f338, %f328;
	mul.f32 	%f340, %f337, %f327;
$L__tmp53:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs207, %f340;
	cvt.rn.f16.f32 	%rs208, %f339;
	mov.b32 	%r1950, {%rs208, %rs207};
	.loc	1 111 23
	add.f16x2 	%r1951, %r2426, %r1804;
$L__tmp54:
	.loc	1 152 33
	mul.f16x2 	%r1952, %r1951, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1953, %r1951, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1954, %r1951, %r1953;
	.loc	1 153 67
	fma.rn.f16x2 	%r1955, %r1951, %r1954, %r1951;
	.loc	1 153 63
	mul.f16x2 	%r1956, %r1955, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1957, %r1956, %r1956;
	mov.b32 	{%rs209, %rs210}, %r1957;
	.loc	1 143 45
	add.f16 	%rs211, %rs209, %rs5;
	add.f16 	%rs212, %rs210, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs213, %rs209, %rs8, %rs5;
	fma.rn.f16 	%rs214, %rs210, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f341, %rs211;
	cvt.f32.f16 	%f342, %rs212;
	cvt.f32.f16 	%f343, %rs213;
	cvt.f32.f16 	%f344, %rs214;
	.loc	1 143 18
	mov.b32 	{%rs215, %rs216}, %r1956;
	cvt.f32.f16 	%f345, %rs216;
	cvt.f32.f16 	%f346, %rs215;
	.loc	1 153 12
	mov.b32 	{%rs217, %rs218}, %r1952;
	cvt.f32.f16 	%f347, %rs218;
	cvt.f32.f16 	%f348, %rs217;
	.loc	1 143 54
	mov.b32 	%r1342, %f341;
	mov.b32 	%r1343, %f343;
	// begin inline asm
	div.full.f32 %r1341, %r1342, %r1343;
	// end inline asm
	mov.b32 	%f349, %r1341;
	mov.b32 	%r1345, %f342;
	mov.b32 	%r1346, %f344;
	// begin inline asm
	div.full.f32 %r1344, %r1345, %r1346;
	// end inline asm
	mov.b32 	%f350, %r1344;
	.loc	1 143 18
	mul.f32 	%f351, %f349, %f346;
	mul.f32 	%f352, %f350, %f345;
	.loc	1 144 54
	max.f32 	%f353, %f352, 0fBF800000;
	max.f32 	%f354, %f351, 0fBF800000;
	min.f32 	%f355, %f354, 0f3F800000;
	min.f32 	%f356, %f353, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f357, %f356, 0f3F800000;
	add.f32 	%f358, %f355, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f359, %f358, %f348;
	mul.f32 	%f360, %f357, %f347;
$L__tmp55:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs219, %f360;
	cvt.rn.f16.f32 	%rs220, %f359;
	mov.b32 	%r1958, {%rs220, %rs219};
	.loc	1 111 23
	add.f16x2 	%r1959, %r2425, %r1822;
$L__tmp56:
	.loc	1 152 33
	mul.f16x2 	%r1960, %r1959, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1961, %r1959, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1962, %r1959, %r1961;
	.loc	1 153 67
	fma.rn.f16x2 	%r1963, %r1959, %r1962, %r1959;
	.loc	1 153 63
	mul.f16x2 	%r1964, %r1963, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1965, %r1964, %r1964;
	mov.b32 	{%rs221, %rs222}, %r1965;
	.loc	1 143 45
	add.f16 	%rs223, %rs221, %rs5;
	add.f16 	%rs224, %rs222, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs225, %rs221, %rs8, %rs5;
	fma.rn.f16 	%rs226, %rs222, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f361, %rs223;
	cvt.f32.f16 	%f362, %rs224;
	cvt.f32.f16 	%f363, %rs225;
	cvt.f32.f16 	%f364, %rs226;
	.loc	1 143 18
	mov.b32 	{%rs227, %rs228}, %r1964;
	cvt.f32.f16 	%f365, %rs228;
	cvt.f32.f16 	%f366, %rs227;
	.loc	1 153 12
	mov.b32 	{%rs229, %rs230}, %r1960;
	cvt.f32.f16 	%f367, %rs230;
	cvt.f32.f16 	%f368, %rs229;
	.loc	1 143 54
	mov.b32 	%r1348, %f361;
	mov.b32 	%r1349, %f363;
	// begin inline asm
	div.full.f32 %r1347, %r1348, %r1349;
	// end inline asm
	mov.b32 	%f369, %r1347;
	mov.b32 	%r1351, %f362;
	mov.b32 	%r1352, %f364;
	// begin inline asm
	div.full.f32 %r1350, %r1351, %r1352;
	// end inline asm
	mov.b32 	%f370, %r1350;
	.loc	1 143 18
	mul.f32 	%f371, %f369, %f366;
	mul.f32 	%f372, %f370, %f365;
	.loc	1 144 54
	max.f32 	%f373, %f372, 0fBF800000;
	max.f32 	%f374, %f371, 0fBF800000;
	min.f32 	%f375, %f374, 0f3F800000;
	min.f32 	%f376, %f373, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f377, %f376, 0f3F800000;
	add.f32 	%f378, %f375, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f379, %f378, %f368;
	mul.f32 	%f380, %f377, %f367;
$L__tmp57:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs231, %f380;
	cvt.rn.f16.f32 	%rs232, %f379;
	mov.b32 	%r1966, {%rs232, %rs231};
	.loc	1 111 23
	add.f16x2 	%r1967, %r2424, %r1822;
$L__tmp58:
	.loc	1 152 33
	mul.f16x2 	%r1968, %r1967, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1969, %r1967, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1970, %r1967, %r1969;
	.loc	1 153 67
	fma.rn.f16x2 	%r1971, %r1967, %r1970, %r1967;
	.loc	1 153 63
	mul.f16x2 	%r1972, %r1971, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1973, %r1972, %r1972;
	mov.b32 	{%rs233, %rs234}, %r1973;
	.loc	1 143 45
	add.f16 	%rs235, %rs233, %rs5;
	add.f16 	%rs236, %rs234, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs237, %rs233, %rs8, %rs5;
	fma.rn.f16 	%rs238, %rs234, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f381, %rs235;
	cvt.f32.f16 	%f382, %rs236;
	cvt.f32.f16 	%f383, %rs237;
	cvt.f32.f16 	%f384, %rs238;
	.loc	1 143 18
	mov.b32 	{%rs239, %rs240}, %r1972;
	cvt.f32.f16 	%f385, %rs240;
	cvt.f32.f16 	%f386, %rs239;
	.loc	1 153 12
	mov.b32 	{%rs241, %rs242}, %r1968;
	cvt.f32.f16 	%f387, %rs242;
	cvt.f32.f16 	%f388, %rs241;
	.loc	1 143 54
	mov.b32 	%r1354, %f381;
	mov.b32 	%r1355, %f383;
	// begin inline asm
	div.full.f32 %r1353, %r1354, %r1355;
	// end inline asm
	mov.b32 	%f389, %r1353;
	mov.b32 	%r1357, %f382;
	mov.b32 	%r1358, %f384;
	// begin inline asm
	div.full.f32 %r1356, %r1357, %r1358;
	// end inline asm
	mov.b32 	%f390, %r1356;
	.loc	1 143 18
	mul.f32 	%f391, %f389, %f386;
	mul.f32 	%f392, %f390, %f385;
	.loc	1 144 54
	max.f32 	%f393, %f392, 0fBF800000;
	max.f32 	%f394, %f391, 0fBF800000;
	min.f32 	%f395, %f394, 0f3F800000;
	min.f32 	%f396, %f393, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f397, %f396, 0f3F800000;
	add.f32 	%f398, %f395, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f399, %f398, %f388;
	mul.f32 	%f400, %f397, %f387;
$L__tmp59:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs243, %f400;
	cvt.rn.f16.f32 	%rs244, %f399;
	mov.b32 	%r1974, {%rs244, %rs243};
	.loc	1 111 23
	add.f16x2 	%r1975, %r2423, %r1837;
$L__tmp60:
	.loc	1 152 33
	mul.f16x2 	%r1976, %r1975, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1977, %r1975, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1978, %r1975, %r1977;
	.loc	1 153 67
	fma.rn.f16x2 	%r1979, %r1975, %r1978, %r1975;
	.loc	1 153 63
	mul.f16x2 	%r1980, %r1979, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1981, %r1980, %r1980;
	mov.b32 	{%rs245, %rs246}, %r1981;
	.loc	1 143 45
	add.f16 	%rs247, %rs245, %rs5;
	add.f16 	%rs248, %rs246, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs249, %rs245, %rs8, %rs5;
	fma.rn.f16 	%rs250, %rs246, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f401, %rs247;
	cvt.f32.f16 	%f402, %rs248;
	cvt.f32.f16 	%f403, %rs249;
	cvt.f32.f16 	%f404, %rs250;
	.loc	1 143 18
	mov.b32 	{%rs251, %rs252}, %r1980;
	cvt.f32.f16 	%f405, %rs252;
	cvt.f32.f16 	%f406, %rs251;
	.loc	1 153 12
	mov.b32 	{%rs253, %rs254}, %r1976;
	cvt.f32.f16 	%f407, %rs254;
	cvt.f32.f16 	%f408, %rs253;
	.loc	1 143 54
	mov.b32 	%r1360, %f401;
	mov.b32 	%r1361, %f403;
	// begin inline asm
	div.full.f32 %r1359, %r1360, %r1361;
	// end inline asm
	mov.b32 	%f409, %r1359;
	mov.b32 	%r1363, %f402;
	mov.b32 	%r1364, %f404;
	// begin inline asm
	div.full.f32 %r1362, %r1363, %r1364;
	// end inline asm
	mov.b32 	%f410, %r1362;
	.loc	1 143 18
	mul.f32 	%f411, %f409, %f406;
	mul.f32 	%f412, %f410, %f405;
	.loc	1 144 54
	max.f32 	%f413, %f412, 0fBF800000;
	max.f32 	%f414, %f411, 0fBF800000;
	min.f32 	%f415, %f414, 0f3F800000;
	min.f32 	%f416, %f413, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f417, %f416, 0f3F800000;
	add.f32 	%f418, %f415, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f419, %f418, %f408;
	mul.f32 	%f420, %f417, %f407;
$L__tmp61:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs255, %f420;
	cvt.rn.f16.f32 	%rs256, %f419;
	mov.b32 	%r1982, {%rs256, %rs255};
	.loc	1 111 23
	add.f16x2 	%r1983, %r2422, %r1837;
$L__tmp62:
	.loc	1 152 33
	mul.f16x2 	%r1984, %r1983, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1985, %r1983, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1986, %r1983, %r1985;
	.loc	1 153 67
	fma.rn.f16x2 	%r1987, %r1983, %r1986, %r1983;
	.loc	1 153 63
	mul.f16x2 	%r1988, %r1987, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1989, %r1988, %r1988;
	mov.b32 	{%rs257, %rs258}, %r1989;
	.loc	1 143 45
	add.f16 	%rs259, %rs257, %rs5;
	add.f16 	%rs260, %rs258, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs261, %rs257, %rs8, %rs5;
	fma.rn.f16 	%rs262, %rs258, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f421, %rs259;
	cvt.f32.f16 	%f422, %rs260;
	cvt.f32.f16 	%f423, %rs261;
	cvt.f32.f16 	%f424, %rs262;
	.loc	1 143 18
	mov.b32 	{%rs263, %rs264}, %r1988;
	cvt.f32.f16 	%f425, %rs264;
	cvt.f32.f16 	%f426, %rs263;
	.loc	1 153 12
	mov.b32 	{%rs265, %rs266}, %r1984;
	cvt.f32.f16 	%f427, %rs266;
	cvt.f32.f16 	%f428, %rs265;
	.loc	1 143 54
	mov.b32 	%r1366, %f421;
	mov.b32 	%r1367, %f423;
	// begin inline asm
	div.full.f32 %r1365, %r1366, %r1367;
	// end inline asm
	mov.b32 	%f429, %r1365;
	mov.b32 	%r1369, %f422;
	mov.b32 	%r1370, %f424;
	// begin inline asm
	div.full.f32 %r1368, %r1369, %r1370;
	// end inline asm
	mov.b32 	%f430, %r1368;
	.loc	1 143 18
	mul.f32 	%f431, %f429, %f426;
	mul.f32 	%f432, %f430, %f425;
	.loc	1 144 54
	max.f32 	%f433, %f432, 0fBF800000;
	max.f32 	%f434, %f431, 0fBF800000;
	min.f32 	%f435, %f434, 0f3F800000;
	min.f32 	%f436, %f433, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f437, %f436, 0f3F800000;
	add.f32 	%f438, %f435, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f439, %f438, %f428;
	mul.f32 	%f440, %f437, %f427;
$L__tmp63:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs267, %f440;
	cvt.rn.f16.f32 	%rs268, %f439;
	mov.b32 	%r1990, {%rs268, %rs267};
	.loc	1 111 23
	add.f16x2 	%r1991, %r2421, %r1852;
$L__tmp64:
	.loc	1 152 33
	mul.f16x2 	%r1992, %r1991, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r1993, %r1991, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r1994, %r1991, %r1993;
	.loc	1 153 67
	fma.rn.f16x2 	%r1995, %r1991, %r1994, %r1991;
	.loc	1 153 63
	mul.f16x2 	%r1996, %r1995, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r1997, %r1996, %r1996;
	mov.b32 	{%rs269, %rs270}, %r1997;
	.loc	1 143 45
	add.f16 	%rs271, %rs269, %rs5;
	add.f16 	%rs272, %rs270, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs273, %rs269, %rs8, %rs5;
	fma.rn.f16 	%rs274, %rs270, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f441, %rs271;
	cvt.f32.f16 	%f442, %rs272;
	cvt.f32.f16 	%f443, %rs273;
	cvt.f32.f16 	%f444, %rs274;
	.loc	1 143 18
	mov.b32 	{%rs275, %rs276}, %r1996;
	cvt.f32.f16 	%f445, %rs276;
	cvt.f32.f16 	%f446, %rs275;
	.loc	1 153 12
	mov.b32 	{%rs277, %rs278}, %r1992;
	cvt.f32.f16 	%f447, %rs278;
	cvt.f32.f16 	%f448, %rs277;
	.loc	1 143 54
	mov.b32 	%r1372, %f441;
	mov.b32 	%r1373, %f443;
	// begin inline asm
	div.full.f32 %r1371, %r1372, %r1373;
	// end inline asm
	mov.b32 	%f449, %r1371;
	mov.b32 	%r1375, %f442;
	mov.b32 	%r1376, %f444;
	// begin inline asm
	div.full.f32 %r1374, %r1375, %r1376;
	// end inline asm
	mov.b32 	%f450, %r1374;
	.loc	1 143 18
	mul.f32 	%f451, %f449, %f446;
	mul.f32 	%f452, %f450, %f445;
	.loc	1 144 54
	max.f32 	%f453, %f452, 0fBF800000;
	max.f32 	%f454, %f451, 0fBF800000;
	min.f32 	%f455, %f454, 0f3F800000;
	min.f32 	%f456, %f453, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f457, %f456, 0f3F800000;
	add.f32 	%f458, %f455, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f459, %f458, %f448;
	mul.f32 	%f460, %f457, %f447;
$L__tmp65:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs279, %f460;
	cvt.rn.f16.f32 	%rs280, %f459;
	mov.b32 	%r1998, {%rs280, %rs279};
	.loc	1 111 23
	add.f16x2 	%r1999, %r2420, %r1852;
$L__tmp66:
	.loc	1 152 33
	mul.f16x2 	%r2000, %r1999, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2001, %r1999, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2002, %r1999, %r2001;
	.loc	1 153 67
	fma.rn.f16x2 	%r2003, %r1999, %r2002, %r1999;
	.loc	1 153 63
	mul.f16x2 	%r2004, %r2003, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2005, %r2004, %r2004;
	mov.b32 	{%rs281, %rs282}, %r2005;
	.loc	1 143 45
	add.f16 	%rs283, %rs281, %rs5;
	add.f16 	%rs284, %rs282, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs285, %rs281, %rs8, %rs5;
	fma.rn.f16 	%rs286, %rs282, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f461, %rs283;
	cvt.f32.f16 	%f462, %rs284;
	cvt.f32.f16 	%f463, %rs285;
	cvt.f32.f16 	%f464, %rs286;
	.loc	1 143 18
	mov.b32 	{%rs287, %rs288}, %r2004;
	cvt.f32.f16 	%f465, %rs288;
	cvt.f32.f16 	%f466, %rs287;
	.loc	1 153 12
	mov.b32 	{%rs289, %rs290}, %r2000;
	cvt.f32.f16 	%f467, %rs290;
	cvt.f32.f16 	%f468, %rs289;
	.loc	1 143 54
	mov.b32 	%r1378, %f461;
	mov.b32 	%r1379, %f463;
	// begin inline asm
	div.full.f32 %r1377, %r1378, %r1379;
	// end inline asm
	mov.b32 	%f469, %r1377;
	mov.b32 	%r1381, %f462;
	mov.b32 	%r1382, %f464;
	// begin inline asm
	div.full.f32 %r1380, %r1381, %r1382;
	// end inline asm
	mov.b32 	%f470, %r1380;
	.loc	1 143 18
	mul.f32 	%f471, %f469, %f466;
	mul.f32 	%f472, %f470, %f465;
	.loc	1 144 54
	max.f32 	%f473, %f472, 0fBF800000;
	max.f32 	%f474, %f471, 0fBF800000;
	min.f32 	%f475, %f474, 0f3F800000;
	min.f32 	%f476, %f473, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f477, %f476, 0f3F800000;
	add.f32 	%f478, %f475, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f479, %f478, %f468;
	mul.f32 	%f480, %f477, %f467;
$L__tmp67:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs291, %f480;
	cvt.rn.f16.f32 	%rs292, %f479;
	mov.b32 	%r2006, {%rs292, %rs291};
	.loc	1 111 23
	add.f16x2 	%r2007, %r2419, %r1867;
$L__tmp68:
	.loc	1 152 33
	mul.f16x2 	%r2008, %r2007, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2009, %r2007, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2010, %r2007, %r2009;
	.loc	1 153 67
	fma.rn.f16x2 	%r2011, %r2007, %r2010, %r2007;
	.loc	1 153 63
	mul.f16x2 	%r2012, %r2011, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2013, %r2012, %r2012;
	mov.b32 	{%rs293, %rs294}, %r2013;
	.loc	1 143 45
	add.f16 	%rs295, %rs293, %rs5;
	add.f16 	%rs296, %rs294, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs297, %rs293, %rs8, %rs5;
	fma.rn.f16 	%rs298, %rs294, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f481, %rs295;
	cvt.f32.f16 	%f482, %rs296;
	cvt.f32.f16 	%f483, %rs297;
	cvt.f32.f16 	%f484, %rs298;
	.loc	1 143 18
	mov.b32 	{%rs299, %rs300}, %r2012;
	cvt.f32.f16 	%f485, %rs300;
	cvt.f32.f16 	%f486, %rs299;
	.loc	1 153 12
	mov.b32 	{%rs301, %rs302}, %r2008;
	cvt.f32.f16 	%f487, %rs302;
	cvt.f32.f16 	%f488, %rs301;
	.loc	1 143 54
	mov.b32 	%r1384, %f481;
	mov.b32 	%r1385, %f483;
	// begin inline asm
	div.full.f32 %r1383, %r1384, %r1385;
	// end inline asm
	mov.b32 	%f489, %r1383;
	mov.b32 	%r1387, %f482;
	mov.b32 	%r1388, %f484;
	// begin inline asm
	div.full.f32 %r1386, %r1387, %r1388;
	// end inline asm
	mov.b32 	%f490, %r1386;
	.loc	1 143 18
	mul.f32 	%f491, %f489, %f486;
	mul.f32 	%f492, %f490, %f485;
	.loc	1 144 54
	max.f32 	%f493, %f492, 0fBF800000;
	max.f32 	%f494, %f491, 0fBF800000;
	min.f32 	%f495, %f494, 0f3F800000;
	min.f32 	%f496, %f493, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f497, %f496, 0f3F800000;
	add.f32 	%f498, %f495, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f499, %f498, %f488;
	mul.f32 	%f500, %f497, %f487;
$L__tmp69:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs303, %f500;
	cvt.rn.f16.f32 	%rs304, %f499;
	mov.b32 	%r2014, {%rs304, %rs303};
	.loc	1 111 23
	add.f16x2 	%r2015, %r2418, %r1867;
$L__tmp70:
	.loc	1 152 33
	mul.f16x2 	%r2016, %r2015, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2017, %r2015, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2018, %r2015, %r2017;
	.loc	1 153 67
	fma.rn.f16x2 	%r2019, %r2015, %r2018, %r2015;
	.loc	1 153 63
	mul.f16x2 	%r2020, %r2019, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2021, %r2020, %r2020;
	mov.b32 	{%rs305, %rs306}, %r2021;
	.loc	1 143 45
	add.f16 	%rs307, %rs305, %rs5;
	add.f16 	%rs308, %rs306, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs309, %rs305, %rs8, %rs5;
	fma.rn.f16 	%rs310, %rs306, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f501, %rs307;
	cvt.f32.f16 	%f502, %rs308;
	cvt.f32.f16 	%f503, %rs309;
	cvt.f32.f16 	%f504, %rs310;
	.loc	1 143 18
	mov.b32 	{%rs311, %rs312}, %r2020;
	cvt.f32.f16 	%f505, %rs312;
	cvt.f32.f16 	%f506, %rs311;
	.loc	1 153 12
	mov.b32 	{%rs313, %rs314}, %r2016;
	cvt.f32.f16 	%f507, %rs314;
	cvt.f32.f16 	%f508, %rs313;
	.loc	1 143 54
	mov.b32 	%r1390, %f501;
	mov.b32 	%r1391, %f503;
	// begin inline asm
	div.full.f32 %r1389, %r1390, %r1391;
	// end inline asm
	mov.b32 	%f509, %r1389;
	mov.b32 	%r1393, %f502;
	mov.b32 	%r1394, %f504;
	// begin inline asm
	div.full.f32 %r1392, %r1393, %r1394;
	// end inline asm
	mov.b32 	%f510, %r1392;
	.loc	1 143 18
	mul.f32 	%f511, %f509, %f506;
	mul.f32 	%f512, %f510, %f505;
	.loc	1 144 54
	max.f32 	%f513, %f512, 0fBF800000;
	max.f32 	%f514, %f511, 0fBF800000;
	min.f32 	%f515, %f514, 0f3F800000;
	min.f32 	%f516, %f513, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f517, %f516, 0f3F800000;
	add.f32 	%f518, %f515, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f519, %f518, %f508;
	mul.f32 	%f520, %f517, %f507;
$L__tmp71:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs315, %f520;
	cvt.rn.f16.f32 	%rs316, %f519;
	mov.b32 	%r2022, {%rs316, %rs315};
	.loc	1 111 23
	add.f16x2 	%r2023, %r2417, %r1882;
$L__tmp72:
	.loc	1 152 33
	mul.f16x2 	%r2024, %r2023, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2025, %r2023, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2026, %r2023, %r2025;
	.loc	1 153 67
	fma.rn.f16x2 	%r2027, %r2023, %r2026, %r2023;
	.loc	1 153 63
	mul.f16x2 	%r2028, %r2027, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2029, %r2028, %r2028;
	mov.b32 	{%rs317, %rs318}, %r2029;
	.loc	1 143 45
	add.f16 	%rs319, %rs317, %rs5;
	add.f16 	%rs320, %rs318, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs321, %rs317, %rs8, %rs5;
	fma.rn.f16 	%rs322, %rs318, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f521, %rs319;
	cvt.f32.f16 	%f522, %rs320;
	cvt.f32.f16 	%f523, %rs321;
	cvt.f32.f16 	%f524, %rs322;
	.loc	1 143 18
	mov.b32 	{%rs323, %rs324}, %r2028;
	cvt.f32.f16 	%f525, %rs324;
	cvt.f32.f16 	%f526, %rs323;
	.loc	1 153 12
	mov.b32 	{%rs325, %rs326}, %r2024;
	cvt.f32.f16 	%f527, %rs326;
	cvt.f32.f16 	%f528, %rs325;
	.loc	1 143 54
	mov.b32 	%r1396, %f521;
	mov.b32 	%r1397, %f523;
	// begin inline asm
	div.full.f32 %r1395, %r1396, %r1397;
	// end inline asm
	mov.b32 	%f529, %r1395;
	mov.b32 	%r1399, %f522;
	mov.b32 	%r1400, %f524;
	// begin inline asm
	div.full.f32 %r1398, %r1399, %r1400;
	// end inline asm
	mov.b32 	%f530, %r1398;
	.loc	1 143 18
	mul.f32 	%f531, %f529, %f526;
	mul.f32 	%f532, %f530, %f525;
	.loc	1 144 54
	max.f32 	%f533, %f532, 0fBF800000;
	max.f32 	%f534, %f531, 0fBF800000;
	min.f32 	%f535, %f534, 0f3F800000;
	min.f32 	%f536, %f533, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f537, %f536, 0f3F800000;
	add.f32 	%f538, %f535, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f539, %f538, %f528;
	mul.f32 	%f540, %f537, %f527;
$L__tmp73:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs327, %f540;
	cvt.rn.f16.f32 	%rs328, %f539;
	mov.b32 	%r2030, {%rs328, %rs327};
	.loc	1 111 23
	add.f16x2 	%r2031, %r2416, %r1882;
$L__tmp74:
	.loc	1 152 33
	mul.f16x2 	%r2032, %r2031, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2033, %r2031, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2034, %r2031, %r2033;
	.loc	1 153 67
	fma.rn.f16x2 	%r2035, %r2031, %r2034, %r2031;
	.loc	1 153 63
	mul.f16x2 	%r2036, %r2035, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2037, %r2036, %r2036;
	mov.b32 	{%rs329, %rs330}, %r2037;
	.loc	1 143 45
	add.f16 	%rs331, %rs329, %rs5;
	add.f16 	%rs332, %rs330, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs333, %rs329, %rs8, %rs5;
	fma.rn.f16 	%rs334, %rs330, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f541, %rs331;
	cvt.f32.f16 	%f542, %rs332;
	cvt.f32.f16 	%f543, %rs333;
	cvt.f32.f16 	%f544, %rs334;
	.loc	1 143 18
	mov.b32 	{%rs335, %rs336}, %r2036;
	cvt.f32.f16 	%f545, %rs336;
	cvt.f32.f16 	%f546, %rs335;
	.loc	1 153 12
	mov.b32 	{%rs337, %rs338}, %r2032;
	cvt.f32.f16 	%f547, %rs338;
	cvt.f32.f16 	%f548, %rs337;
	.loc	1 143 54
	mov.b32 	%r1402, %f541;
	mov.b32 	%r1403, %f543;
	// begin inline asm
	div.full.f32 %r1401, %r1402, %r1403;
	// end inline asm
	mov.b32 	%f549, %r1401;
	mov.b32 	%r1405, %f542;
	mov.b32 	%r1406, %f544;
	// begin inline asm
	div.full.f32 %r1404, %r1405, %r1406;
	// end inline asm
	mov.b32 	%f550, %r1404;
	.loc	1 143 18
	mul.f32 	%f551, %f549, %f546;
	mul.f32 	%f552, %f550, %f545;
	.loc	1 144 54
	max.f32 	%f553, %f552, 0fBF800000;
	max.f32 	%f554, %f551, 0fBF800000;
	min.f32 	%f555, %f554, 0f3F800000;
	min.f32 	%f556, %f553, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f557, %f556, 0f3F800000;
	add.f32 	%f558, %f555, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f559, %f558, %f548;
	mul.f32 	%f560, %f557, %f547;
$L__tmp75:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs339, %f560;
	cvt.rn.f16.f32 	%rs340, %f559;
	mov.b32 	%r2038, {%rs340, %rs339};
	.loc	1 111 23
	add.f16x2 	%r2039, %r2415, %r1897;
$L__tmp76:
	.loc	1 152 33
	mul.f16x2 	%r2040, %r2039, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2041, %r2039, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2042, %r2039, %r2041;
	.loc	1 153 67
	fma.rn.f16x2 	%r2043, %r2039, %r2042, %r2039;
	.loc	1 153 63
	mul.f16x2 	%r2044, %r2043, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2045, %r2044, %r2044;
	mov.b32 	{%rs341, %rs342}, %r2045;
	.loc	1 143 45
	add.f16 	%rs343, %rs341, %rs5;
	add.f16 	%rs344, %rs342, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs345, %rs341, %rs8, %rs5;
	fma.rn.f16 	%rs346, %rs342, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f561, %rs343;
	cvt.f32.f16 	%f562, %rs344;
	cvt.f32.f16 	%f563, %rs345;
	cvt.f32.f16 	%f564, %rs346;
	.loc	1 143 18
	mov.b32 	{%rs347, %rs348}, %r2044;
	cvt.f32.f16 	%f565, %rs348;
	cvt.f32.f16 	%f566, %rs347;
	.loc	1 153 12
	mov.b32 	{%rs349, %rs350}, %r2040;
	cvt.f32.f16 	%f567, %rs350;
	cvt.f32.f16 	%f568, %rs349;
	.loc	1 143 54
	mov.b32 	%r1408, %f561;
	mov.b32 	%r1409, %f563;
	// begin inline asm
	div.full.f32 %r1407, %r1408, %r1409;
	// end inline asm
	mov.b32 	%f569, %r1407;
	mov.b32 	%r1411, %f562;
	mov.b32 	%r1412, %f564;
	// begin inline asm
	div.full.f32 %r1410, %r1411, %r1412;
	// end inline asm
	mov.b32 	%f570, %r1410;
	.loc	1 143 18
	mul.f32 	%f571, %f569, %f566;
	mul.f32 	%f572, %f570, %f565;
	.loc	1 144 54
	max.f32 	%f573, %f572, 0fBF800000;
	max.f32 	%f574, %f571, 0fBF800000;
	min.f32 	%f575, %f574, 0f3F800000;
	min.f32 	%f576, %f573, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f577, %f576, 0f3F800000;
	add.f32 	%f578, %f575, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f579, %f578, %f568;
	mul.f32 	%f580, %f577, %f567;
$L__tmp77:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs351, %f580;
	cvt.rn.f16.f32 	%rs352, %f579;
	mov.b32 	%r2046, {%rs352, %rs351};
	.loc	1 111 23
	add.f16x2 	%r2047, %r2414, %r1897;
$L__tmp78:
	.loc	1 152 33
	mul.f16x2 	%r2048, %r2047, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2049, %r2047, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2050, %r2047, %r2049;
	.loc	1 153 67
	fma.rn.f16x2 	%r2051, %r2047, %r2050, %r2047;
	.loc	1 153 63
	mul.f16x2 	%r2052, %r2051, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2053, %r2052, %r2052;
	mov.b32 	{%rs353, %rs354}, %r2053;
	.loc	1 143 45
	add.f16 	%rs355, %rs353, %rs5;
	add.f16 	%rs356, %rs354, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs357, %rs353, %rs8, %rs5;
	fma.rn.f16 	%rs358, %rs354, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f581, %rs355;
	cvt.f32.f16 	%f582, %rs356;
	cvt.f32.f16 	%f583, %rs357;
	cvt.f32.f16 	%f584, %rs358;
	.loc	1 143 18
	mov.b32 	{%rs359, %rs360}, %r2052;
	cvt.f32.f16 	%f585, %rs360;
	cvt.f32.f16 	%f586, %rs359;
	.loc	1 153 12
	mov.b32 	{%rs361, %rs362}, %r2048;
	cvt.f32.f16 	%f587, %rs362;
	cvt.f32.f16 	%f588, %rs361;
	.loc	1 143 54
	mov.b32 	%r1414, %f581;
	mov.b32 	%r1415, %f583;
	// begin inline asm
	div.full.f32 %r1413, %r1414, %r1415;
	// end inline asm
	mov.b32 	%f589, %r1413;
	mov.b32 	%r1417, %f582;
	mov.b32 	%r1418, %f584;
	// begin inline asm
	div.full.f32 %r1416, %r1417, %r1418;
	// end inline asm
	mov.b32 	%f590, %r1416;
	.loc	1 143 18
	mul.f32 	%f591, %f589, %f586;
	mul.f32 	%f592, %f590, %f585;
	.loc	1 144 54
	max.f32 	%f593, %f592, 0fBF800000;
	max.f32 	%f594, %f591, 0fBF800000;
	min.f32 	%f595, %f594, 0f3F800000;
	min.f32 	%f596, %f593, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f597, %f596, 0f3F800000;
	add.f32 	%f598, %f595, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f599, %f598, %f588;
	mul.f32 	%f600, %f597, %f587;
$L__tmp79:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs363, %f600;
	cvt.rn.f16.f32 	%rs364, %f599;
	mov.b32 	%r2054, {%rs364, %rs363};
	.loc	1 111 23
	add.f16x2 	%r2055, %r2413, %r1912;
$L__tmp80:
	.loc	1 152 33
	mul.f16x2 	%r2056, %r2055, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2057, %r2055, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2058, %r2055, %r2057;
	.loc	1 153 67
	fma.rn.f16x2 	%r2059, %r2055, %r2058, %r2055;
	.loc	1 153 63
	mul.f16x2 	%r2060, %r2059, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2061, %r2060, %r2060;
	mov.b32 	{%rs365, %rs366}, %r2061;
	.loc	1 143 45
	add.f16 	%rs367, %rs365, %rs5;
	add.f16 	%rs368, %rs366, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs369, %rs365, %rs8, %rs5;
	fma.rn.f16 	%rs370, %rs366, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f601, %rs367;
	cvt.f32.f16 	%f602, %rs368;
	cvt.f32.f16 	%f603, %rs369;
	cvt.f32.f16 	%f604, %rs370;
	.loc	1 143 18
	mov.b32 	{%rs371, %rs372}, %r2060;
	cvt.f32.f16 	%f605, %rs372;
	cvt.f32.f16 	%f606, %rs371;
	.loc	1 153 12
	mov.b32 	{%rs373, %rs374}, %r2056;
	cvt.f32.f16 	%f607, %rs374;
	cvt.f32.f16 	%f608, %rs373;
	.loc	1 143 54
	mov.b32 	%r1420, %f601;
	mov.b32 	%r1421, %f603;
	// begin inline asm
	div.full.f32 %r1419, %r1420, %r1421;
	// end inline asm
	mov.b32 	%f609, %r1419;
	mov.b32 	%r1423, %f602;
	mov.b32 	%r1424, %f604;
	// begin inline asm
	div.full.f32 %r1422, %r1423, %r1424;
	// end inline asm
	mov.b32 	%f610, %r1422;
	.loc	1 143 18
	mul.f32 	%f611, %f609, %f606;
	mul.f32 	%f612, %f610, %f605;
	.loc	1 144 54
	max.f32 	%f613, %f612, 0fBF800000;
	max.f32 	%f614, %f611, 0fBF800000;
	min.f32 	%f615, %f614, 0f3F800000;
	min.f32 	%f616, %f613, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f617, %f616, 0f3F800000;
	add.f32 	%f618, %f615, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f619, %f618, %f608;
	mul.f32 	%f620, %f617, %f607;
$L__tmp81:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs375, %f620;
	cvt.rn.f16.f32 	%rs376, %f619;
	mov.b32 	%r2062, {%rs376, %rs375};
	.loc	1 111 23
	add.f16x2 	%r2063, %r2412, %r1912;
$L__tmp82:
	.loc	1 152 33
	mul.f16x2 	%r2064, %r2063, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2065, %r2063, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2066, %r2063, %r2065;
	.loc	1 153 67
	fma.rn.f16x2 	%r2067, %r2063, %r2066, %r2063;
	.loc	1 153 63
	mul.f16x2 	%r2068, %r2067, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2069, %r2068, %r2068;
	mov.b32 	{%rs377, %rs378}, %r2069;
	.loc	1 143 45
	add.f16 	%rs379, %rs377, %rs5;
	add.f16 	%rs380, %rs378, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs381, %rs377, %rs8, %rs5;
	fma.rn.f16 	%rs382, %rs378, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f621, %rs379;
	cvt.f32.f16 	%f622, %rs380;
	cvt.f32.f16 	%f623, %rs381;
	cvt.f32.f16 	%f624, %rs382;
	.loc	1 143 18
	mov.b32 	{%rs383, %rs384}, %r2068;
	cvt.f32.f16 	%f625, %rs384;
	cvt.f32.f16 	%f626, %rs383;
	.loc	1 153 12
	mov.b32 	{%rs385, %rs386}, %r2064;
	cvt.f32.f16 	%f627, %rs386;
	cvt.f32.f16 	%f628, %rs385;
	.loc	1 143 54
	mov.b32 	%r1426, %f621;
	mov.b32 	%r1427, %f623;
	// begin inline asm
	div.full.f32 %r1425, %r1426, %r1427;
	// end inline asm
	mov.b32 	%f629, %r1425;
	mov.b32 	%r1429, %f622;
	mov.b32 	%r1430, %f624;
	// begin inline asm
	div.full.f32 %r1428, %r1429, %r1430;
	// end inline asm
	mov.b32 	%f630, %r1428;
	.loc	1 143 18
	mul.f32 	%f631, %f629, %f626;
	mul.f32 	%f632, %f630, %f625;
	.loc	1 144 54
	max.f32 	%f633, %f632, 0fBF800000;
	max.f32 	%f634, %f631, 0fBF800000;
	min.f32 	%f635, %f634, 0f3F800000;
	min.f32 	%f636, %f633, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f637, %f636, 0f3F800000;
	add.f32 	%f638, %f635, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f639, %f638, %f628;
	mul.f32 	%f640, %f637, %f627;
$L__tmp83:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs387, %f640;
	cvt.rn.f16.f32 	%rs388, %f639;
	mov.b32 	%r2070, {%rs388, %rs387};
	.loc	1 111 23
	add.f16x2 	%r2071, %r2411, %r1804;
$L__tmp84:
	.loc	1 152 33
	mul.f16x2 	%r2072, %r2071, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2073, %r2071, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2074, %r2071, %r2073;
	.loc	1 153 67
	fma.rn.f16x2 	%r2075, %r2071, %r2074, %r2071;
	.loc	1 153 63
	mul.f16x2 	%r2076, %r2075, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2077, %r2076, %r2076;
	mov.b32 	{%rs389, %rs390}, %r2077;
	.loc	1 143 45
	add.f16 	%rs391, %rs389, %rs5;
	add.f16 	%rs392, %rs390, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs393, %rs389, %rs8, %rs5;
	fma.rn.f16 	%rs394, %rs390, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f641, %rs391;
	cvt.f32.f16 	%f642, %rs392;
	cvt.f32.f16 	%f643, %rs393;
	cvt.f32.f16 	%f644, %rs394;
	.loc	1 143 18
	mov.b32 	{%rs395, %rs396}, %r2076;
	cvt.f32.f16 	%f645, %rs396;
	cvt.f32.f16 	%f646, %rs395;
	.loc	1 153 12
	mov.b32 	{%rs397, %rs398}, %r2072;
	cvt.f32.f16 	%f647, %rs398;
	cvt.f32.f16 	%f648, %rs397;
	.loc	1 143 54
	mov.b32 	%r1432, %f641;
	mov.b32 	%r1433, %f643;
	// begin inline asm
	div.full.f32 %r1431, %r1432, %r1433;
	// end inline asm
	mov.b32 	%f649, %r1431;
	mov.b32 	%r1435, %f642;
	mov.b32 	%r1436, %f644;
	// begin inline asm
	div.full.f32 %r1434, %r1435, %r1436;
	// end inline asm
	mov.b32 	%f650, %r1434;
	.loc	1 143 18
	mul.f32 	%f651, %f649, %f646;
	mul.f32 	%f652, %f650, %f645;
	.loc	1 144 54
	max.f32 	%f653, %f652, 0fBF800000;
	max.f32 	%f654, %f651, 0fBF800000;
	min.f32 	%f655, %f654, 0f3F800000;
	min.f32 	%f656, %f653, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f657, %f656, 0f3F800000;
	add.f32 	%f658, %f655, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f659, %f658, %f648;
	mul.f32 	%f660, %f657, %f647;
$L__tmp85:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs399, %f660;
	cvt.rn.f16.f32 	%rs400, %f659;
	mov.b32 	%r2078, {%rs400, %rs399};
	.loc	1 111 23
	add.f16x2 	%r2079, %r2410, %r1804;
$L__tmp86:
	.loc	1 152 33
	mul.f16x2 	%r2080, %r2079, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2081, %r2079, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2082, %r2079, %r2081;
	.loc	1 153 67
	fma.rn.f16x2 	%r2083, %r2079, %r2082, %r2079;
	.loc	1 153 63
	mul.f16x2 	%r2084, %r2083, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2085, %r2084, %r2084;
	mov.b32 	{%rs401, %rs402}, %r2085;
	.loc	1 143 45
	add.f16 	%rs403, %rs401, %rs5;
	add.f16 	%rs404, %rs402, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs405, %rs401, %rs8, %rs5;
	fma.rn.f16 	%rs406, %rs402, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f661, %rs403;
	cvt.f32.f16 	%f662, %rs404;
	cvt.f32.f16 	%f663, %rs405;
	cvt.f32.f16 	%f664, %rs406;
	.loc	1 143 18
	mov.b32 	{%rs407, %rs408}, %r2084;
	cvt.f32.f16 	%f665, %rs408;
	cvt.f32.f16 	%f666, %rs407;
	.loc	1 153 12
	mov.b32 	{%rs409, %rs410}, %r2080;
	cvt.f32.f16 	%f667, %rs410;
	cvt.f32.f16 	%f668, %rs409;
	.loc	1 143 54
	mov.b32 	%r1438, %f661;
	mov.b32 	%r1439, %f663;
	// begin inline asm
	div.full.f32 %r1437, %r1438, %r1439;
	// end inline asm
	mov.b32 	%f669, %r1437;
	mov.b32 	%r1441, %f662;
	mov.b32 	%r1442, %f664;
	// begin inline asm
	div.full.f32 %r1440, %r1441, %r1442;
	// end inline asm
	mov.b32 	%f670, %r1440;
	.loc	1 143 18
	mul.f32 	%f671, %f669, %f666;
	mul.f32 	%f672, %f670, %f665;
	.loc	1 144 54
	max.f32 	%f673, %f672, 0fBF800000;
	max.f32 	%f674, %f671, 0fBF800000;
	min.f32 	%f675, %f674, 0f3F800000;
	min.f32 	%f676, %f673, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f677, %f676, 0f3F800000;
	add.f32 	%f678, %f675, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f679, %f678, %f668;
	mul.f32 	%f680, %f677, %f667;
$L__tmp87:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs411, %f680;
	cvt.rn.f16.f32 	%rs412, %f679;
	mov.b32 	%r2086, {%rs412, %rs411};
	.loc	1 111 23
	add.f16x2 	%r2087, %r2409, %r1822;
$L__tmp88:
	.loc	1 152 33
	mul.f16x2 	%r2088, %r2087, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2089, %r2087, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2090, %r2087, %r2089;
	.loc	1 153 67
	fma.rn.f16x2 	%r2091, %r2087, %r2090, %r2087;
	.loc	1 153 63
	mul.f16x2 	%r2092, %r2091, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2093, %r2092, %r2092;
	mov.b32 	{%rs413, %rs414}, %r2093;
	.loc	1 143 45
	add.f16 	%rs415, %rs413, %rs5;
	add.f16 	%rs416, %rs414, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs417, %rs413, %rs8, %rs5;
	fma.rn.f16 	%rs418, %rs414, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f681, %rs415;
	cvt.f32.f16 	%f682, %rs416;
	cvt.f32.f16 	%f683, %rs417;
	cvt.f32.f16 	%f684, %rs418;
	.loc	1 143 18
	mov.b32 	{%rs419, %rs420}, %r2092;
	cvt.f32.f16 	%f685, %rs420;
	cvt.f32.f16 	%f686, %rs419;
	.loc	1 153 12
	mov.b32 	{%rs421, %rs422}, %r2088;
	cvt.f32.f16 	%f687, %rs422;
	cvt.f32.f16 	%f688, %rs421;
	.loc	1 143 54
	mov.b32 	%r1444, %f681;
	mov.b32 	%r1445, %f683;
	// begin inline asm
	div.full.f32 %r1443, %r1444, %r1445;
	// end inline asm
	mov.b32 	%f689, %r1443;
	mov.b32 	%r1447, %f682;
	mov.b32 	%r1448, %f684;
	// begin inline asm
	div.full.f32 %r1446, %r1447, %r1448;
	// end inline asm
	mov.b32 	%f690, %r1446;
	.loc	1 143 18
	mul.f32 	%f691, %f689, %f686;
	mul.f32 	%f692, %f690, %f685;
	.loc	1 144 54
	max.f32 	%f693, %f692, 0fBF800000;
	max.f32 	%f694, %f691, 0fBF800000;
	min.f32 	%f695, %f694, 0f3F800000;
	min.f32 	%f696, %f693, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f697, %f696, 0f3F800000;
	add.f32 	%f698, %f695, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f699, %f698, %f688;
	mul.f32 	%f700, %f697, %f687;
$L__tmp89:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs423, %f700;
	cvt.rn.f16.f32 	%rs424, %f699;
	mov.b32 	%r2094, {%rs424, %rs423};
	.loc	1 111 23
	add.f16x2 	%r2095, %r2408, %r1822;
$L__tmp90:
	.loc	1 152 33
	mul.f16x2 	%r2096, %r2095, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2097, %r2095, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2098, %r2095, %r2097;
	.loc	1 153 67
	fma.rn.f16x2 	%r2099, %r2095, %r2098, %r2095;
	.loc	1 153 63
	mul.f16x2 	%r2100, %r2099, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2101, %r2100, %r2100;
	mov.b32 	{%rs425, %rs426}, %r2101;
	.loc	1 143 45
	add.f16 	%rs427, %rs425, %rs5;
	add.f16 	%rs428, %rs426, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs429, %rs425, %rs8, %rs5;
	fma.rn.f16 	%rs430, %rs426, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f701, %rs427;
	cvt.f32.f16 	%f702, %rs428;
	cvt.f32.f16 	%f703, %rs429;
	cvt.f32.f16 	%f704, %rs430;
	.loc	1 143 18
	mov.b32 	{%rs431, %rs432}, %r2100;
	cvt.f32.f16 	%f705, %rs432;
	cvt.f32.f16 	%f706, %rs431;
	.loc	1 153 12
	mov.b32 	{%rs433, %rs434}, %r2096;
	cvt.f32.f16 	%f707, %rs434;
	cvt.f32.f16 	%f708, %rs433;
	.loc	1 143 54
	mov.b32 	%r1450, %f701;
	mov.b32 	%r1451, %f703;
	// begin inline asm
	div.full.f32 %r1449, %r1450, %r1451;
	// end inline asm
	mov.b32 	%f709, %r1449;
	mov.b32 	%r1453, %f702;
	mov.b32 	%r1454, %f704;
	// begin inline asm
	div.full.f32 %r1452, %r1453, %r1454;
	// end inline asm
	mov.b32 	%f710, %r1452;
	.loc	1 143 18
	mul.f32 	%f711, %f709, %f706;
	mul.f32 	%f712, %f710, %f705;
	.loc	1 144 54
	max.f32 	%f713, %f712, 0fBF800000;
	max.f32 	%f714, %f711, 0fBF800000;
	min.f32 	%f715, %f714, 0f3F800000;
	min.f32 	%f716, %f713, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f717, %f716, 0f3F800000;
	add.f32 	%f718, %f715, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f719, %f718, %f708;
	mul.f32 	%f720, %f717, %f707;
$L__tmp91:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs435, %f720;
	cvt.rn.f16.f32 	%rs436, %f719;
	mov.b32 	%r2102, {%rs436, %rs435};
	.loc	1 111 23
	add.f16x2 	%r2103, %r2407, %r1837;
$L__tmp92:
	.loc	1 152 33
	mul.f16x2 	%r2104, %r2103, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2105, %r2103, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2106, %r2103, %r2105;
	.loc	1 153 67
	fma.rn.f16x2 	%r2107, %r2103, %r2106, %r2103;
	.loc	1 153 63
	mul.f16x2 	%r2108, %r2107, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2109, %r2108, %r2108;
	mov.b32 	{%rs437, %rs438}, %r2109;
	.loc	1 143 45
	add.f16 	%rs439, %rs437, %rs5;
	add.f16 	%rs440, %rs438, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs441, %rs437, %rs8, %rs5;
	fma.rn.f16 	%rs442, %rs438, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f721, %rs439;
	cvt.f32.f16 	%f722, %rs440;
	cvt.f32.f16 	%f723, %rs441;
	cvt.f32.f16 	%f724, %rs442;
	.loc	1 143 18
	mov.b32 	{%rs443, %rs444}, %r2108;
	cvt.f32.f16 	%f725, %rs444;
	cvt.f32.f16 	%f726, %rs443;
	.loc	1 153 12
	mov.b32 	{%rs445, %rs446}, %r2104;
	cvt.f32.f16 	%f727, %rs446;
	cvt.f32.f16 	%f728, %rs445;
	.loc	1 143 54
	mov.b32 	%r1456, %f721;
	mov.b32 	%r1457, %f723;
	// begin inline asm
	div.full.f32 %r1455, %r1456, %r1457;
	// end inline asm
	mov.b32 	%f729, %r1455;
	mov.b32 	%r1459, %f722;
	mov.b32 	%r1460, %f724;
	// begin inline asm
	div.full.f32 %r1458, %r1459, %r1460;
	// end inline asm
	mov.b32 	%f730, %r1458;
	.loc	1 143 18
	mul.f32 	%f731, %f729, %f726;
	mul.f32 	%f732, %f730, %f725;
	.loc	1 144 54
	max.f32 	%f733, %f732, 0fBF800000;
	max.f32 	%f734, %f731, 0fBF800000;
	min.f32 	%f735, %f734, 0f3F800000;
	min.f32 	%f736, %f733, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f737, %f736, 0f3F800000;
	add.f32 	%f738, %f735, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f739, %f738, %f728;
	mul.f32 	%f740, %f737, %f727;
$L__tmp93:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs447, %f740;
	cvt.rn.f16.f32 	%rs448, %f739;
	mov.b32 	%r2110, {%rs448, %rs447};
	.loc	1 111 23
	add.f16x2 	%r2111, %r2406, %r1837;
$L__tmp94:
	.loc	1 152 33
	mul.f16x2 	%r2112, %r2111, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2113, %r2111, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2114, %r2111, %r2113;
	.loc	1 153 67
	fma.rn.f16x2 	%r2115, %r2111, %r2114, %r2111;
	.loc	1 153 63
	mul.f16x2 	%r2116, %r2115, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2117, %r2116, %r2116;
	mov.b32 	{%rs449, %rs450}, %r2117;
	.loc	1 143 45
	add.f16 	%rs451, %rs449, %rs5;
	add.f16 	%rs452, %rs450, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs453, %rs449, %rs8, %rs5;
	fma.rn.f16 	%rs454, %rs450, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f741, %rs451;
	cvt.f32.f16 	%f742, %rs452;
	cvt.f32.f16 	%f743, %rs453;
	cvt.f32.f16 	%f744, %rs454;
	.loc	1 143 18
	mov.b32 	{%rs455, %rs456}, %r2116;
	cvt.f32.f16 	%f745, %rs456;
	cvt.f32.f16 	%f746, %rs455;
	.loc	1 153 12
	mov.b32 	{%rs457, %rs458}, %r2112;
	cvt.f32.f16 	%f747, %rs458;
	cvt.f32.f16 	%f748, %rs457;
	.loc	1 143 54
	mov.b32 	%r1462, %f741;
	mov.b32 	%r1463, %f743;
	// begin inline asm
	div.full.f32 %r1461, %r1462, %r1463;
	// end inline asm
	mov.b32 	%f749, %r1461;
	mov.b32 	%r1465, %f742;
	mov.b32 	%r1466, %f744;
	// begin inline asm
	div.full.f32 %r1464, %r1465, %r1466;
	// end inline asm
	mov.b32 	%f750, %r1464;
	.loc	1 143 18
	mul.f32 	%f751, %f749, %f746;
	mul.f32 	%f752, %f750, %f745;
	.loc	1 144 54
	max.f32 	%f753, %f752, 0fBF800000;
	max.f32 	%f754, %f751, 0fBF800000;
	min.f32 	%f755, %f754, 0f3F800000;
	min.f32 	%f756, %f753, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f757, %f756, 0f3F800000;
	add.f32 	%f758, %f755, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f759, %f758, %f748;
	mul.f32 	%f760, %f757, %f747;
$L__tmp95:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs459, %f760;
	cvt.rn.f16.f32 	%rs460, %f759;
	mov.b32 	%r2118, {%rs460, %rs459};
	.loc	1 111 23
	add.f16x2 	%r2119, %r2405, %r1852;
$L__tmp96:
	.loc	1 152 33
	mul.f16x2 	%r2120, %r2119, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2121, %r2119, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2122, %r2119, %r2121;
	.loc	1 153 67
	fma.rn.f16x2 	%r2123, %r2119, %r2122, %r2119;
	.loc	1 153 63
	mul.f16x2 	%r2124, %r2123, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2125, %r2124, %r2124;
	mov.b32 	{%rs461, %rs462}, %r2125;
	.loc	1 143 45
	add.f16 	%rs463, %rs461, %rs5;
	add.f16 	%rs464, %rs462, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs465, %rs461, %rs8, %rs5;
	fma.rn.f16 	%rs466, %rs462, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f761, %rs463;
	cvt.f32.f16 	%f762, %rs464;
	cvt.f32.f16 	%f763, %rs465;
	cvt.f32.f16 	%f764, %rs466;
	.loc	1 143 18
	mov.b32 	{%rs467, %rs468}, %r2124;
	cvt.f32.f16 	%f765, %rs468;
	cvt.f32.f16 	%f766, %rs467;
	.loc	1 153 12
	mov.b32 	{%rs469, %rs470}, %r2120;
	cvt.f32.f16 	%f767, %rs470;
	cvt.f32.f16 	%f768, %rs469;
	.loc	1 143 54
	mov.b32 	%r1468, %f761;
	mov.b32 	%r1469, %f763;
	// begin inline asm
	div.full.f32 %r1467, %r1468, %r1469;
	// end inline asm
	mov.b32 	%f769, %r1467;
	mov.b32 	%r1471, %f762;
	mov.b32 	%r1472, %f764;
	// begin inline asm
	div.full.f32 %r1470, %r1471, %r1472;
	// end inline asm
	mov.b32 	%f770, %r1470;
	.loc	1 143 18
	mul.f32 	%f771, %f769, %f766;
	mul.f32 	%f772, %f770, %f765;
	.loc	1 144 54
	max.f32 	%f773, %f772, 0fBF800000;
	max.f32 	%f774, %f771, 0fBF800000;
	min.f32 	%f775, %f774, 0f3F800000;
	min.f32 	%f776, %f773, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f777, %f776, 0f3F800000;
	add.f32 	%f778, %f775, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f779, %f778, %f768;
	mul.f32 	%f780, %f777, %f767;
$L__tmp97:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs471, %f780;
	cvt.rn.f16.f32 	%rs472, %f779;
	mov.b32 	%r2126, {%rs472, %rs471};
	.loc	1 111 23
	add.f16x2 	%r2127, %r2404, %r1852;
$L__tmp98:
	.loc	1 152 33
	mul.f16x2 	%r2128, %r2127, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2129, %r2127, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2130, %r2127, %r2129;
	.loc	1 153 67
	fma.rn.f16x2 	%r2131, %r2127, %r2130, %r2127;
	.loc	1 153 63
	mul.f16x2 	%r2132, %r2131, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2133, %r2132, %r2132;
	mov.b32 	{%rs473, %rs474}, %r2133;
	.loc	1 143 45
	add.f16 	%rs475, %rs473, %rs5;
	add.f16 	%rs476, %rs474, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs477, %rs473, %rs8, %rs5;
	fma.rn.f16 	%rs478, %rs474, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f781, %rs475;
	cvt.f32.f16 	%f782, %rs476;
	cvt.f32.f16 	%f783, %rs477;
	cvt.f32.f16 	%f784, %rs478;
	.loc	1 143 18
	mov.b32 	{%rs479, %rs480}, %r2132;
	cvt.f32.f16 	%f785, %rs480;
	cvt.f32.f16 	%f786, %rs479;
	.loc	1 153 12
	mov.b32 	{%rs481, %rs482}, %r2128;
	cvt.f32.f16 	%f787, %rs482;
	cvt.f32.f16 	%f788, %rs481;
	.loc	1 143 54
	mov.b32 	%r1474, %f781;
	mov.b32 	%r1475, %f783;
	// begin inline asm
	div.full.f32 %r1473, %r1474, %r1475;
	// end inline asm
	mov.b32 	%f789, %r1473;
	mov.b32 	%r1477, %f782;
	mov.b32 	%r1478, %f784;
	// begin inline asm
	div.full.f32 %r1476, %r1477, %r1478;
	// end inline asm
	mov.b32 	%f790, %r1476;
	.loc	1 143 18
	mul.f32 	%f791, %f789, %f786;
	mul.f32 	%f792, %f790, %f785;
	.loc	1 144 54
	max.f32 	%f793, %f792, 0fBF800000;
	max.f32 	%f794, %f791, 0fBF800000;
	min.f32 	%f795, %f794, 0f3F800000;
	min.f32 	%f796, %f793, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f797, %f796, 0f3F800000;
	add.f32 	%f798, %f795, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f799, %f798, %f788;
	mul.f32 	%f800, %f797, %f787;
$L__tmp99:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs483, %f800;
	cvt.rn.f16.f32 	%rs484, %f799;
	mov.b32 	%r2134, {%rs484, %rs483};
	.loc	1 111 23
	add.f16x2 	%r2135, %r2403, %r1867;
$L__tmp100:
	.loc	1 152 33
	mul.f16x2 	%r2136, %r2135, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2137, %r2135, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2138, %r2135, %r2137;
	.loc	1 153 67
	fma.rn.f16x2 	%r2139, %r2135, %r2138, %r2135;
	.loc	1 153 63
	mul.f16x2 	%r2140, %r2139, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2141, %r2140, %r2140;
	mov.b32 	{%rs485, %rs486}, %r2141;
	.loc	1 143 45
	add.f16 	%rs487, %rs485, %rs5;
	add.f16 	%rs488, %rs486, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs489, %rs485, %rs8, %rs5;
	fma.rn.f16 	%rs490, %rs486, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f801, %rs487;
	cvt.f32.f16 	%f802, %rs488;
	cvt.f32.f16 	%f803, %rs489;
	cvt.f32.f16 	%f804, %rs490;
	.loc	1 143 18
	mov.b32 	{%rs491, %rs492}, %r2140;
	cvt.f32.f16 	%f805, %rs492;
	cvt.f32.f16 	%f806, %rs491;
	.loc	1 153 12
	mov.b32 	{%rs493, %rs494}, %r2136;
	cvt.f32.f16 	%f807, %rs494;
	cvt.f32.f16 	%f808, %rs493;
	.loc	1 143 54
	mov.b32 	%r1480, %f801;
	mov.b32 	%r1481, %f803;
	// begin inline asm
	div.full.f32 %r1479, %r1480, %r1481;
	// end inline asm
	mov.b32 	%f809, %r1479;
	mov.b32 	%r1483, %f802;
	mov.b32 	%r1484, %f804;
	// begin inline asm
	div.full.f32 %r1482, %r1483, %r1484;
	// end inline asm
	mov.b32 	%f810, %r1482;
	.loc	1 143 18
	mul.f32 	%f811, %f809, %f806;
	mul.f32 	%f812, %f810, %f805;
	.loc	1 144 54
	max.f32 	%f813, %f812, 0fBF800000;
	max.f32 	%f814, %f811, 0fBF800000;
	min.f32 	%f815, %f814, 0f3F800000;
	min.f32 	%f816, %f813, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f817, %f816, 0f3F800000;
	add.f32 	%f818, %f815, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f819, %f818, %f808;
	mul.f32 	%f820, %f817, %f807;
$L__tmp101:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs495, %f820;
	cvt.rn.f16.f32 	%rs496, %f819;
	mov.b32 	%r2142, {%rs496, %rs495};
	.loc	1 111 23
	add.f16x2 	%r2143, %r2402, %r1867;
$L__tmp102:
	.loc	1 152 33
	mul.f16x2 	%r2144, %r2143, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2145, %r2143, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2146, %r2143, %r2145;
	.loc	1 153 67
	fma.rn.f16x2 	%r2147, %r2143, %r2146, %r2143;
	.loc	1 153 63
	mul.f16x2 	%r2148, %r2147, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2149, %r2148, %r2148;
	mov.b32 	{%rs497, %rs498}, %r2149;
	.loc	1 143 45
	add.f16 	%rs499, %rs497, %rs5;
	add.f16 	%rs500, %rs498, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs501, %rs497, %rs8, %rs5;
	fma.rn.f16 	%rs502, %rs498, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f821, %rs499;
	cvt.f32.f16 	%f822, %rs500;
	cvt.f32.f16 	%f823, %rs501;
	cvt.f32.f16 	%f824, %rs502;
	.loc	1 143 18
	mov.b32 	{%rs503, %rs504}, %r2148;
	cvt.f32.f16 	%f825, %rs504;
	cvt.f32.f16 	%f826, %rs503;
	.loc	1 153 12
	mov.b32 	{%rs505, %rs506}, %r2144;
	cvt.f32.f16 	%f827, %rs506;
	cvt.f32.f16 	%f828, %rs505;
	.loc	1 143 54
	mov.b32 	%r1486, %f821;
	mov.b32 	%r1487, %f823;
	// begin inline asm
	div.full.f32 %r1485, %r1486, %r1487;
	// end inline asm
	mov.b32 	%f829, %r1485;
	mov.b32 	%r1489, %f822;
	mov.b32 	%r1490, %f824;
	// begin inline asm
	div.full.f32 %r1488, %r1489, %r1490;
	// end inline asm
	mov.b32 	%f830, %r1488;
	.loc	1 143 18
	mul.f32 	%f831, %f829, %f826;
	mul.f32 	%f832, %f830, %f825;
	.loc	1 144 54
	max.f32 	%f833, %f832, 0fBF800000;
	max.f32 	%f834, %f831, 0fBF800000;
	min.f32 	%f835, %f834, 0f3F800000;
	min.f32 	%f836, %f833, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f837, %f836, 0f3F800000;
	add.f32 	%f838, %f835, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f839, %f838, %f828;
	mul.f32 	%f840, %f837, %f827;
$L__tmp103:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs507, %f840;
	cvt.rn.f16.f32 	%rs508, %f839;
	mov.b32 	%r2150, {%rs508, %rs507};
	.loc	1 111 23
	add.f16x2 	%r2151, %r2401, %r1882;
$L__tmp104:
	.loc	1 152 33
	mul.f16x2 	%r2152, %r2151, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2153, %r2151, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2154, %r2151, %r2153;
	.loc	1 153 67
	fma.rn.f16x2 	%r2155, %r2151, %r2154, %r2151;
	.loc	1 153 63
	mul.f16x2 	%r2156, %r2155, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2157, %r2156, %r2156;
	mov.b32 	{%rs509, %rs510}, %r2157;
	.loc	1 143 45
	add.f16 	%rs511, %rs509, %rs5;
	add.f16 	%rs512, %rs510, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs513, %rs509, %rs8, %rs5;
	fma.rn.f16 	%rs514, %rs510, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f841, %rs511;
	cvt.f32.f16 	%f842, %rs512;
	cvt.f32.f16 	%f843, %rs513;
	cvt.f32.f16 	%f844, %rs514;
	.loc	1 143 18
	mov.b32 	{%rs515, %rs516}, %r2156;
	cvt.f32.f16 	%f845, %rs516;
	cvt.f32.f16 	%f846, %rs515;
	.loc	1 153 12
	mov.b32 	{%rs517, %rs518}, %r2152;
	cvt.f32.f16 	%f847, %rs518;
	cvt.f32.f16 	%f848, %rs517;
	.loc	1 143 54
	mov.b32 	%r1492, %f841;
	mov.b32 	%r1493, %f843;
	// begin inline asm
	div.full.f32 %r1491, %r1492, %r1493;
	// end inline asm
	mov.b32 	%f849, %r1491;
	mov.b32 	%r1495, %f842;
	mov.b32 	%r1496, %f844;
	// begin inline asm
	div.full.f32 %r1494, %r1495, %r1496;
	// end inline asm
	mov.b32 	%f850, %r1494;
	.loc	1 143 18
	mul.f32 	%f851, %f849, %f846;
	mul.f32 	%f852, %f850, %f845;
	.loc	1 144 54
	max.f32 	%f853, %f852, 0fBF800000;
	max.f32 	%f854, %f851, 0fBF800000;
	min.f32 	%f855, %f854, 0f3F800000;
	min.f32 	%f856, %f853, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f857, %f856, 0f3F800000;
	add.f32 	%f858, %f855, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f859, %f858, %f848;
	mul.f32 	%f860, %f857, %f847;
$L__tmp105:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs519, %f860;
	cvt.rn.f16.f32 	%rs520, %f859;
	mov.b32 	%r2158, {%rs520, %rs519};
	.loc	1 111 23
	add.f16x2 	%r2159, %r2400, %r1882;
$L__tmp106:
	.loc	1 152 33
	mul.f16x2 	%r2160, %r2159, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2161, %r2159, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2162, %r2159, %r2161;
	.loc	1 153 67
	fma.rn.f16x2 	%r2163, %r2159, %r2162, %r2159;
	.loc	1 153 63
	mul.f16x2 	%r2164, %r2163, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2165, %r2164, %r2164;
	mov.b32 	{%rs521, %rs522}, %r2165;
	.loc	1 143 45
	add.f16 	%rs523, %rs521, %rs5;
	add.f16 	%rs524, %rs522, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs525, %rs521, %rs8, %rs5;
	fma.rn.f16 	%rs526, %rs522, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f861, %rs523;
	cvt.f32.f16 	%f862, %rs524;
	cvt.f32.f16 	%f863, %rs525;
	cvt.f32.f16 	%f864, %rs526;
	.loc	1 143 18
	mov.b32 	{%rs527, %rs528}, %r2164;
	cvt.f32.f16 	%f865, %rs528;
	cvt.f32.f16 	%f866, %rs527;
	.loc	1 153 12
	mov.b32 	{%rs529, %rs530}, %r2160;
	cvt.f32.f16 	%f867, %rs530;
	cvt.f32.f16 	%f868, %rs529;
	.loc	1 143 54
	mov.b32 	%r1498, %f861;
	mov.b32 	%r1499, %f863;
	// begin inline asm
	div.full.f32 %r1497, %r1498, %r1499;
	// end inline asm
	mov.b32 	%f869, %r1497;
	mov.b32 	%r1501, %f862;
	mov.b32 	%r1502, %f864;
	// begin inline asm
	div.full.f32 %r1500, %r1501, %r1502;
	// end inline asm
	mov.b32 	%f870, %r1500;
	.loc	1 143 18
	mul.f32 	%f871, %f869, %f866;
	mul.f32 	%f872, %f870, %f865;
	.loc	1 144 54
	max.f32 	%f873, %f872, 0fBF800000;
	max.f32 	%f874, %f871, 0fBF800000;
	min.f32 	%f875, %f874, 0f3F800000;
	min.f32 	%f876, %f873, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f877, %f876, 0f3F800000;
	add.f32 	%f878, %f875, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f879, %f878, %f868;
	mul.f32 	%f880, %f877, %f867;
$L__tmp107:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs531, %f880;
	cvt.rn.f16.f32 	%rs532, %f879;
	mov.b32 	%r2166, {%rs532, %rs531};
	.loc	1 111 23
	add.f16x2 	%r2167, %r2399, %r1897;
$L__tmp108:
	.loc	1 152 33
	mul.f16x2 	%r2168, %r2167, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2169, %r2167, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2170, %r2167, %r2169;
	.loc	1 153 67
	fma.rn.f16x2 	%r2171, %r2167, %r2170, %r2167;
	.loc	1 153 63
	mul.f16x2 	%r2172, %r2171, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2173, %r2172, %r2172;
	mov.b32 	{%rs533, %rs534}, %r2173;
	.loc	1 143 45
	add.f16 	%rs535, %rs533, %rs5;
	add.f16 	%rs536, %rs534, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs537, %rs533, %rs8, %rs5;
	fma.rn.f16 	%rs538, %rs534, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f881, %rs535;
	cvt.f32.f16 	%f882, %rs536;
	cvt.f32.f16 	%f883, %rs537;
	cvt.f32.f16 	%f884, %rs538;
	.loc	1 143 18
	mov.b32 	{%rs539, %rs540}, %r2172;
	cvt.f32.f16 	%f885, %rs540;
	cvt.f32.f16 	%f886, %rs539;
	.loc	1 153 12
	mov.b32 	{%rs541, %rs542}, %r2168;
	cvt.f32.f16 	%f887, %rs542;
	cvt.f32.f16 	%f888, %rs541;
	.loc	1 143 54
	mov.b32 	%r1504, %f881;
	mov.b32 	%r1505, %f883;
	// begin inline asm
	div.full.f32 %r1503, %r1504, %r1505;
	// end inline asm
	mov.b32 	%f889, %r1503;
	mov.b32 	%r1507, %f882;
	mov.b32 	%r1508, %f884;
	// begin inline asm
	div.full.f32 %r1506, %r1507, %r1508;
	// end inline asm
	mov.b32 	%f890, %r1506;
	.loc	1 143 18
	mul.f32 	%f891, %f889, %f886;
	mul.f32 	%f892, %f890, %f885;
	.loc	1 144 54
	max.f32 	%f893, %f892, 0fBF800000;
	max.f32 	%f894, %f891, 0fBF800000;
	min.f32 	%f895, %f894, 0f3F800000;
	min.f32 	%f896, %f893, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f897, %f896, 0f3F800000;
	add.f32 	%f898, %f895, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f899, %f898, %f888;
	mul.f32 	%f900, %f897, %f887;
$L__tmp109:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs543, %f900;
	cvt.rn.f16.f32 	%rs544, %f899;
	mov.b32 	%r2174, {%rs544, %rs543};
	.loc	1 111 23
	add.f16x2 	%r2175, %r2398, %r1897;
$L__tmp110:
	.loc	1 152 33
	mul.f16x2 	%r2176, %r2175, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2177, %r2175, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2178, %r2175, %r2177;
	.loc	1 153 67
	fma.rn.f16x2 	%r2179, %r2175, %r2178, %r2175;
	.loc	1 153 63
	mul.f16x2 	%r2180, %r2179, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2181, %r2180, %r2180;
	mov.b32 	{%rs545, %rs546}, %r2181;
	.loc	1 143 45
	add.f16 	%rs547, %rs545, %rs5;
	add.f16 	%rs548, %rs546, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs549, %rs545, %rs8, %rs5;
	fma.rn.f16 	%rs550, %rs546, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f901, %rs547;
	cvt.f32.f16 	%f902, %rs548;
	cvt.f32.f16 	%f903, %rs549;
	cvt.f32.f16 	%f904, %rs550;
	.loc	1 143 18
	mov.b32 	{%rs551, %rs552}, %r2180;
	cvt.f32.f16 	%f905, %rs552;
	cvt.f32.f16 	%f906, %rs551;
	.loc	1 153 12
	mov.b32 	{%rs553, %rs554}, %r2176;
	cvt.f32.f16 	%f907, %rs554;
	cvt.f32.f16 	%f908, %rs553;
	.loc	1 143 54
	mov.b32 	%r1510, %f901;
	mov.b32 	%r1511, %f903;
	// begin inline asm
	div.full.f32 %r1509, %r1510, %r1511;
	// end inline asm
	mov.b32 	%f909, %r1509;
	mov.b32 	%r1513, %f902;
	mov.b32 	%r1514, %f904;
	// begin inline asm
	div.full.f32 %r1512, %r1513, %r1514;
	// end inline asm
	mov.b32 	%f910, %r1512;
	.loc	1 143 18
	mul.f32 	%f911, %f909, %f906;
	mul.f32 	%f912, %f910, %f905;
	.loc	1 144 54
	max.f32 	%f913, %f912, 0fBF800000;
	max.f32 	%f914, %f911, 0fBF800000;
	min.f32 	%f915, %f914, 0f3F800000;
	min.f32 	%f916, %f913, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f917, %f916, 0f3F800000;
	add.f32 	%f918, %f915, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f919, %f918, %f908;
	mul.f32 	%f920, %f917, %f907;
$L__tmp111:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs555, %f920;
	cvt.rn.f16.f32 	%rs556, %f919;
	mov.b32 	%r2182, {%rs556, %rs555};
	.loc	1 111 23
	add.f16x2 	%r2183, %r2397, %r1912;
$L__tmp112:
	.loc	1 152 33
	mul.f16x2 	%r2184, %r2183, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2185, %r2183, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2186, %r2183, %r2185;
	.loc	1 153 67
	fma.rn.f16x2 	%r2187, %r2183, %r2186, %r2183;
	.loc	1 153 63
	mul.f16x2 	%r2188, %r2187, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2189, %r2188, %r2188;
	mov.b32 	{%rs557, %rs558}, %r2189;
	.loc	1 143 45
	add.f16 	%rs559, %rs557, %rs5;
	add.f16 	%rs560, %rs558, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs561, %rs557, %rs8, %rs5;
	fma.rn.f16 	%rs562, %rs558, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f921, %rs559;
	cvt.f32.f16 	%f922, %rs560;
	cvt.f32.f16 	%f923, %rs561;
	cvt.f32.f16 	%f924, %rs562;
	.loc	1 143 18
	mov.b32 	{%rs563, %rs564}, %r2188;
	cvt.f32.f16 	%f925, %rs564;
	cvt.f32.f16 	%f926, %rs563;
	.loc	1 153 12
	mov.b32 	{%rs565, %rs566}, %r2184;
	cvt.f32.f16 	%f927, %rs566;
	cvt.f32.f16 	%f928, %rs565;
	.loc	1 143 54
	mov.b32 	%r1516, %f921;
	mov.b32 	%r1517, %f923;
	// begin inline asm
	div.full.f32 %r1515, %r1516, %r1517;
	// end inline asm
	mov.b32 	%f929, %r1515;
	mov.b32 	%r1519, %f922;
	mov.b32 	%r1520, %f924;
	// begin inline asm
	div.full.f32 %r1518, %r1519, %r1520;
	// end inline asm
	mov.b32 	%f930, %r1518;
	.loc	1 143 18
	mul.f32 	%f931, %f929, %f926;
	mul.f32 	%f932, %f930, %f925;
	.loc	1 144 54
	max.f32 	%f933, %f932, 0fBF800000;
	max.f32 	%f934, %f931, 0fBF800000;
	min.f32 	%f935, %f934, 0f3F800000;
	min.f32 	%f936, %f933, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f937, %f936, 0f3F800000;
	add.f32 	%f938, %f935, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f939, %f938, %f928;
	mul.f32 	%f940, %f937, %f927;
$L__tmp113:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs567, %f940;
	cvt.rn.f16.f32 	%rs568, %f939;
	mov.b32 	%r2190, {%rs568, %rs567};
	.loc	1 111 23
	add.f16x2 	%r2191, %r2396, %r1912;
$L__tmp114:
	.loc	1 152 33
	mul.f16x2 	%r2192, %r2191, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2193, %r2191, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2194, %r2191, %r2193;
	.loc	1 153 67
	fma.rn.f16x2 	%r2195, %r2191, %r2194, %r2191;
	.loc	1 153 63
	mul.f16x2 	%r2196, %r2195, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2197, %r2196, %r2196;
	mov.b32 	{%rs569, %rs570}, %r2197;
	.loc	1 143 45
	add.f16 	%rs571, %rs569, %rs5;
	add.f16 	%rs572, %rs570, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs573, %rs569, %rs8, %rs5;
	fma.rn.f16 	%rs574, %rs570, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f941, %rs571;
	cvt.f32.f16 	%f942, %rs572;
	cvt.f32.f16 	%f943, %rs573;
	cvt.f32.f16 	%f944, %rs574;
	.loc	1 143 18
	mov.b32 	{%rs575, %rs576}, %r2196;
	cvt.f32.f16 	%f945, %rs576;
	cvt.f32.f16 	%f946, %rs575;
	.loc	1 153 12
	mov.b32 	{%rs577, %rs578}, %r2192;
	cvt.f32.f16 	%f947, %rs578;
	cvt.f32.f16 	%f948, %rs577;
	.loc	1 143 54
	mov.b32 	%r1522, %f941;
	mov.b32 	%r1523, %f943;
	// begin inline asm
	div.full.f32 %r1521, %r1522, %r1523;
	// end inline asm
	mov.b32 	%f949, %r1521;
	mov.b32 	%r1525, %f942;
	mov.b32 	%r1526, %f944;
	// begin inline asm
	div.full.f32 %r1524, %r1525, %r1526;
	// end inline asm
	mov.b32 	%f950, %r1524;
	.loc	1 143 18
	mul.f32 	%f951, %f949, %f946;
	mul.f32 	%f952, %f950, %f945;
	.loc	1 144 54
	max.f32 	%f953, %f952, 0fBF800000;
	max.f32 	%f954, %f951, 0fBF800000;
	min.f32 	%f955, %f954, 0f3F800000;
	min.f32 	%f956, %f953, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f957, %f956, 0f3F800000;
	add.f32 	%f958, %f955, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f959, %f958, %f948;
	mul.f32 	%f960, %f957, %f947;
$L__tmp115:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs579, %f960;
	cvt.rn.f16.f32 	%rs580, %f959;
	mov.b32 	%r2198, {%rs580, %rs579};
	.loc	1 111 23
	add.f16x2 	%r2199, %r2395, %r1804;
$L__tmp116:
	.loc	1 152 33
	mul.f16x2 	%r2200, %r2199, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2201, %r2199, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2202, %r2199, %r2201;
	.loc	1 153 67
	fma.rn.f16x2 	%r2203, %r2199, %r2202, %r2199;
	.loc	1 153 63
	mul.f16x2 	%r2204, %r2203, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2205, %r2204, %r2204;
	mov.b32 	{%rs581, %rs582}, %r2205;
	.loc	1 143 45
	add.f16 	%rs583, %rs581, %rs5;
	add.f16 	%rs584, %rs582, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs585, %rs581, %rs8, %rs5;
	fma.rn.f16 	%rs586, %rs582, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f961, %rs583;
	cvt.f32.f16 	%f962, %rs584;
	cvt.f32.f16 	%f963, %rs585;
	cvt.f32.f16 	%f964, %rs586;
	.loc	1 143 18
	mov.b32 	{%rs587, %rs588}, %r2204;
	cvt.f32.f16 	%f965, %rs588;
	cvt.f32.f16 	%f966, %rs587;
	.loc	1 153 12
	mov.b32 	{%rs589, %rs590}, %r2200;
	cvt.f32.f16 	%f967, %rs590;
	cvt.f32.f16 	%f968, %rs589;
	.loc	1 143 54
	mov.b32 	%r1528, %f961;
	mov.b32 	%r1529, %f963;
	// begin inline asm
	div.full.f32 %r1527, %r1528, %r1529;
	// end inline asm
	mov.b32 	%f969, %r1527;
	mov.b32 	%r1531, %f962;
	mov.b32 	%r1532, %f964;
	// begin inline asm
	div.full.f32 %r1530, %r1531, %r1532;
	// end inline asm
	mov.b32 	%f970, %r1530;
	.loc	1 143 18
	mul.f32 	%f971, %f969, %f966;
	mul.f32 	%f972, %f970, %f965;
	.loc	1 144 54
	max.f32 	%f973, %f972, 0fBF800000;
	max.f32 	%f974, %f971, 0fBF800000;
	min.f32 	%f975, %f974, 0f3F800000;
	min.f32 	%f976, %f973, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f977, %f976, 0f3F800000;
	add.f32 	%f978, %f975, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f979, %f978, %f968;
	mul.f32 	%f980, %f977, %f967;
$L__tmp117:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs591, %f980;
	cvt.rn.f16.f32 	%rs592, %f979;
	mov.b32 	%r2206, {%rs592, %rs591};
	.loc	1 111 23
	add.f16x2 	%r2207, %r2394, %r1804;
$L__tmp118:
	.loc	1 152 33
	mul.f16x2 	%r2208, %r2207, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2209, %r2207, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2210, %r2207, %r2209;
	.loc	1 153 67
	fma.rn.f16x2 	%r2211, %r2207, %r2210, %r2207;
	.loc	1 153 63
	mul.f16x2 	%r2212, %r2211, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2213, %r2212, %r2212;
	mov.b32 	{%rs593, %rs594}, %r2213;
	.loc	1 143 45
	add.f16 	%rs595, %rs593, %rs5;
	add.f16 	%rs596, %rs594, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs597, %rs593, %rs8, %rs5;
	fma.rn.f16 	%rs598, %rs594, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f981, %rs595;
	cvt.f32.f16 	%f982, %rs596;
	cvt.f32.f16 	%f983, %rs597;
	cvt.f32.f16 	%f984, %rs598;
	.loc	1 143 18
	mov.b32 	{%rs599, %rs600}, %r2212;
	cvt.f32.f16 	%f985, %rs600;
	cvt.f32.f16 	%f986, %rs599;
	.loc	1 153 12
	mov.b32 	{%rs601, %rs602}, %r2208;
	cvt.f32.f16 	%f987, %rs602;
	cvt.f32.f16 	%f988, %rs601;
	.loc	1 143 54
	mov.b32 	%r1534, %f981;
	mov.b32 	%r1535, %f983;
	// begin inline asm
	div.full.f32 %r1533, %r1534, %r1535;
	// end inline asm
	mov.b32 	%f989, %r1533;
	mov.b32 	%r1537, %f982;
	mov.b32 	%r1538, %f984;
	// begin inline asm
	div.full.f32 %r1536, %r1537, %r1538;
	// end inline asm
	mov.b32 	%f990, %r1536;
	.loc	1 143 18
	mul.f32 	%f991, %f989, %f986;
	mul.f32 	%f992, %f990, %f985;
	.loc	1 144 54
	max.f32 	%f993, %f992, 0fBF800000;
	max.f32 	%f994, %f991, 0fBF800000;
	min.f32 	%f995, %f994, 0f3F800000;
	min.f32 	%f996, %f993, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f997, %f996, 0f3F800000;
	add.f32 	%f998, %f995, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f999, %f998, %f988;
	mul.f32 	%f1000, %f997, %f987;
$L__tmp119:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs603, %f1000;
	cvt.rn.f16.f32 	%rs604, %f999;
	mov.b32 	%r2214, {%rs604, %rs603};
	.loc	1 111 23
	add.f16x2 	%r2215, %r2393, %r1822;
$L__tmp120:
	.loc	1 152 33
	mul.f16x2 	%r2216, %r2215, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2217, %r2215, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2218, %r2215, %r2217;
	.loc	1 153 67
	fma.rn.f16x2 	%r2219, %r2215, %r2218, %r2215;
	.loc	1 153 63
	mul.f16x2 	%r2220, %r2219, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2221, %r2220, %r2220;
	mov.b32 	{%rs605, %rs606}, %r2221;
	.loc	1 143 45
	add.f16 	%rs607, %rs605, %rs5;
	add.f16 	%rs608, %rs606, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs609, %rs605, %rs8, %rs5;
	fma.rn.f16 	%rs610, %rs606, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1001, %rs607;
	cvt.f32.f16 	%f1002, %rs608;
	cvt.f32.f16 	%f1003, %rs609;
	cvt.f32.f16 	%f1004, %rs610;
	.loc	1 143 18
	mov.b32 	{%rs611, %rs612}, %r2220;
	cvt.f32.f16 	%f1005, %rs612;
	cvt.f32.f16 	%f1006, %rs611;
	.loc	1 153 12
	mov.b32 	{%rs613, %rs614}, %r2216;
	cvt.f32.f16 	%f1007, %rs614;
	cvt.f32.f16 	%f1008, %rs613;
	.loc	1 143 54
	mov.b32 	%r1540, %f1001;
	mov.b32 	%r1541, %f1003;
	// begin inline asm
	div.full.f32 %r1539, %r1540, %r1541;
	// end inline asm
	mov.b32 	%f1009, %r1539;
	mov.b32 	%r1543, %f1002;
	mov.b32 	%r1544, %f1004;
	// begin inline asm
	div.full.f32 %r1542, %r1543, %r1544;
	// end inline asm
	mov.b32 	%f1010, %r1542;
	.loc	1 143 18
	mul.f32 	%f1011, %f1009, %f1006;
	mul.f32 	%f1012, %f1010, %f1005;
	.loc	1 144 54
	max.f32 	%f1013, %f1012, 0fBF800000;
	max.f32 	%f1014, %f1011, 0fBF800000;
	min.f32 	%f1015, %f1014, 0f3F800000;
	min.f32 	%f1016, %f1013, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1017, %f1016, 0f3F800000;
	add.f32 	%f1018, %f1015, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1019, %f1018, %f1008;
	mul.f32 	%f1020, %f1017, %f1007;
$L__tmp121:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs615, %f1020;
	cvt.rn.f16.f32 	%rs616, %f1019;
	mov.b32 	%r2222, {%rs616, %rs615};
	.loc	1 111 23
	add.f16x2 	%r2223, %r2392, %r1822;
$L__tmp122:
	.loc	1 152 33
	mul.f16x2 	%r2224, %r2223, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2225, %r2223, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2226, %r2223, %r2225;
	.loc	1 153 67
	fma.rn.f16x2 	%r2227, %r2223, %r2226, %r2223;
	.loc	1 153 63
	mul.f16x2 	%r2228, %r2227, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2229, %r2228, %r2228;
	mov.b32 	{%rs617, %rs618}, %r2229;
	.loc	1 143 45
	add.f16 	%rs619, %rs617, %rs5;
	add.f16 	%rs620, %rs618, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs621, %rs617, %rs8, %rs5;
	fma.rn.f16 	%rs622, %rs618, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1021, %rs619;
	cvt.f32.f16 	%f1022, %rs620;
	cvt.f32.f16 	%f1023, %rs621;
	cvt.f32.f16 	%f1024, %rs622;
	.loc	1 143 18
	mov.b32 	{%rs623, %rs624}, %r2228;
	cvt.f32.f16 	%f1025, %rs624;
	cvt.f32.f16 	%f1026, %rs623;
	.loc	1 153 12
	mov.b32 	{%rs625, %rs626}, %r2224;
	cvt.f32.f16 	%f1027, %rs626;
	cvt.f32.f16 	%f1028, %rs625;
	.loc	1 143 54
	mov.b32 	%r1546, %f1021;
	mov.b32 	%r1547, %f1023;
	// begin inline asm
	div.full.f32 %r1545, %r1546, %r1547;
	// end inline asm
	mov.b32 	%f1029, %r1545;
	mov.b32 	%r1549, %f1022;
	mov.b32 	%r1550, %f1024;
	// begin inline asm
	div.full.f32 %r1548, %r1549, %r1550;
	// end inline asm
	mov.b32 	%f1030, %r1548;
	.loc	1 143 18
	mul.f32 	%f1031, %f1029, %f1026;
	mul.f32 	%f1032, %f1030, %f1025;
	.loc	1 144 54
	max.f32 	%f1033, %f1032, 0fBF800000;
	max.f32 	%f1034, %f1031, 0fBF800000;
	min.f32 	%f1035, %f1034, 0f3F800000;
	min.f32 	%f1036, %f1033, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1037, %f1036, 0f3F800000;
	add.f32 	%f1038, %f1035, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1039, %f1038, %f1028;
	mul.f32 	%f1040, %f1037, %f1027;
$L__tmp123:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs627, %f1040;
	cvt.rn.f16.f32 	%rs628, %f1039;
	mov.b32 	%r2230, {%rs628, %rs627};
	.loc	1 111 23
	add.f16x2 	%r2231, %r2391, %r1837;
$L__tmp124:
	.loc	1 152 33
	mul.f16x2 	%r2232, %r2231, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2233, %r2231, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2234, %r2231, %r2233;
	.loc	1 153 67
	fma.rn.f16x2 	%r2235, %r2231, %r2234, %r2231;
	.loc	1 153 63
	mul.f16x2 	%r2236, %r2235, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2237, %r2236, %r2236;
	mov.b32 	{%rs629, %rs630}, %r2237;
	.loc	1 143 45
	add.f16 	%rs631, %rs629, %rs5;
	add.f16 	%rs632, %rs630, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs633, %rs629, %rs8, %rs5;
	fma.rn.f16 	%rs634, %rs630, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1041, %rs631;
	cvt.f32.f16 	%f1042, %rs632;
	cvt.f32.f16 	%f1043, %rs633;
	cvt.f32.f16 	%f1044, %rs634;
	.loc	1 143 18
	mov.b32 	{%rs635, %rs636}, %r2236;
	cvt.f32.f16 	%f1045, %rs636;
	cvt.f32.f16 	%f1046, %rs635;
	.loc	1 153 12
	mov.b32 	{%rs637, %rs638}, %r2232;
	cvt.f32.f16 	%f1047, %rs638;
	cvt.f32.f16 	%f1048, %rs637;
	.loc	1 143 54
	mov.b32 	%r1552, %f1041;
	mov.b32 	%r1553, %f1043;
	// begin inline asm
	div.full.f32 %r1551, %r1552, %r1553;
	// end inline asm
	mov.b32 	%f1049, %r1551;
	mov.b32 	%r1555, %f1042;
	mov.b32 	%r1556, %f1044;
	// begin inline asm
	div.full.f32 %r1554, %r1555, %r1556;
	// end inline asm
	mov.b32 	%f1050, %r1554;
	.loc	1 143 18
	mul.f32 	%f1051, %f1049, %f1046;
	mul.f32 	%f1052, %f1050, %f1045;
	.loc	1 144 54
	max.f32 	%f1053, %f1052, 0fBF800000;
	max.f32 	%f1054, %f1051, 0fBF800000;
	min.f32 	%f1055, %f1054, 0f3F800000;
	min.f32 	%f1056, %f1053, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1057, %f1056, 0f3F800000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1059, %f1058, %f1048;
	mul.f32 	%f1060, %f1057, %f1047;
$L__tmp125:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs639, %f1060;
	cvt.rn.f16.f32 	%rs640, %f1059;
	mov.b32 	%r2238, {%rs640, %rs639};
	.loc	1 111 23
	add.f16x2 	%r2239, %r2390, %r1837;
$L__tmp126:
	.loc	1 152 33
	mul.f16x2 	%r2240, %r2239, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2241, %r2239, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2242, %r2239, %r2241;
	.loc	1 153 67
	fma.rn.f16x2 	%r2243, %r2239, %r2242, %r2239;
	.loc	1 153 63
	mul.f16x2 	%r2244, %r2243, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2245, %r2244, %r2244;
	mov.b32 	{%rs641, %rs642}, %r2245;
	.loc	1 143 45
	add.f16 	%rs643, %rs641, %rs5;
	add.f16 	%rs644, %rs642, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs645, %rs641, %rs8, %rs5;
	fma.rn.f16 	%rs646, %rs642, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1061, %rs643;
	cvt.f32.f16 	%f1062, %rs644;
	cvt.f32.f16 	%f1063, %rs645;
	cvt.f32.f16 	%f1064, %rs646;
	.loc	1 143 18
	mov.b32 	{%rs647, %rs648}, %r2244;
	cvt.f32.f16 	%f1065, %rs648;
	cvt.f32.f16 	%f1066, %rs647;
	.loc	1 153 12
	mov.b32 	{%rs649, %rs650}, %r2240;
	cvt.f32.f16 	%f1067, %rs650;
	cvt.f32.f16 	%f1068, %rs649;
	.loc	1 143 54
	mov.b32 	%r1558, %f1061;
	mov.b32 	%r1559, %f1063;
	// begin inline asm
	div.full.f32 %r1557, %r1558, %r1559;
	// end inline asm
	mov.b32 	%f1069, %r1557;
	mov.b32 	%r1561, %f1062;
	mov.b32 	%r1562, %f1064;
	// begin inline asm
	div.full.f32 %r1560, %r1561, %r1562;
	// end inline asm
	mov.b32 	%f1070, %r1560;
	.loc	1 143 18
	mul.f32 	%f1071, %f1069, %f1066;
	mul.f32 	%f1072, %f1070, %f1065;
	.loc	1 144 54
	max.f32 	%f1073, %f1072, 0fBF800000;
	max.f32 	%f1074, %f1071, 0fBF800000;
	min.f32 	%f1075, %f1074, 0f3F800000;
	min.f32 	%f1076, %f1073, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1077, %f1076, 0f3F800000;
	add.f32 	%f1078, %f1075, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1079, %f1078, %f1068;
	mul.f32 	%f1080, %f1077, %f1067;
$L__tmp127:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs651, %f1080;
	cvt.rn.f16.f32 	%rs652, %f1079;
	mov.b32 	%r2246, {%rs652, %rs651};
	.loc	1 111 23
	add.f16x2 	%r2247, %r2389, %r1852;
$L__tmp128:
	.loc	1 152 33
	mul.f16x2 	%r2248, %r2247, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2249, %r2247, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2250, %r2247, %r2249;
	.loc	1 153 67
	fma.rn.f16x2 	%r2251, %r2247, %r2250, %r2247;
	.loc	1 153 63
	mul.f16x2 	%r2252, %r2251, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2253, %r2252, %r2252;
	mov.b32 	{%rs653, %rs654}, %r2253;
	.loc	1 143 45
	add.f16 	%rs655, %rs653, %rs5;
	add.f16 	%rs656, %rs654, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs657, %rs653, %rs8, %rs5;
	fma.rn.f16 	%rs658, %rs654, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1081, %rs655;
	cvt.f32.f16 	%f1082, %rs656;
	cvt.f32.f16 	%f1083, %rs657;
	cvt.f32.f16 	%f1084, %rs658;
	.loc	1 143 18
	mov.b32 	{%rs659, %rs660}, %r2252;
	cvt.f32.f16 	%f1085, %rs660;
	cvt.f32.f16 	%f1086, %rs659;
	.loc	1 153 12
	mov.b32 	{%rs661, %rs662}, %r2248;
	cvt.f32.f16 	%f1087, %rs662;
	cvt.f32.f16 	%f1088, %rs661;
	.loc	1 143 54
	mov.b32 	%r1564, %f1081;
	mov.b32 	%r1565, %f1083;
	// begin inline asm
	div.full.f32 %r1563, %r1564, %r1565;
	// end inline asm
	mov.b32 	%f1089, %r1563;
	mov.b32 	%r1567, %f1082;
	mov.b32 	%r1568, %f1084;
	// begin inline asm
	div.full.f32 %r1566, %r1567, %r1568;
	// end inline asm
	mov.b32 	%f1090, %r1566;
	.loc	1 143 18
	mul.f32 	%f1091, %f1089, %f1086;
	mul.f32 	%f1092, %f1090, %f1085;
	.loc	1 144 54
	max.f32 	%f1093, %f1092, 0fBF800000;
	max.f32 	%f1094, %f1091, 0fBF800000;
	min.f32 	%f1095, %f1094, 0f3F800000;
	min.f32 	%f1096, %f1093, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1097, %f1096, 0f3F800000;
	add.f32 	%f1098, %f1095, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1099, %f1098, %f1088;
	mul.f32 	%f1100, %f1097, %f1087;
$L__tmp129:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs663, %f1100;
	cvt.rn.f16.f32 	%rs664, %f1099;
	mov.b32 	%r2254, {%rs664, %rs663};
	.loc	1 111 23
	add.f16x2 	%r2255, %r2388, %r1852;
$L__tmp130:
	.loc	1 152 33
	mul.f16x2 	%r2256, %r2255, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2257, %r2255, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2258, %r2255, %r2257;
	.loc	1 153 67
	fma.rn.f16x2 	%r2259, %r2255, %r2258, %r2255;
	.loc	1 153 63
	mul.f16x2 	%r2260, %r2259, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2261, %r2260, %r2260;
	mov.b32 	{%rs665, %rs666}, %r2261;
	.loc	1 143 45
	add.f16 	%rs667, %rs665, %rs5;
	add.f16 	%rs668, %rs666, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs669, %rs665, %rs8, %rs5;
	fma.rn.f16 	%rs670, %rs666, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1101, %rs667;
	cvt.f32.f16 	%f1102, %rs668;
	cvt.f32.f16 	%f1103, %rs669;
	cvt.f32.f16 	%f1104, %rs670;
	.loc	1 143 18
	mov.b32 	{%rs671, %rs672}, %r2260;
	cvt.f32.f16 	%f1105, %rs672;
	cvt.f32.f16 	%f1106, %rs671;
	.loc	1 153 12
	mov.b32 	{%rs673, %rs674}, %r2256;
	cvt.f32.f16 	%f1107, %rs674;
	cvt.f32.f16 	%f1108, %rs673;
	.loc	1 143 54
	mov.b32 	%r1570, %f1101;
	mov.b32 	%r1571, %f1103;
	// begin inline asm
	div.full.f32 %r1569, %r1570, %r1571;
	// end inline asm
	mov.b32 	%f1109, %r1569;
	mov.b32 	%r1573, %f1102;
	mov.b32 	%r1574, %f1104;
	// begin inline asm
	div.full.f32 %r1572, %r1573, %r1574;
	// end inline asm
	mov.b32 	%f1110, %r1572;
	.loc	1 143 18
	mul.f32 	%f1111, %f1109, %f1106;
	mul.f32 	%f1112, %f1110, %f1105;
	.loc	1 144 54
	max.f32 	%f1113, %f1112, 0fBF800000;
	max.f32 	%f1114, %f1111, 0fBF800000;
	min.f32 	%f1115, %f1114, 0f3F800000;
	min.f32 	%f1116, %f1113, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1117, %f1116, 0f3F800000;
	add.f32 	%f1118, %f1115, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1119, %f1118, %f1108;
	mul.f32 	%f1120, %f1117, %f1107;
$L__tmp131:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs675, %f1120;
	cvt.rn.f16.f32 	%rs676, %f1119;
	mov.b32 	%r2262, {%rs676, %rs675};
	.loc	1 111 23
	add.f16x2 	%r2263, %r2387, %r1867;
$L__tmp132:
	.loc	1 152 33
	mul.f16x2 	%r2264, %r2263, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2265, %r2263, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2266, %r2263, %r2265;
	.loc	1 153 67
	fma.rn.f16x2 	%r2267, %r2263, %r2266, %r2263;
	.loc	1 153 63
	mul.f16x2 	%r2268, %r2267, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2269, %r2268, %r2268;
	mov.b32 	{%rs677, %rs678}, %r2269;
	.loc	1 143 45
	add.f16 	%rs679, %rs677, %rs5;
	add.f16 	%rs680, %rs678, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs681, %rs677, %rs8, %rs5;
	fma.rn.f16 	%rs682, %rs678, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1121, %rs679;
	cvt.f32.f16 	%f1122, %rs680;
	cvt.f32.f16 	%f1123, %rs681;
	cvt.f32.f16 	%f1124, %rs682;
	.loc	1 143 18
	mov.b32 	{%rs683, %rs684}, %r2268;
	cvt.f32.f16 	%f1125, %rs684;
	cvt.f32.f16 	%f1126, %rs683;
	.loc	1 153 12
	mov.b32 	{%rs685, %rs686}, %r2264;
	cvt.f32.f16 	%f1127, %rs686;
	cvt.f32.f16 	%f1128, %rs685;
	.loc	1 143 54
	mov.b32 	%r1576, %f1121;
	mov.b32 	%r1577, %f1123;
	// begin inline asm
	div.full.f32 %r1575, %r1576, %r1577;
	// end inline asm
	mov.b32 	%f1129, %r1575;
	mov.b32 	%r1579, %f1122;
	mov.b32 	%r1580, %f1124;
	// begin inline asm
	div.full.f32 %r1578, %r1579, %r1580;
	// end inline asm
	mov.b32 	%f1130, %r1578;
	.loc	1 143 18
	mul.f32 	%f1131, %f1129, %f1126;
	mul.f32 	%f1132, %f1130, %f1125;
	.loc	1 144 54
	max.f32 	%f1133, %f1132, 0fBF800000;
	max.f32 	%f1134, %f1131, 0fBF800000;
	min.f32 	%f1135, %f1134, 0f3F800000;
	min.f32 	%f1136, %f1133, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1137, %f1136, 0f3F800000;
	add.f32 	%f1138, %f1135, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1139, %f1138, %f1128;
	mul.f32 	%f1140, %f1137, %f1127;
$L__tmp133:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs687, %f1140;
	cvt.rn.f16.f32 	%rs688, %f1139;
	mov.b32 	%r2270, {%rs688, %rs687};
	.loc	1 111 23
	add.f16x2 	%r2271, %r2386, %r1867;
$L__tmp134:
	.loc	1 152 33
	mul.f16x2 	%r2272, %r2271, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2273, %r2271, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2274, %r2271, %r2273;
	.loc	1 153 67
	fma.rn.f16x2 	%r2275, %r2271, %r2274, %r2271;
	.loc	1 153 63
	mul.f16x2 	%r2276, %r2275, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2277, %r2276, %r2276;
	mov.b32 	{%rs689, %rs690}, %r2277;
	.loc	1 143 45
	add.f16 	%rs691, %rs689, %rs5;
	add.f16 	%rs692, %rs690, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs693, %rs689, %rs8, %rs5;
	fma.rn.f16 	%rs694, %rs690, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1141, %rs691;
	cvt.f32.f16 	%f1142, %rs692;
	cvt.f32.f16 	%f1143, %rs693;
	cvt.f32.f16 	%f1144, %rs694;
	.loc	1 143 18
	mov.b32 	{%rs695, %rs696}, %r2276;
	cvt.f32.f16 	%f1145, %rs696;
	cvt.f32.f16 	%f1146, %rs695;
	.loc	1 153 12
	mov.b32 	{%rs697, %rs698}, %r2272;
	cvt.f32.f16 	%f1147, %rs698;
	cvt.f32.f16 	%f1148, %rs697;
	.loc	1 143 54
	mov.b32 	%r1582, %f1141;
	mov.b32 	%r1583, %f1143;
	// begin inline asm
	div.full.f32 %r1581, %r1582, %r1583;
	// end inline asm
	mov.b32 	%f1149, %r1581;
	mov.b32 	%r1585, %f1142;
	mov.b32 	%r1586, %f1144;
	// begin inline asm
	div.full.f32 %r1584, %r1585, %r1586;
	// end inline asm
	mov.b32 	%f1150, %r1584;
	.loc	1 143 18
	mul.f32 	%f1151, %f1149, %f1146;
	mul.f32 	%f1152, %f1150, %f1145;
	.loc	1 144 54
	max.f32 	%f1153, %f1152, 0fBF800000;
	max.f32 	%f1154, %f1151, 0fBF800000;
	min.f32 	%f1155, %f1154, 0f3F800000;
	min.f32 	%f1156, %f1153, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1157, %f1156, 0f3F800000;
	add.f32 	%f1158, %f1155, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1159, %f1158, %f1148;
	mul.f32 	%f1160, %f1157, %f1147;
$L__tmp135:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs699, %f1160;
	cvt.rn.f16.f32 	%rs700, %f1159;
	mov.b32 	%r2278, {%rs700, %rs699};
	.loc	1 111 23
	add.f16x2 	%r2279, %r2385, %r1882;
$L__tmp136:
	.loc	1 152 33
	mul.f16x2 	%r2280, %r2279, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2281, %r2279, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2282, %r2279, %r2281;
	.loc	1 153 67
	fma.rn.f16x2 	%r2283, %r2279, %r2282, %r2279;
	.loc	1 153 63
	mul.f16x2 	%r2284, %r2283, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2285, %r2284, %r2284;
	mov.b32 	{%rs701, %rs702}, %r2285;
	.loc	1 143 45
	add.f16 	%rs703, %rs701, %rs5;
	add.f16 	%rs704, %rs702, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs705, %rs701, %rs8, %rs5;
	fma.rn.f16 	%rs706, %rs702, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1161, %rs703;
	cvt.f32.f16 	%f1162, %rs704;
	cvt.f32.f16 	%f1163, %rs705;
	cvt.f32.f16 	%f1164, %rs706;
	.loc	1 143 18
	mov.b32 	{%rs707, %rs708}, %r2284;
	cvt.f32.f16 	%f1165, %rs708;
	cvt.f32.f16 	%f1166, %rs707;
	.loc	1 153 12
	mov.b32 	{%rs709, %rs710}, %r2280;
	cvt.f32.f16 	%f1167, %rs710;
	cvt.f32.f16 	%f1168, %rs709;
	.loc	1 143 54
	mov.b32 	%r1588, %f1161;
	mov.b32 	%r1589, %f1163;
	// begin inline asm
	div.full.f32 %r1587, %r1588, %r1589;
	// end inline asm
	mov.b32 	%f1169, %r1587;
	mov.b32 	%r1591, %f1162;
	mov.b32 	%r1592, %f1164;
	// begin inline asm
	div.full.f32 %r1590, %r1591, %r1592;
	// end inline asm
	mov.b32 	%f1170, %r1590;
	.loc	1 143 18
	mul.f32 	%f1171, %f1169, %f1166;
	mul.f32 	%f1172, %f1170, %f1165;
	.loc	1 144 54
	max.f32 	%f1173, %f1172, 0fBF800000;
	max.f32 	%f1174, %f1171, 0fBF800000;
	min.f32 	%f1175, %f1174, 0f3F800000;
	min.f32 	%f1176, %f1173, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1177, %f1176, 0f3F800000;
	add.f32 	%f1178, %f1175, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1179, %f1178, %f1168;
	mul.f32 	%f1180, %f1177, %f1167;
$L__tmp137:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs711, %f1180;
	cvt.rn.f16.f32 	%rs712, %f1179;
	mov.b32 	%r2286, {%rs712, %rs711};
	.loc	1 111 23
	add.f16x2 	%r2287, %r2384, %r1882;
$L__tmp138:
	.loc	1 152 33
	mul.f16x2 	%r2288, %r2287, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2289, %r2287, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2290, %r2287, %r2289;
	.loc	1 153 67
	fma.rn.f16x2 	%r2291, %r2287, %r2290, %r2287;
	.loc	1 153 63
	mul.f16x2 	%r2292, %r2291, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2293, %r2292, %r2292;
	mov.b32 	{%rs713, %rs714}, %r2293;
	.loc	1 143 45
	add.f16 	%rs715, %rs713, %rs5;
	add.f16 	%rs716, %rs714, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs717, %rs713, %rs8, %rs5;
	fma.rn.f16 	%rs718, %rs714, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1181, %rs715;
	cvt.f32.f16 	%f1182, %rs716;
	cvt.f32.f16 	%f1183, %rs717;
	cvt.f32.f16 	%f1184, %rs718;
	.loc	1 143 18
	mov.b32 	{%rs719, %rs720}, %r2292;
	cvt.f32.f16 	%f1185, %rs720;
	cvt.f32.f16 	%f1186, %rs719;
	.loc	1 153 12
	mov.b32 	{%rs721, %rs722}, %r2288;
	cvt.f32.f16 	%f1187, %rs722;
	cvt.f32.f16 	%f1188, %rs721;
	.loc	1 143 54
	mov.b32 	%r1594, %f1181;
	mov.b32 	%r1595, %f1183;
	// begin inline asm
	div.full.f32 %r1593, %r1594, %r1595;
	// end inline asm
	mov.b32 	%f1189, %r1593;
	mov.b32 	%r1597, %f1182;
	mov.b32 	%r1598, %f1184;
	// begin inline asm
	div.full.f32 %r1596, %r1597, %r1598;
	// end inline asm
	mov.b32 	%f1190, %r1596;
	.loc	1 143 18
	mul.f32 	%f1191, %f1189, %f1186;
	mul.f32 	%f1192, %f1190, %f1185;
	.loc	1 144 54
	max.f32 	%f1193, %f1192, 0fBF800000;
	max.f32 	%f1194, %f1191, 0fBF800000;
	min.f32 	%f1195, %f1194, 0f3F800000;
	min.f32 	%f1196, %f1193, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1197, %f1196, 0f3F800000;
	add.f32 	%f1198, %f1195, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1199, %f1198, %f1188;
	mul.f32 	%f1200, %f1197, %f1187;
$L__tmp139:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs723, %f1200;
	cvt.rn.f16.f32 	%rs724, %f1199;
	mov.b32 	%r2294, {%rs724, %rs723};
	.loc	1 111 23
	add.f16x2 	%r2295, %r2383, %r1897;
$L__tmp140:
	.loc	1 152 33
	mul.f16x2 	%r2296, %r2295, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2297, %r2295, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2298, %r2295, %r2297;
	.loc	1 153 67
	fma.rn.f16x2 	%r2299, %r2295, %r2298, %r2295;
	.loc	1 153 63
	mul.f16x2 	%r2300, %r2299, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2301, %r2300, %r2300;
	mov.b32 	{%rs725, %rs726}, %r2301;
	.loc	1 143 45
	add.f16 	%rs727, %rs725, %rs5;
	add.f16 	%rs728, %rs726, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs729, %rs725, %rs8, %rs5;
	fma.rn.f16 	%rs730, %rs726, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1201, %rs727;
	cvt.f32.f16 	%f1202, %rs728;
	cvt.f32.f16 	%f1203, %rs729;
	cvt.f32.f16 	%f1204, %rs730;
	.loc	1 143 18
	mov.b32 	{%rs731, %rs732}, %r2300;
	cvt.f32.f16 	%f1205, %rs732;
	cvt.f32.f16 	%f1206, %rs731;
	.loc	1 153 12
	mov.b32 	{%rs733, %rs734}, %r2296;
	cvt.f32.f16 	%f1207, %rs734;
	cvt.f32.f16 	%f1208, %rs733;
	.loc	1 143 54
	mov.b32 	%r1600, %f1201;
	mov.b32 	%r1601, %f1203;
	// begin inline asm
	div.full.f32 %r1599, %r1600, %r1601;
	// end inline asm
	mov.b32 	%f1209, %r1599;
	mov.b32 	%r1603, %f1202;
	mov.b32 	%r1604, %f1204;
	// begin inline asm
	div.full.f32 %r1602, %r1603, %r1604;
	// end inline asm
	mov.b32 	%f1210, %r1602;
	.loc	1 143 18
	mul.f32 	%f1211, %f1209, %f1206;
	mul.f32 	%f1212, %f1210, %f1205;
	.loc	1 144 54
	max.f32 	%f1213, %f1212, 0fBF800000;
	max.f32 	%f1214, %f1211, 0fBF800000;
	min.f32 	%f1215, %f1214, 0f3F800000;
	min.f32 	%f1216, %f1213, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1217, %f1216, 0f3F800000;
	add.f32 	%f1218, %f1215, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1219, %f1218, %f1208;
	mul.f32 	%f1220, %f1217, %f1207;
$L__tmp141:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs735, %f1220;
	cvt.rn.f16.f32 	%rs736, %f1219;
	mov.b32 	%r2302, {%rs736, %rs735};
	.loc	1 111 23
	add.f16x2 	%r2303, %r2382, %r1897;
$L__tmp142:
	.loc	1 152 33
	mul.f16x2 	%r2304, %r2303, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2305, %r2303, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2306, %r2303, %r2305;
	.loc	1 153 67
	fma.rn.f16x2 	%r2307, %r2303, %r2306, %r2303;
	.loc	1 153 63
	mul.f16x2 	%r2308, %r2307, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2309, %r2308, %r2308;
	mov.b32 	{%rs737, %rs738}, %r2309;
	.loc	1 143 45
	add.f16 	%rs739, %rs737, %rs5;
	add.f16 	%rs740, %rs738, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs741, %rs737, %rs8, %rs5;
	fma.rn.f16 	%rs742, %rs738, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1221, %rs739;
	cvt.f32.f16 	%f1222, %rs740;
	cvt.f32.f16 	%f1223, %rs741;
	cvt.f32.f16 	%f1224, %rs742;
	.loc	1 143 18
	mov.b32 	{%rs743, %rs744}, %r2308;
	cvt.f32.f16 	%f1225, %rs744;
	cvt.f32.f16 	%f1226, %rs743;
	.loc	1 153 12
	mov.b32 	{%rs745, %rs746}, %r2304;
	cvt.f32.f16 	%f1227, %rs746;
	cvt.f32.f16 	%f1228, %rs745;
	.loc	1 143 54
	mov.b32 	%r1606, %f1221;
	mov.b32 	%r1607, %f1223;
	// begin inline asm
	div.full.f32 %r1605, %r1606, %r1607;
	// end inline asm
	mov.b32 	%f1229, %r1605;
	mov.b32 	%r1609, %f1222;
	mov.b32 	%r1610, %f1224;
	// begin inline asm
	div.full.f32 %r1608, %r1609, %r1610;
	// end inline asm
	mov.b32 	%f1230, %r1608;
	.loc	1 143 18
	mul.f32 	%f1231, %f1229, %f1226;
	mul.f32 	%f1232, %f1230, %f1225;
	.loc	1 144 54
	max.f32 	%f1233, %f1232, 0fBF800000;
	max.f32 	%f1234, %f1231, 0fBF800000;
	min.f32 	%f1235, %f1234, 0f3F800000;
	min.f32 	%f1236, %f1233, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1237, %f1236, 0f3F800000;
	add.f32 	%f1238, %f1235, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1239, %f1238, %f1228;
	mul.f32 	%f1240, %f1237, %f1227;
$L__tmp143:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs747, %f1240;
	cvt.rn.f16.f32 	%rs748, %f1239;
	mov.b32 	%r2310, {%rs748, %rs747};
	.loc	1 111 23
	add.f16x2 	%r2311, %r2381, %r1912;
$L__tmp144:
	.loc	1 152 33
	mul.f16x2 	%r2312, %r2311, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2313, %r2311, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2314, %r2311, %r2313;
	.loc	1 153 67
	fma.rn.f16x2 	%r2315, %r2311, %r2314, %r2311;
	.loc	1 153 63
	mul.f16x2 	%r2316, %r2315, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2317, %r2316, %r2316;
	mov.b32 	{%rs749, %rs750}, %r2317;
	.loc	1 143 45
	add.f16 	%rs751, %rs749, %rs5;
	add.f16 	%rs752, %rs750, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs753, %rs749, %rs8, %rs5;
	fma.rn.f16 	%rs754, %rs750, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1241, %rs751;
	cvt.f32.f16 	%f1242, %rs752;
	cvt.f32.f16 	%f1243, %rs753;
	cvt.f32.f16 	%f1244, %rs754;
	.loc	1 143 18
	mov.b32 	{%rs755, %rs756}, %r2316;
	cvt.f32.f16 	%f1245, %rs756;
	cvt.f32.f16 	%f1246, %rs755;
	.loc	1 153 12
	mov.b32 	{%rs757, %rs758}, %r2312;
	cvt.f32.f16 	%f1247, %rs758;
	cvt.f32.f16 	%f1248, %rs757;
	.loc	1 143 54
	mov.b32 	%r1612, %f1241;
	mov.b32 	%r1613, %f1243;
	// begin inline asm
	div.full.f32 %r1611, %r1612, %r1613;
	// end inline asm
	mov.b32 	%f1249, %r1611;
	mov.b32 	%r1615, %f1242;
	mov.b32 	%r1616, %f1244;
	// begin inline asm
	div.full.f32 %r1614, %r1615, %r1616;
	// end inline asm
	mov.b32 	%f1250, %r1614;
	.loc	1 143 18
	mul.f32 	%f1251, %f1249, %f1246;
	mul.f32 	%f1252, %f1250, %f1245;
	.loc	1 144 54
	max.f32 	%f1253, %f1252, 0fBF800000;
	max.f32 	%f1254, %f1251, 0fBF800000;
	min.f32 	%f1255, %f1254, 0f3F800000;
	min.f32 	%f1256, %f1253, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1257, %f1256, 0f3F800000;
	add.f32 	%f1258, %f1255, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1259, %f1258, %f1248;
	mul.f32 	%f1260, %f1257, %f1247;
$L__tmp145:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs759, %f1260;
	cvt.rn.f16.f32 	%rs760, %f1259;
	mov.b32 	%r2318, {%rs760, %rs759};
	.loc	1 111 23
	add.f16x2 	%r2319, %r2380, %r1912;
$L__tmp146:
	.loc	1 152 33
	mul.f16x2 	%r2320, %r2319, %r1806;
	.loc	1 153 90
	mul.f16x2 	%r2321, %r2319, %r1808;
	.loc	1 153 94
	mul.f16x2 	%r2322, %r2319, %r2321;
	.loc	1 153 67
	fma.rn.f16x2 	%r2323, %r2319, %r2322, %r2319;
	.loc	1 153 63
	mul.f16x2 	%r2324, %r2323, %r1812;
	.loc	1 142 15
	mul.f16x2 	%r2325, %r2324, %r2324;
	mov.b32 	{%rs761, %rs762}, %r2325;
	.loc	1 143 45
	add.f16 	%rs763, %rs761, %rs5;
	add.f16 	%rs764, %rs762, %rs5;
	.loc	1 143 81
	fma.rn.f16 	%rs765, %rs761, %rs8, %rs5;
	fma.rn.f16 	%rs766, %rs762, %rs8, %rs5;
	.loc	1 143 54
	cvt.f32.f16 	%f1261, %rs763;
	cvt.f32.f16 	%f1262, %rs764;
	cvt.f32.f16 	%f1263, %rs765;
	cvt.f32.f16 	%f1264, %rs766;
	.loc	1 143 18
	mov.b32 	{%rs767, %rs768}, %r2324;
	cvt.f32.f16 	%f1265, %rs768;
	cvt.f32.f16 	%f1266, %rs767;
	.loc	1 153 12
	mov.b32 	{%rs769, %rs770}, %r2320;
	cvt.f32.f16 	%f1267, %rs770;
	cvt.f32.f16 	%f1268, %rs769;
	.loc	1 143 54
	mov.b32 	%r1618, %f1261;
	mov.b32 	%r1619, %f1263;
	// begin inline asm
	div.full.f32 %r1617, %r1618, %r1619;
	// end inline asm
	mov.b32 	%f1269, %r1617;
	mov.b32 	%r1621, %f1262;
	mov.b32 	%r1622, %f1264;
	// begin inline asm
	div.full.f32 %r1620, %r1621, %r1622;
	// end inline asm
	mov.b32 	%f1270, %r1620;
	.loc	1 143 18
	mul.f32 	%f1271, %f1269, %f1266;
	mul.f32 	%f1272, %f1270, %f1265;
	.loc	1 144 54
	max.f32 	%f1273, %f1272, 0fBF800000;
	max.f32 	%f1274, %f1271, 0fBF800000;
	min.f32 	%f1275, %f1274, 0f3F800000;
	min.f32 	%f1276, %f1273, 0f3F800000;
	.loc	1 153 16
	add.f32 	%f1277, %f1276, 0f3F800000;
	add.f32 	%f1278, %f1275, 0f3F800000;
	.loc	1 153 12
	mul.f32 	%f1279, %f1278, %f1268;
	mul.f32 	%f1280, %f1277, %f1267;
$L__tmp147:
	.loc	1 118 30
	cvt.rn.f16.f32 	%rs771, %f1280;
	cvt.rn.f16.f32 	%rs772, %f1279;
	mov.b32 	%r2326, {%rs772, %rs771};
	bar.sync 	0;
	shr.u32 	%r2327, %r3, 2;
	or.b32  	%r2328, %r2327, %r16;
	mul.lo.s32 	%r2329, %r2328, 528;
	add.s32 	%r2330, %r1796, %r2329;
	st.shared.b32 	[%r2330], %r1920;
	st.shared.b32 	[%r2330+4224], %r1921;
	st.shared.b32 	[%r2330+64], %r1922;
	add.s32 	%r2331, %r1797, %r2329;
	st.shared.b32 	[%r2331+4224], %r1923;
	st.shared.b32 	[%r2330+128], %r1924;
	add.s32 	%r2332, %r1798, %r2329;
	st.shared.b32 	[%r2332+4224], %r1925;
	st.shared.b32 	[%r2330+192], %r1926;
	add.s32 	%r2333, %r1799, %r2329;
	st.shared.b32 	[%r2333+4224], %r1927;
	st.shared.b32 	[%r2330+256], %r1928;
	add.s32 	%r2334, %r1800, %r2329;
	st.shared.b32 	[%r2334+4224], %r1929;
	st.shared.b32 	[%r2330+320], %r1930;
	add.s32 	%r2335, %r1801, %r2329;
	st.shared.b32 	[%r2335+4224], %r1931;
	st.shared.b32 	[%r2330+384], %r1932;
	add.s32 	%r2336, %r1802, %r2329;
	st.shared.b32 	[%r2336+4224], %r1933;
	st.shared.b32 	[%r2330+448], %r1934;
	add.s32 	%r2337, %r1803, %r2329;
	st.shared.b32 	[%r2337+4224], %r1942;
	bar.sync 	0;
	shl.b32 	%r2338, %r3, 3;
	mad.lo.s32 	%r2339, %r1751, 264, %r2338;
	shl.b32 	%r2340, %r2339, 1;
	add.s32 	%r2341, %r450, %r2340;
	ld.shared.v4.u32 	{%r1623, %r1624, %r1625, %r1626}, [%r2341];
	ld.shared.v4.u32 	{%r1627, %r1628, %r1629, %r1630}, [%r2341+4224];
	ld.shared.v4.u32 	{%r1631, %r1632, %r1633, %r1634}, [%r2341+8448];
	ld.shared.v4.u32 	{%r1635, %r1636, %r1637, %r1638}, [%r2341+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2330], %r1950;
	st.shared.b32 	[%r2330+4224], %r1958;
	st.shared.b32 	[%r2330+64], %r1966;
	st.shared.b32 	[%r2331+4224], %r1974;
	st.shared.b32 	[%r2330+128], %r1982;
	st.shared.b32 	[%r2332+4224], %r1990;
	st.shared.b32 	[%r2330+192], %r1998;
	st.shared.b32 	[%r2333+4224], %r2006;
	st.shared.b32 	[%r2330+256], %r2014;
	st.shared.b32 	[%r2334+4224], %r2022;
	st.shared.b32 	[%r2330+320], %r2030;
	st.shared.b32 	[%r2335+4224], %r2038;
	st.shared.b32 	[%r2330+384], %r2046;
	st.shared.b32 	[%r2336+4224], %r2054;
	st.shared.b32 	[%r2330+448], %r2062;
	st.shared.b32 	[%r2337+4224], %r2070;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1639, %r1640, %r1641, %r1642}, [%r2341];
	ld.shared.v4.u32 	{%r1643, %r1644, %r1645, %r1646}, [%r2341+4224];
	ld.shared.v4.u32 	{%r1647, %r1648, %r1649, %r1650}, [%r2341+8448];
	ld.shared.v4.u32 	{%r1651, %r1652, %r1653, %r1654}, [%r2341+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2330], %r2078;
	st.shared.b32 	[%r2330+4224], %r2086;
	st.shared.b32 	[%r2330+64], %r2094;
	st.shared.b32 	[%r2331+4224], %r2102;
	st.shared.b32 	[%r2330+128], %r2110;
	st.shared.b32 	[%r2332+4224], %r2118;
	st.shared.b32 	[%r2330+192], %r2126;
	st.shared.b32 	[%r2333+4224], %r2134;
	st.shared.b32 	[%r2330+256], %r2142;
	st.shared.b32 	[%r2334+4224], %r2150;
	st.shared.b32 	[%r2330+320], %r2158;
	st.shared.b32 	[%r2335+4224], %r2166;
	st.shared.b32 	[%r2330+384], %r2174;
	st.shared.b32 	[%r2336+4224], %r2182;
	st.shared.b32 	[%r2330+448], %r2190;
	st.shared.b32 	[%r2337+4224], %r2198;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1655, %r1656, %r1657, %r1658}, [%r2341];
	ld.shared.v4.u32 	{%r1659, %r1660, %r1661, %r1662}, [%r2341+4224];
	ld.shared.v4.u32 	{%r1663, %r1664, %r1665, %r1666}, [%r2341+8448];
	ld.shared.v4.u32 	{%r1667, %r1668, %r1669, %r1670}, [%r2341+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2330], %r2206;
	st.shared.b32 	[%r2330+4224], %r2214;
	st.shared.b32 	[%r2330+64], %r2222;
	st.shared.b32 	[%r2331+4224], %r2230;
	st.shared.b32 	[%r2330+128], %r2238;
	st.shared.b32 	[%r2332+4224], %r2246;
	st.shared.b32 	[%r2330+192], %r2254;
	st.shared.b32 	[%r2333+4224], %r2262;
	st.shared.b32 	[%r2330+256], %r2270;
	st.shared.b32 	[%r2334+4224], %r2278;
	st.shared.b32 	[%r2330+320], %r2286;
	st.shared.b32 	[%r2335+4224], %r2294;
	st.shared.b32 	[%r2330+384], %r2302;
	st.shared.b32 	[%r2336+4224], %r2310;
	st.shared.b32 	[%r2330+448], %r2318;
	st.shared.b32 	[%r2337+4224], %r2326;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r1671, %r1672, %r1673, %r1674}, [%r2341];
	ld.shared.v4.u32 	{%r1675, %r1676, %r1677, %r1678}, [%r2341+4224];
	ld.shared.v4.u32 	{%r1679, %r1680, %r1681, %r1682}, [%r2341+8448];
	ld.shared.v4.u32 	{%r1683, %r1684, %r1685, %r1686}, [%r2341+12672];
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd58 + 0 ], { %r1623, %r1624, %r1625, %r1626 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd59 + 0 ], { %r1627, %r1628, %r1629, %r1630 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd60 + 0 ], { %r1631, %r1632, %r1633, %r1634 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd61 + 0 ], { %r1635, %r1636, %r1637, %r1638 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.v4.b32 [ %rd62 + 0 ], { %r1639, %r1640, %r1641, %r1642 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd63 + 0 ], { %r1643, %r1644, %r1645, %r1646 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd64 + 0 ], { %r1647, %r1648, %r1649, %r1650 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.v4.b32 [ %rd65 + 0 ], { %r1651, %r1652, %r1653, %r1654 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd66 + 0 ], { %r1655, %r1656, %r1657, %r1658 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd67 + 0 ], { %r1659, %r1660, %r1661, %r1662 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd68 + 0 ], { %r1663, %r1664, %r1665, %r1666 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd69 + 0 ], { %r1667, %r1668, %r1669, %r1670 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd70 + 0 ], { %r1671, %r1672, %r1673, %r1674 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd71 + 0 ], { %r1675, %r1676, %r1677, %r1678 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.v4.b32 [ %rd72 + 0 ], { %r1679, %r1680, %r1681, %r1682 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd73 + 0 ], { %r1683, %r1684, %r1685, %r1686 };
	// end inline asm
	.loc	1 129 21
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd74 + 0 ], { %r1623, %r1624, %r1625, %r1626 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd75 + 0 ], { %r1627, %r1628, %r1629, %r1630 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd76 + 0 ], { %r1631, %r1632, %r1633, %r1634 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd77 + 0 ], { %r1635, %r1636, %r1637, %r1638 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.v4.b32 [ %rd78 + 0 ], { %r1639, %r1640, %r1641, %r1642 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd79 + 0 ], { %r1643, %r1644, %r1645, %r1646 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd80 + 0 ], { %r1647, %r1648, %r1649, %r1650 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.v4.b32 [ %rd81 + 0 ], { %r1651, %r1652, %r1653, %r1654 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd82 + 0 ], { %r1655, %r1656, %r1657, %r1658 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd83 + 0 ], { %r1659, %r1660, %r1661, %r1662 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd84 + 0 ], { %r1663, %r1664, %r1665, %r1666 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd85 + 0 ], { %r1667, %r1668, %r1669, %r1670 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd86 + 0 ], { %r1671, %r1672, %r1673, %r1674 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd87 + 0 ], { %r1675, %r1676, %r1677, %r1678 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.v4.b32 [ %rd88 + 0 ], { %r1679, %r1680, %r1681, %r1682 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd89 + 0 ], { %r1683, %r1684, %r1685, %r1686 };
	// end inline asm
	.loc	1 129 4
	ret;
$L__tmp148:
$L__func_end0:

}
	.file	1 "/home/mike/PycharmProjects/tritontest/compile_matmul_kernel_bias_transpose_b_gelu.py"
	.file	2 "/home/mike/PycharmProjects/tritontest/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 235
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 111
.b8 109
.b8 112
.b8 105
.b8 108
.b8 101
.b8 95
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 105
.b8 107
.b8 101
.b8 47
.b8 80
.b8 121
.b8 99
.b8 104
.b8 97
.b8 114
.b8 109
.b8 80
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 116
.b8 101
.b8 115
.b8 116
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 104
.b8 4
.b32 104
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 58
.b8 27
.b8 4
.b32 104
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 59
.b8 27
.b8 4
.b32 104
.b64 $L__tmp4
.b64 $L__tmp5
.b8 1
.b8 93
.b8 33
.b8 4
.b32 104
.b64 $L__tmp6
.b64 $L__tmp147
.b8 1
.b8 114
.b8 34
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
)";

#define TRITON_MATMUL_KERNEL_28_SHARED_MEMORY_SIZE 49152
#define TRITON_MATMUL_KERNEL_28_BLOCK_SIZE_M 128
#define TRITON_MATMUL_KERNEL_28_BLOCK_SIZE_N 256
#define TRITON_MATMUL_KERNEL_28_NUM_WARPS 8
#define TRITON_MATMUL_KERNEL_28_FUNCTION_NAME "matmul_kernel_bias_transpose_b_gelu"
